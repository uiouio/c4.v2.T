<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZedGraph</name>
    </assembly>
    <members>
        <member name="T:ZedGraph.ArrowItem">
            <summary>
            A class that represents a graphic arrow or line object on the graph.  A list of
            ArrowItem objects is maintained by the <see cref="T:ZedGraph.GraphItemList"/> collection class.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.13 $ $Date: 2005/02/13 17:31:41 $ </version>
        </member>
        <member name="T:ZedGraph.GraphItem">
            <summary>
            An abstract base class that represents a text object on the graph.  A list of
            <see cref="T:ZedGraph.GraphItem"/> objects is maintained by the
            <see cref="T:ZedGraph.GraphItemList"/> collection class.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.13 $ $Date: 2005/01/27 05:50:34 $ </version>
        </member>
        <member name="F:ZedGraph.GraphItem.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.GraphItem.location">
            <summary>
            Protected field that stores the location of this <see cref="T:ZedGraph.GraphItem"/>.
            Use the public property <see cref="P:ZedGraph.GraphItem.Location"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.GraphItem.isVisible">
            <summary>
            Protected field that determines whether or not this <see cref="T:ZedGraph.GraphItem"/>
            is visible in the graph.  Use the public property <see cref="P:ZedGraph.GraphItem.IsVisible"/> to
            access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.GraphItem.Tag">
            <summary>
            A tag object for use by the user.  This can be used to store additional
            information associated with the <see cref="T:ZedGraph.GraphItem"/>.  ZedGraph does
            not use this value for any purpose.
            </summary>
            <remarks>
            Note that, if you are going to Serialize ZedGraph data, then any type
            that you store in <see cref="F:ZedGraph.GraphItem.Tag"/> must be a serializable type (or
            it will cause an exception).
            </remarks>
        </member>
        <member name="F:ZedGraph.GraphItem.zOrder">
            <summary>
            Protected field that determines the z-order "depth" of this
            item relative to other graphic objects.  Use the public property
            <see cref="P:ZedGraph.GraphItem.ZOrder"/> to access this value.
            </summary>
        </member>
        <member name="M:ZedGraph.GraphItem.#ctor">
            <overloads>
            Constructors for the <see cref="T:ZedGraph.GraphItem"/> class.
            </overloads>
            <summary>
            Default constructor that sets all <see cref="T:ZedGraph.GraphItem"/> properties to default
            values as defined in the <see cref="T:ZedGraph.GraphItem.Default"/> class.
            </summary>
        </member>
        <member name="M:ZedGraph.GraphItem.#ctor(System.Single,System.Single)">
            <summary>
            Constructor that sets all <see cref="T:ZedGraph.GraphItem"/> properties to default
            values as defined in the <see cref="T:ZedGraph.GraphItem.Default"/> class.
            </summary>
            <param name="x">The x position of the text.  The units
            of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.  The text will be
            aligned to this position based on the <see cref="T:ZedGraph.AlignH"/>
            property.</param>
            <param name="y">The y position of the text.  The units
            of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.  The text will be
            aligned to this position based on the
            <see cref="T:ZedGraph.AlignV"/> property.</param>
        </member>
        <member name="M:ZedGraph.GraphItem.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Constructor that creates a <see cref="T:ZedGraph.GraphItem"/> with the specified
            coordinates and all other properties to defaults as specified
            in the <see cref="T:ZedGraph.GraphItem.Default"/> class..
            </summary>
            <remarks>
            The four coordinates define the starting point and ending point for
            <see cref="T:ZedGraph.ArrowItem"/>'s, or the topleft and bottomright points for
            <see cref="T:ZedGraph.ImageItem"/>'s.  For <see cref="T:ZedGraph.GraphItem"/>'s that only require
            one point, the <see paramref="x2"/> and <see paramref="y2"/> values
            will be ignored.  The units of the coordinates are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.
            </remarks>
            <param name="x">The x position of the item.</param>
            <param name="y">The y position of the item.</param>
            <param name="x2">The x2 position of the item.</param>
            <param name="y2">The x2 position of the item.</param>
        </member>
        <member name="M:ZedGraph.GraphItem.#ctor(System.Single,System.Single,ZedGraph.CoordType)">
            <summary>
            Constructor that creates a <see cref="T:ZedGraph.GraphItem"/> with the specified
            position and <see cref="T:ZedGraph.CoordType"/>.  Other properties are set to default
            values as defined in the <see cref="T:ZedGraph.GraphItem.Default"/> class.
            </summary>
            <remarks>
            The two coordinates define the location point for the object.
            The units of the coordinates are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.
            </remarks>
            <param name="x">The x position of the item.  The item will be
            aligned to this position based on the <see cref="T:ZedGraph.AlignH"/>
            property.</param>
            <param name="y">The y position of the item.  The item will be
            aligned to this position based on the
            <see cref="T:ZedGraph.AlignV"/> property.</param>
            <param name="coordType">The <see cref="T:ZedGraph.CoordType"/> enum value that
            indicates what type of coordinate system the x and y parameters are
            referenced to.</param>
        </member>
        <member name="M:ZedGraph.GraphItem.#ctor(System.Single,System.Single,ZedGraph.CoordType,ZedGraph.AlignH,ZedGraph.AlignV)">
            <summary>
            Constructor that creates a <see cref="T:ZedGraph.GraphItem"/> with the specified
            position, <see cref="T:ZedGraph.CoordType"/>, <see cref="T:ZedGraph.AlignH"/>, and <see cref="T:ZedGraph.AlignV"/>.
            Other properties are set to default values as defined in the <see cref="T:ZedGraph.GraphItem.Default"/> class.
            </summary>
            <remarks>
            The two coordinates define the location point for the object.
            The units of the coordinates are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.
            </remarks>
            <param name="x">The x position of the item.  The item will be
            aligned to this position based on the <see cref="T:ZedGraph.AlignH"/>
            property.</param>
            <param name="y">The y position of the text.  The units
            of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.  The text will be
            aligned to this position based on the
            <see cref="T:ZedGraph.AlignV"/> property.</param>
            <param name="coordType">The <see cref="T:ZedGraph.CoordType"/> enum value that
            indicates what type of coordinate system the x and y parameters are
            referenced to.</param>
            <param name="alignH">The <see cref="T:ZedGraph.AlignH"/> enum that specifies
            the horizontal alignment of the object with respect to the (x,y) location</param>
            <param name="alignV">The <see cref="T:ZedGraph.AlignV"/> enum that specifies
            the vertical alignment of the object with respect to the (x,y) location</param>
        </member>
        <member name="M:ZedGraph.GraphItem.#ctor(System.Single,System.Single,System.Single,System.Single,ZedGraph.CoordType,ZedGraph.AlignH,ZedGraph.AlignV)">
            <summary>
            Constructor that creates a <see cref="T:ZedGraph.GraphItem"/> with the specified
            position, <see cref="T:ZedGraph.CoordType"/>, <see cref="T:ZedGraph.AlignH"/>, and <see cref="T:ZedGraph.AlignV"/>.
            Other properties are set to default values as defined in the <see cref="T:ZedGraph.GraphItem.Default"/> class.
            </summary>
            <remarks>
            The four coordinates define the starting point and ending point for
            <see cref="T:ZedGraph.ArrowItem"/>'s, or the topleft and bottomright points for
            <see cref="T:ZedGraph.ImageItem"/>'s.  For <see cref="T:ZedGraph.GraphItem"/>'s that only require
            one point, the <see paramref="x2"/> and <see paramref="y2"/> values
            will be ignored.  The units of the coordinates are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.
            </remarks>
            <param name="x">The x position of the item.</param>
            <param name="y">The y position of the item.</param>
            <param name="x2">The x2 position of the item.</param>
            <param name="y2">The x2 position of the item.</param>
            <param name="coordType">The <see cref="T:ZedGraph.CoordType"/> enum value that
            indicates what type of coordinate system the x and y parameters are
            referenced to.</param>
            <param name="alignH">The <see cref="T:ZedGraph.AlignH"/> enum that specifies
            the horizontal alignment of the object with respect to the (x,y) location</param>
            <param name="alignV">The <see cref="T:ZedGraph.AlignV"/> enum that specifies
            the vertical alignment of the object with respect to the (x,y) location</param>
        </member>
        <member name="M:ZedGraph.GraphItem.#ctor(ZedGraph.GraphItem)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.GraphItem"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.GraphItem.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the GraphItem</returns>
        </member>
        <member name="M:ZedGraph.GraphItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.GraphItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.GraphItem.Draw(System.Drawing.Graphics,ZedGraph.PaneBase,System.Single)">
            <summary>
            Render this <see cref="T:ZedGraph.GraphItem"/> object to the specified <see cref="T:System.Drawing.Graphics"/> device.
            </summary>
            <remarks>
            This method is normally only called by the Draw method
            of the parent <see cref="T:ZedGraph.GraphItemList"/> collection object.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.PaneBase"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.GraphItem.PointInBox(System.Drawing.PointF,ZedGraph.PaneBase,System.Drawing.Graphics,System.Single)">
            <summary>
            Determine if the specified screen point lies inside the bounding box of this
            <see cref="T:ZedGraph.GraphItem"/>.
            </summary>
            <param name="pt">The screen point, in pixels</param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.PaneBase"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>true if the point lies in the bounding box, false otherwise</returns>
        </member>
        <member name="P:ZedGraph.GraphItem.Location">
            <summary>
            The <see cref="T:ZedGraph.Location"/> struct that describes the location
            for this <see cref="T:ZedGraph.GraphItem"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.GraphItem.ZOrder">
            <summary>
            Gets or sets a value that determines the z-order "depth" of this
            item relative to other graphic objects.
            </summary>
            <remarks>Note that this controls the z-order with respect to
            other elements such as <see cref="T:ZedGraph.CurveItem"/>'s, <see cref="T:ZedGraph.Axis"/>
            objects, etc.  The order of <see cref="T:ZedGraph.GraphItem"/> objects having
            the same <see cref="T:ZedGraph.ZOrder"/> value is controlled by their order in
            the <see cref="T:ZedGraph.GraphItemList"/>.  The first <see cref="T:ZedGraph.GraphItem"/>
            in the list is drawn in front of other <see cref="T:ZedGraph.GraphItem"/>
            objects having the same <see cref="T:ZedGraph.ZOrder"/> value.</remarks>
        </member>
        <member name="P:ZedGraph.GraphItem.IsVisible">
            <summary>
            Gets or sets a value that determines if this <see cref="T:ZedGraph.GraphItem"/> will be
            visible in the graph.  true displays the item, false hides it.
            </summary>
        </member>
        <member name="T:ZedGraph.GraphItem.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.GraphItem"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.GraphItem.Default.AlignV">
            <summary>
            Default value for the vertical <see cref="T:ZedGraph.GraphItem"/>
            text alignment (<see cref="P:ZedGraph.GraphItem.Location"/> property).
            This is specified
            using the <see cref="F:ZedGraph.GraphItem.Default.AlignV"/> enum type.
            </summary>
        </member>
        <member name="F:ZedGraph.GraphItem.Default.AlignH">
            <summary>
            Default value for the horizontal <see cref="T:ZedGraph.GraphItem"/>
            text alignment (<see cref="P:ZedGraph.GraphItem.Location"/> property).
            This is specified
            using the <see cref="F:ZedGraph.GraphItem.Default.AlignH"/> enum type.
            </summary>
        </member>
        <member name="F:ZedGraph.GraphItem.Default.CoordFrame">
            <summary>
            The default coordinate system to be used for defining the
            <see cref="T:ZedGraph.GraphItem"/> location coordinates
            (<see cref="P:ZedGraph.GraphItem.Location"/> property).
            </summary>
            <value> The coordinate system is defined with the <see cref="T:ZedGraph.CoordType"/>
            enum</value>
        </member>
        <member name="F:ZedGraph.ArrowItem.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.ArrowItem.size">
            <summary>
            Private field that stores the arrowhead size, measured in points.
            Use the public property <see cref="P:ZedGraph.ArrowItem.Size"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.ArrowItem.color">
            <summary>
            Private field that stores the color of the arrow.
            Use the public property <see cref="P:ZedGraph.ArrowItem.Color"/> to access this value.
            </summary>
            <value>The color value is declared with a <see cref="T:System.Drawing.Color"/>
            specification</value>
        </member>
        <member name="F:ZedGraph.ArrowItem.penWidth">
            <summary>
            Private field that stores the width of the pen for drawing the line
            segment of the arrow.
            Use the public property <see cref="P:ZedGraph.ArrowItem.PenWidth"/> to access this value.
            </summary>
            <value> The width is defined in point units (1/72 inch) </value>
        </member>
        <member name="F:ZedGraph.ArrowItem.isArrowHead">
            <summary>
            Private boolean field that stores the arrowhead state.
            Use the public property <see cref="P:ZedGraph.ArrowItem.IsArrowHead"/> to access this value.
            </summary>
            <value> true if an arrowhead is to be drawn, false otherwise </value>
        </member>
        <member name="M:ZedGraph.ArrowItem.#ctor(System.Drawing.Color,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <overloads>Constructors for the <see cref="T:ZedGraph.ArrowItem"/> object</overloads>
            <summary>
            A constructor that allows the position, color, and size of the
            <see cref="T:ZedGraph.ArrowItem"/> to be pre-specified.
            </summary>
            <param name="color">An arbitrary <see cref="T:System.Drawing.Color"/> specification
            for the arrow</param>
            <param name="size">The size of the arrowhead, measured in points.</param>
            <param name="x1">The x position of the starting point that defines the
            arrow.  The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.</param>
            <param name="y1">The y position of the starting point that defines the
            arrow.  The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.</param>
            <param name="x2">The x position of the ending point that defines the
            arrow.  The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.</param>
            <param name="y2">The y position of the ending point that defines the
            arrow.  The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.</param>
        </member>
        <member name="M:ZedGraph.ArrowItem.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            A constructor that allows only the position of the
            arrow to be pre-specified.  All other properties are set to
            default values
            </summary>
            <param name="x1">The x position of the starting point that defines the
            <see cref="T:ZedGraph.ArrowItem"/>.  The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.</param>
            <param name="y1">The y position of the starting point that defines the
            <see cref="T:ZedGraph.ArrowItem"/>.  The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.</param>
            <param name="x2">The x position of the ending point that defines the
            <see cref="T:ZedGraph.ArrowItem"/>.  The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.</param>
            <param name="y2">The y position of the ending point that defines the
            <see cref="T:ZedGraph.ArrowItem"/>.  The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.</param>
        </member>
        <member name="M:ZedGraph.ArrowItem.#ctor">
            <summary>
            Default constructor -- places the <see cref="T:ZedGraph.ArrowItem"/> at location
            (0,0) to (1,1).  All other values are defaulted.
            </summary>
        </member>
        <member name="M:ZedGraph.ArrowItem.#ctor(ZedGraph.ArrowItem)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.ArrowItem"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.ArrowItem.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.ArrowItem"/></returns>
        </member>
        <member name="M:ZedGraph.ArrowItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.ArrowItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.ArrowItem.Draw(System.Drawing.Graphics,ZedGraph.PaneBase,System.Single)">
            <summary>
            Render this object to the specified <see cref="T:System.Drawing.Graphics"/> device.
            </summary>
            <remarks>
            This method is normally only called by the Draw method
            of the parent <see cref="T:ZedGraph.GraphItemList"/> collection object.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.ArrowItem.PointInBox(System.Drawing.PointF,ZedGraph.PaneBase,System.Drawing.Graphics,System.Single)">
            <summary>
            Determine if the specified screen point lies inside the bounding box of this
            <see cref="T:ZedGraph.ArrowItem"/>.
            </summary>
            <remarks>The bounding box is calculated assuming a distance
            of <see cref="F:ZedGraph.GraphPane.Default.NearestTol"/> pixels around the arrow segment.
            </remarks>
            <param name="pt">The screen point, in pixels</param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>true if the point lies in the bounding box, false otherwise</returns>
        </member>
        <member name="P:ZedGraph.ArrowItem.Size">
            <summary>
            The size of the arrowhead.
            </summary>
            <remarks>The display of the arrowhead can be
            enabled or disabled with the <see cref="P:ZedGraph.ArrowItem.IsArrowHead"/> property.
            </remarks>
            <value> The size is defined in points (1/72 inch) </value>
            <seealso cref="F:ZedGraph.ArrowItem.Default.Size"/>
        </member>
        <member name="P:ZedGraph.ArrowItem.PenWidth">
            <summary>
            The width of the line segment for the <see cref="T:ZedGraph.ArrowItem"/>
            </summary>
            <value> The width is defined in points (1/72 inch) </value>
            <seealso cref="F:ZedGraph.ArrowItem.Default.PenWidth"/>
        </member>
        <member name="P:ZedGraph.ArrowItem.Color">
            <summary>
            The <see cref="T:System.Drawing.Color"/> of the arrowhead and line segment
            </summary>
            <value> The color is defined using the
            <see cref="T:System.Drawing.Color"/> class </value>
            <seealso cref="F:ZedGraph.ArrowItem.Default.Color"/>
        </member>
        <member name="P:ZedGraph.ArrowItem.IsArrowHead">
            <summary>
            Determines whether or not to draw an arrowhead
            </summary>
            <value> true to show the arrowhead, false to show the line segment
            only</value>
            <seealso cref="F:ZedGraph.ArrowItem.Default.IsArrowHead"/>
        </member>
        <member name="T:ZedGraph.ArrowItem.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.ArrowItem"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.ArrowItem.Default.Size">
            <summary>
            The default size for the <see cref="T:ZedGraph.ArrowItem"/> item arrowhead
            (<see cref="P:ZedGraph.ArrowItem.Size"/> property).  Units are in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.ArrowItem.Default.IsArrowHead">
            <summary>
            The default display mode for the <see cref="T:ZedGraph.ArrowItem"/> item arrowhead
            (<see cref="P:ZedGraph.ArrowItem.IsArrowHead"/> property).  true to show the
            arrowhead, false to hide it.
            </summary>
        </member>
        <member name="F:ZedGraph.ArrowItem.Default.PenWidth">
            <summary>
            The default pen width used for the <see cref="T:ZedGraph.ArrowItem"/> line segment
            (<see cref="P:ZedGraph.ArrowItem.PenWidth"/> property).  Units are points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.ArrowItem.Default.Color">
            <summary>
            The default color used for the <see cref="T:ZedGraph.ArrowItem"/> line segment
            and arrowhead (<see cref="P:ZedGraph.ArrowItem.Color"/> property).
            </summary>
        </member>
        <member name="T:ZedGraph.Axis">
            <summary>
            The Axis class is an abstract base class that encompasses all properties
            and methods required to define a graph Axis.
            </summary>
            <remarks>This class is inherited by the
            <see cref="T:ZedGraph.XAxis"/>, <see cref="T:ZedGraph.YAxis"/>, and <see cref="T:ZedGraph.Y2Axis"/> classes
            to define specific characteristics for those types.
            </remarks>
            
            <author> John Champion modified by Jerry Vos </author>
            <version> $Revision: 3.26 $ $Date: 2005/03/16 03:15:10 $ </version>
        </member>
        <member name="F:ZedGraph.Axis.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.min">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> scale definitions.
            Use the public properties <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>,
            <see cref="P:ZedGraph.Axis.Step"/>, <see cref="P:ZedGraph.Axis.MinorStep"/>, <see cref="P:ZedGraph.Axis.Cross"/>,
            and <see cref="P:ZedGraph.Axis.BaseTic"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.max">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> scale definitions.
            Use the public properties <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>,
            <see cref="P:ZedGraph.Axis.Step"/>, <see cref="P:ZedGraph.Axis.MinorStep"/>, <see cref="P:ZedGraph.Axis.Cross"/>,
            and <see cref="P:ZedGraph.Axis.BaseTic"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.step">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> scale definitions.
            Use the public properties <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>,
            <see cref="P:ZedGraph.Axis.Step"/>, <see cref="P:ZedGraph.Axis.MinorStep"/>, <see cref="P:ZedGraph.Axis.Cross"/>,
            and <see cref="P:ZedGraph.Axis.BaseTic"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.minorStep">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> scale definitions.
            Use the public properties <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>,
            <see cref="P:ZedGraph.Axis.Step"/>, <see cref="P:ZedGraph.Axis.MinorStep"/>, <see cref="P:ZedGraph.Axis.Cross"/>,
            and <see cref="P:ZedGraph.Axis.BaseTic"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.cross">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> scale definitions.
            Use the public properties <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>,
            <see cref="P:ZedGraph.Axis.Step"/>, <see cref="P:ZedGraph.Axis.MinorStep"/>, <see cref="P:ZedGraph.Axis.Cross"/>,
            and <see cref="P:ZedGraph.Axis.BaseTic"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.baseTic">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> scale definitions.
            Use the public properties <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>,
            <see cref="P:ZedGraph.Axis.Step"/>, <see cref="P:ZedGraph.Axis.MinorStep"/>, <see cref="P:ZedGraph.Axis.Cross"/>,
            and <see cref="P:ZedGraph.Axis.BaseTic"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.minAuto">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> automatic scaling modes.
            Use the public properties <see cref="P:ZedGraph.Axis.MinAuto"/>, <see cref="P:ZedGraph.Axis.MaxAuto"/>,
            <see cref="P:ZedGraph.Axis.StepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            <see cref="P:ZedGraph.Axis.NumDecAuto"/>, <see cref="P:ZedGraph.Axis.ScaleMagAuto"/>, , <see cref="P:ZedGraph.Axis.ScaleFormatAuto"/>
            for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.maxAuto">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> automatic scaling modes.
            Use the public properties <see cref="P:ZedGraph.Axis.MinAuto"/>, <see cref="P:ZedGraph.Axis.MaxAuto"/>,
            <see cref="P:ZedGraph.Axis.StepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            <see cref="P:ZedGraph.Axis.NumDecAuto"/>, <see cref="P:ZedGraph.Axis.ScaleMagAuto"/>, , <see cref="P:ZedGraph.Axis.ScaleFormatAuto"/>
            for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.stepAuto">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> automatic scaling modes.
            Use the public properties <see cref="P:ZedGraph.Axis.MinAuto"/>, <see cref="P:ZedGraph.Axis.MaxAuto"/>,
            <see cref="P:ZedGraph.Axis.StepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            <see cref="P:ZedGraph.Axis.NumDecAuto"/>, <see cref="P:ZedGraph.Axis.ScaleMagAuto"/>, , <see cref="P:ZedGraph.Axis.ScaleFormatAuto"/>
            for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.minorStepAuto">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> automatic scaling modes.
            Use the public properties <see cref="P:ZedGraph.Axis.MinAuto"/>, <see cref="P:ZedGraph.Axis.MaxAuto"/>,
            <see cref="P:ZedGraph.Axis.StepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            <see cref="P:ZedGraph.Axis.NumDecAuto"/>, <see cref="P:ZedGraph.Axis.ScaleMagAuto"/>, , <see cref="P:ZedGraph.Axis.ScaleFormatAuto"/>
            for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.numDecAuto">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> automatic scaling modes.
            Use the public properties <see cref="P:ZedGraph.Axis.MinAuto"/>, <see cref="P:ZedGraph.Axis.MaxAuto"/>,
            <see cref="P:ZedGraph.Axis.StepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            <see cref="P:ZedGraph.Axis.NumDecAuto"/>, <see cref="P:ZedGraph.Axis.ScaleMagAuto"/>, , <see cref="P:ZedGraph.Axis.ScaleFormatAuto"/>
            for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.scaleMagAuto">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> automatic scaling modes.
            Use the public properties <see cref="P:ZedGraph.Axis.MinAuto"/>, <see cref="P:ZedGraph.Axis.MaxAuto"/>,
            <see cref="P:ZedGraph.Axis.StepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            <see cref="P:ZedGraph.Axis.NumDecAuto"/>, <see cref="P:ZedGraph.Axis.ScaleMagAuto"/>, , <see cref="P:ZedGraph.Axis.ScaleFormatAuto"/>
            for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.scaleFormatAuto">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> automatic scaling modes.
            Use the public properties <see cref="P:ZedGraph.Axis.MinAuto"/>, <see cref="P:ZedGraph.Axis.MaxAuto"/>,
            <see cref="P:ZedGraph.Axis.StepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            <see cref="P:ZedGraph.Axis.NumDecAuto"/>, <see cref="P:ZedGraph.Axis.ScaleMagAuto"/>, , <see cref="P:ZedGraph.Axis.ScaleFormatAuto"/>
            for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.crossAuto">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> automatic scaling modes.
            Use the public properties <see cref="P:ZedGraph.Axis.MinAuto"/>, <see cref="P:ZedGraph.Axis.MaxAuto"/>,
            <see cref="P:ZedGraph.Axis.StepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            <see cref="P:ZedGraph.Axis.NumDecAuto"/>, <see cref="P:ZedGraph.Axis.ScaleMagAuto"/>, , <see cref="P:ZedGraph.Axis.ScaleFormatAuto"/>
            for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.minGrace">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> "grace" settings.
            These values determine how much extra space is left before the first data value
            and after the last data value.
            Use the public properties <see cref="P:ZedGraph.Axis.MinGrace"/> and <see cref="P:ZedGraph.Axis.MaxGrace"/>
            for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.maxGrace">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> "grace" settings.
            These values determine how much extra space is left before the first data value
            and after the last data value.
            Use the public properties <see cref="P:ZedGraph.Axis.MinGrace"/> and <see cref="P:ZedGraph.Axis.MaxGrace"/>
            for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.numDec">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> scale value display.
            Use the public properties <see cref="P:ZedGraph.Axis.NumDec"/> and <see cref="P:ZedGraph.Axis.ScaleMag"/>
            for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.scaleMag">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> scale value display.
            Use the public properties <see cref="P:ZedGraph.Axis.NumDec"/> and <see cref="P:ZedGraph.Axis.ScaleMag"/>
            for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.isVisible">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isShowGrid">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isShowTitle">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isZeroLine">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isTic">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isInsideTic">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isOppositeTic">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isMinorTic">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isShowMinorGrid">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isMinorInsideTic">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isMinorOppositeTic">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isTicsBetweenLabels">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isReverse">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isOmitMag">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isUseTenPower">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.isPreventLabelOverlap">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> attributes.
            Use the public properties <see cref="P:ZedGraph.Axis.IsVisible"/>, <see cref="P:ZedGraph.Axis.IsShowGrid"/>,
            <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>, <see cref="P:ZedGraph.Axis.IsZeroLine"/>,  <see cref="P:ZedGraph.Axis.IsShowTitle"/>,
            <see cref="P:ZedGraph.Axis.IsTic"/>, <see cref="P:ZedGraph.Axis.IsInsideTic"/>, <see cref="P:ZedGraph.Axis.IsOppositeTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorTic"/>, <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>,
            <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>, <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>,
            <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsReverse"/>,
            <see cref="P:ZedGraph.Axis.IsOmitMag"/>, <see cref="P:ZedGraph.Axis.IsText"/>, <see cref="P:ZedGraph.Axis.IsUseTenPower"/>,
            and <see cref="P:ZedGraph.Axis.IsDate"/> for access to these values.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.type">
            <summary> Private field for the <see cref="T:ZedGraph.Axis"/> type.  This can be one of the
            types as defined in the <see cref="T:ZedGraph.AxisType"/> enumeration.
            Use the public property <see cref="P:ZedGraph.Axis.Type"/>
            for access to this value. </summary>
        </member>
        <member name="F:ZedGraph.Axis.title">
            <summary> Private field for the <see cref="T:ZedGraph.Axis"/> title string.
            Use the public property <see cref="P:ZedGraph.Axis.Title"/>
            for access to this value. </summary>
        </member>
        <member name="F:ZedGraph.Axis.scaleFormat">
            <summary> Private field for the format of the <see cref="T:ZedGraph.Axis"/> tic labels.
            This field is only used if the <see cref="P:ZedGraph.Axis.Type"/> is set to <see cref="F:ZedGraph.AxisType.Date"/>.
            Use the public property <see cref="P:ZedGraph.Axis.ScaleFormat"/>
            for access to this value. </summary>
            <seealso cref="P:ZedGraph.Axis.ScaleFormatAuto"/>
        </member>
        <member name="F:ZedGraph.Axis.scaleAlign">
            <summary> Private field for the alignment of the <see cref="T:ZedGraph.Axis"/> tic labels.
            This fields controls whether the inside, center, or outside edges of the text labels are aligned.
            Use the public property <see cref="P:ZedGraph.Axis.ScaleAlign"/>
            for access to this value. </summary>
            <seealso cref="P:ZedGraph.Axis.ScaleFormatAuto"/>
        </member>
        <member name="F:ZedGraph.Axis.textLabels">
            <summary> Private <see cref="T:System.Collections.ArrayList"/> field for the <see cref="T:ZedGraph.Axis"/> array of text labels.
            This property is only used if <see cref="P:ZedGraph.Axis.Type"/> is set to
            <see cref="F:ZedGraph.AxisType.Text"/> </summary>
        </member>
        <member name="F:ZedGraph.Axis.titleFontSpec">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> font specificatios.
            Use the public properties <see cref="P:ZedGraph.Axis.TitleFontSpec"/> and
            <see cref="P:ZedGraph.Axis.ScaleFontSpec"/> for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.scaleFontSpec">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> font specificatios.
            Use the public properties <see cref="P:ZedGraph.Axis.TitleFontSpec"/> and
            <see cref="P:ZedGraph.Axis.ScaleFontSpec"/> for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.ticPenWidth">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> drawing dimensions.
            Use the public properties <see cref="P:ZedGraph.Axis.TicPenWidth"/>, <see cref="P:ZedGraph.Axis.TicSize"/>,
            <see cref="P:ZedGraph.Axis.MinorTicSize"/>,
            <see cref="P:ZedGraph.Axis.GridDashOn"/>, <see cref="P:ZedGraph.Axis.GridDashOff"/>,
            <see cref="P:ZedGraph.Axis.GridPenWidth"/>,
            <see cref="P:ZedGraph.Axis.MinorGridDashOn"/>, <see cref="P:ZedGraph.Axis.MinorGridDashOff"/>,
            and <see cref="P:ZedGraph.Axis.MinorGridPenWidth"/> for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.ticSize">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> drawing dimensions.
            Use the public properties <see cref="P:ZedGraph.Axis.TicPenWidth"/>, <see cref="P:ZedGraph.Axis.TicSize"/>,
            <see cref="P:ZedGraph.Axis.MinorTicSize"/>,
            <see cref="P:ZedGraph.Axis.GridDashOn"/>, <see cref="P:ZedGraph.Axis.GridDashOff"/>,
            <see cref="P:ZedGraph.Axis.GridPenWidth"/>,
            <see cref="P:ZedGraph.Axis.MinorGridDashOn"/>, <see cref="P:ZedGraph.Axis.MinorGridDashOff"/>,
            and <see cref="P:ZedGraph.Axis.MinorGridPenWidth"/> for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.minorTicSize">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> drawing dimensions.
            Use the public properties <see cref="P:ZedGraph.Axis.TicPenWidth"/>, <see cref="P:ZedGraph.Axis.TicSize"/>,
            <see cref="P:ZedGraph.Axis.MinorTicSize"/>,
            <see cref="P:ZedGraph.Axis.GridDashOn"/>, <see cref="P:ZedGraph.Axis.GridDashOff"/>,
            <see cref="P:ZedGraph.Axis.GridPenWidth"/>,
            <see cref="P:ZedGraph.Axis.MinorGridDashOn"/>, <see cref="P:ZedGraph.Axis.MinorGridDashOff"/>,
            and <see cref="P:ZedGraph.Axis.MinorGridPenWidth"/> for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.gridDashOn">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> drawing dimensions.
            Use the public properties <see cref="P:ZedGraph.Axis.TicPenWidth"/>, <see cref="P:ZedGraph.Axis.TicSize"/>,
            <see cref="P:ZedGraph.Axis.MinorTicSize"/>,
            <see cref="P:ZedGraph.Axis.GridDashOn"/>, <see cref="P:ZedGraph.Axis.GridDashOff"/>,
            <see cref="P:ZedGraph.Axis.GridPenWidth"/>,
            <see cref="P:ZedGraph.Axis.MinorGridDashOn"/>, <see cref="P:ZedGraph.Axis.MinorGridDashOff"/>,
            and <see cref="P:ZedGraph.Axis.MinorGridPenWidth"/> for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.gridDashOff">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> drawing dimensions.
            Use the public properties <see cref="P:ZedGraph.Axis.TicPenWidth"/>, <see cref="P:ZedGraph.Axis.TicSize"/>,
            <see cref="P:ZedGraph.Axis.MinorTicSize"/>,
            <see cref="P:ZedGraph.Axis.GridDashOn"/>, <see cref="P:ZedGraph.Axis.GridDashOff"/>,
            <see cref="P:ZedGraph.Axis.GridPenWidth"/>,
            <see cref="P:ZedGraph.Axis.MinorGridDashOn"/>, <see cref="P:ZedGraph.Axis.MinorGridDashOff"/>,
            and <see cref="P:ZedGraph.Axis.MinorGridPenWidth"/> for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.gridPenWidth">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> drawing dimensions.
            Use the public properties <see cref="P:ZedGraph.Axis.TicPenWidth"/>, <see cref="P:ZedGraph.Axis.TicSize"/>,
            <see cref="P:ZedGraph.Axis.MinorTicSize"/>,
            <see cref="P:ZedGraph.Axis.GridDashOn"/>, <see cref="P:ZedGraph.Axis.GridDashOff"/>,
            <see cref="P:ZedGraph.Axis.GridPenWidth"/>,
            <see cref="P:ZedGraph.Axis.MinorGridDashOn"/>, <see cref="P:ZedGraph.Axis.MinorGridDashOff"/>,
            and <see cref="P:ZedGraph.Axis.MinorGridPenWidth"/> for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.minorGridDashOn">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> drawing dimensions.
            Use the public properties <see cref="P:ZedGraph.Axis.TicPenWidth"/>, <see cref="P:ZedGraph.Axis.TicSize"/>,
            <see cref="P:ZedGraph.Axis.MinorTicSize"/>,
            <see cref="P:ZedGraph.Axis.GridDashOn"/>, <see cref="P:ZedGraph.Axis.GridDashOff"/>,
            <see cref="P:ZedGraph.Axis.GridPenWidth"/>,
            <see cref="P:ZedGraph.Axis.MinorGridDashOn"/>, <see cref="P:ZedGraph.Axis.MinorGridDashOff"/>,
            and <see cref="P:ZedGraph.Axis.MinorGridPenWidth"/> for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.minorGridDashOff">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> drawing dimensions.
            Use the public properties <see cref="P:ZedGraph.Axis.TicPenWidth"/>, <see cref="P:ZedGraph.Axis.TicSize"/>,
            <see cref="P:ZedGraph.Axis.MinorTicSize"/>,
            <see cref="P:ZedGraph.Axis.GridDashOn"/>, <see cref="P:ZedGraph.Axis.GridDashOff"/>,
            <see cref="P:ZedGraph.Axis.GridPenWidth"/>,
            <see cref="P:ZedGraph.Axis.MinorGridDashOn"/>, <see cref="P:ZedGraph.Axis.MinorGridDashOff"/>,
            and <see cref="P:ZedGraph.Axis.MinorGridPenWidth"/> for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.minorGridPenWidth">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> drawing dimensions.
            Use the public properties <see cref="P:ZedGraph.Axis.TicPenWidth"/>, <see cref="P:ZedGraph.Axis.TicSize"/>,
            <see cref="P:ZedGraph.Axis.MinorTicSize"/>,
            <see cref="P:ZedGraph.Axis.GridDashOn"/>, <see cref="P:ZedGraph.Axis.GridDashOff"/>,
            <see cref="P:ZedGraph.Axis.GridPenWidth"/>,
            <see cref="P:ZedGraph.Axis.MinorGridDashOn"/>, <see cref="P:ZedGraph.Axis.MinorGridDashOff"/>,
            and <see cref="P:ZedGraph.Axis.MinorGridPenWidth"/> for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.minSpace">
            <summary>
            Private field for the <see cref="T:ZedGraph.Axis"/> minimum allowable space allocation.
            Use the public property <see cref="P:ZedGraph.Axis.MinSpace"/> to access this value.
            </summary>
            <seealso cref="F:ZedGraph.Axis.Default.MinSpace"/>
        </member>
        <member name="F:ZedGraph.Axis.color">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> colors.
            Use the public properties <see cref="P:ZedGraph.Axis.Color"/> and
            <see cref="P:ZedGraph.Axis.GridColor"/> for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.gridColor">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> colors.
            Use the public properties <see cref="P:ZedGraph.Axis.Color"/> and
            <see cref="P:ZedGraph.Axis.GridColor"/> for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.minorGridColor">
            <summary> Private fields for the <see cref="T:ZedGraph.Axis"/> colors.
            Use the public properties <see cref="P:ZedGraph.Axis.Color"/> and
            <see cref="P:ZedGraph.Axis.GridColor"/> for access to these values. </summary>
        </member>
        <member name="F:ZedGraph.Axis.majorUnit">
            <summary>
            Private fields for Unit types to be used for the major and minor tics.
            See <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="P:ZedGraph.Axis.MinorUnit"/> for the corresponding
            public properties.
            These types only apply for date-time scales (<see cref="P:ZedGraph.Axis.IsDate"/>).
            </summary>
            <value>The value of these types is of enumeration type <see cref="T:ZedGraph.DateUnit"/>
            </value>
        </member>
        <member name="F:ZedGraph.Axis.minorUnit">
            <summary>
            Private fields for Unit types to be used for the major and minor tics.
            See <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="P:ZedGraph.Axis.MinorUnit"/> for the corresponding
            public properties.
            These types only apply for date-time scales (<see cref="P:ZedGraph.Axis.IsDate"/>).
            </summary>
            <value>The value of these types is of enumeration type <see cref="T:ZedGraph.DateUnit"/>
            </value>
        </member>
        <member name="F:ZedGraph.Axis.minPix">
            <summary>
            Scale values for calculating transforms.  These are temporary values
            used only during the Draw process.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.maxPix">
            <summary>
            Scale values for calculating transforms.  These are temporary values
            used only during the Draw process.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.minScale">
            <summary>
            Scale values for calculating transforms.  These are temporary values
            used only during the Draw process.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.maxScale">
            <summary>
            Scale values for calculating transforms.  These are temporary values
            used only during the Draw process.
            </summary>
        </member>
        <member name="M:ZedGraph.Axis.#ctor">
            <summary>
            Default constructor for <see cref="T:ZedGraph.Axis"/> that sets all axis properties
            to default values as defined in the <see cref="T:ZedGraph.Axis.Default"/> class.
            </summary>
        </member>
        <member name="M:ZedGraph.Axis.#ctor(ZedGraph.Axis)">
            <summary>
            The Copy Constructor.
            </summary>
            <param name="rhs">The Axis object from which to copy</param>
        </member>
        <member name="M:ZedGraph.Axis.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.Axis.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.Axis.ScaledTic(System.Single)">
            <summary>
            Calculate the scaled tic size for this <see cref="T:ZedGraph.Axis"/>
            </summary>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>The scaled tic size, in points (1/72 inch)</returns>
            <seealso cref="P:ZedGraph.Axis.TicSize"/>
            <seealso cref="P:ZedGraph.Axis.MinorTicSize"/>
            <seealso cref="P:ZedGraph.Axis.TitleFontSpec"/>
            <seealso cref="P:ZedGraph.Axis.ScaleFontSpec"/>
            <seealso cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>
        </member>
        <member name="M:ZedGraph.Axis.ScaledMinorTic(System.Single)">
            <summary>
            Calculate the scaled minor tic size for this <see cref="T:ZedGraph.Axis"/>
            </summary>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>The scaled tic size, in points (1/72 inch)</returns>
            <seealso cref="P:ZedGraph.Axis.MinorTicSize"/>
            <seealso cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>
        </member>
        <member name="M:ZedGraph.Axis.ResetAutoScale(ZedGraph.GraphPane,System.Drawing.Graphics)">
            <summary>
            Restore the scale ranging to automatic mode, and recalculate the
            <see cref="T:ZedGraph.Axis"/> scale ranges
            </summary>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <seealso cref="P:ZedGraph.Axis.MinAuto"/>
            <seealso cref="P:ZedGraph.Axis.MaxAuto"/>
            <seealso cref="P:ZedGraph.Axis.StepAuto"/>
            <seealso cref="P:ZedGraph.Axis.ScaleMagAuto"/>
            <seealso cref="P:ZedGraph.Axis.ScaleFormatAuto"/>
            <seealso cref="P:ZedGraph.Axis.NumDecAuto"/>
        </member>
        <member name="M:ZedGraph.Axis.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)">
            <summary>
            Do all rendering associated with this <see cref="T:ZedGraph.Axis"/> to the specified
            <see cref="T:System.Drawing.Graphics"/> device.
            </summary>
            <remarks>
            This method is normally only
            called by the Draw method of the parent <see cref="T:ZedGraph.GraphPane"/> object.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.Axis.SetupScaleData(ZedGraph.GraphPane)">
            <summary>
            Setup some temporary transform values in preparation for rendering the
            <see cref="T:ZedGraph.Axis"/>.
            </summary>
            <remarks>
            This method is typically called by the parent <see cref="T:ZedGraph.GraphPane"/>
            object as part of the <see cref="M:ZedGraph.GraphPane.Draw(System.Drawing.Graphics)"/> method.  It is also
            called by <see cref="M:ZedGraph.GraphPane.GeneralTransform(System.Drawing.PointF,ZedGraph.CoordType)"/> and
            <see cref="M:ZedGraph.GraphPane.ReverseTransform(System.Drawing.PointF,System.Double@,System.Double@,System.Double@)"/> methods to setup for
            coordinate transformations.
            </remarks>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
        </member>
        <member name="M:ZedGraph.Axis.SetMinSpaceBuffer(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single,System.Boolean)">
            <summary>
            This method will set the <see cref="P:ZedGraph.Axis.MinSpace"/> property for this <see cref="T:ZedGraph.Axis"/>
            using the currently required space multiplied by a fraction (<paramref>bufferFraction</paramref>).
            </summary>
            <remarks>
            The currently required space is calculated using <see cref="M:ZedGraph.Axis.CalcSpace(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)"/>, and is
            based on current data ranges, font sizes, etc.  The "space" is actually the amount of space
            required to fit the tic marks, scale labels, and axis title.
            </remarks>
            <param name="g">A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.</param>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.</param>
            <param name="bufferFraction">The amount of space to allocate for the axis, expressed
            as a fraction of the currently required space.  For example, a value of 1.2 would
            allow for 20% extra above the currently required space.</param>
            <param name="isGrowOnly">If true, then this method will only modify the <see cref="P:ZedGraph.Axis.MinSpace"/>
            property if the calculated result is more than the current value.</param>
        </member>
        <member name="M:ZedGraph.Axis.SetTransformMatrix(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)">
            <summary>
            Setup the Transform Matrix to handle drawing of this <see cref="T:ZedGraph.Axis"/>
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.Axis.CalcCrossShift(ZedGraph.GraphPane)">
            <summary>
            Calculate the "shift" size, in pixels, in order to shift the axis from its default
            location to the value specified by <see cref="P:ZedGraph.Axis.Cross"/>.
            </summary>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <returns>The shift amount measured in pixels</returns>
        </member>
        <member name="M:ZedGraph.Axis.GetScaleMaxSpace(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)">
            <summary>
            Get the maximum width of the scale value text that is required to label this
            <see cref="T:ZedGraph.Axis"/>.
            The results of this method are used to determine how much space is required for
            the axis labels.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>the maximum width of the text in pixel units</returns>
        </member>
        <member name="M:ZedGraph.Axis.CalcSpace(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)">
            <summary>
            Calculate the space required for this <see cref="T:ZedGraph.Axis"/>
            object.  This is the space between the paneRect and the axisRect for
            this particular axis.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>Returns the space, in pixels, required for this axis (between the
            paneRect and axisRect)</returns>
        </member>
        <member name="M:ZedGraph.Axis.DrawScale(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)">
            <summary>
            Draw the scale, including the tic marks, value labels, and grid lines as
            required for this <see cref="T:ZedGraph.Axis"/>.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.Axis.GetUnitMultiple(ZedGraph.DateUnit)">
            <summary>
            Internal routine to calculate a multiplier to the selected unit back to days.
            </summary>
            <param name="unit">The unit type for which the multiplier is to be
            calculated</param>
            <returns>
            This is ratio of days/selected unit
            </returns>
        </member>
        <member name="M:ZedGraph.Axis.CalcNumTics">
            <summary>
            Internal routine to determine the ordinals of the first and last major axis label.
            </summary>
            <returns>
            This is the total number of major tics for this axis.
            </returns>
        </member>
        <member name="M:ZedGraph.Axis.DrawLabels(System.Drawing.Graphics,ZedGraph.GraphPane,System.Double,System.Int32,System.Single,System.Single,System.Single)">
            <summary>
            Draw the value labels, tic marks, and grid lines as
            required for this <see cref="T:ZedGraph.Axis"/>.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="baseVal">
            The first major tic value for the axis
            </param>
            <param name="nTics">
            The total number of major tics for the axis
            </param>
            <param name="topPix">
            The pixel location of the far side of the axisRect from this axis.
            This value is the axisRect.Height for the XAxis, or the axisRect.Width
            for the YAxis and Y2Axis.
            </param>
            <param name="shift">The number of pixels to shift this axis, based on the
            value of <see cref="P:ZedGraph.Axis.Cross"/>.  A positive value is into the axisRect relative to
            the default axis position.</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.Axis.DrawATic(System.Drawing.Graphics,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draw a tic mark at the specified single position.  This includes the inner, outer
            and opposite tic marks as required.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pen">Graphic <see cref="T:System.Drawing.Pen"/> with which to draw the tic mark.</param>
            <param name="pixVal">The pixel location of the tic mark on this
            <see cref="T:ZedGraph.Axis"/></param>
            <param name="topPix">The pixel value of the top of the axis border</param>
            <param name="shift">The number of pixels to shift this axis, based on the
            value of <see cref="P:ZedGraph.Axis.Cross"/>.  A positive value is into the axisRect relative to
            the default axis position.</param>
            <param name="scaledTic">The length of the tic mark, in points (1/72 inch)</param>
        </member>
        <member name="M:ZedGraph.Axis.CalcBaseTic">
            <summary>
            Determine the value for the first major tic.
            </summary>
            <remarks>
            This is done by finding the first possible value that is an integral multiple of
            the step size, taking into account the date/time units if appropriate.
            This method properly accounts for <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsText"/>,
            and other axis format settings.
            </remarks>
            <returns>
            First major tic value (floating point double).
            </returns>
        </member>
        <member name="M:ZedGraph.Axis.CalcMajorTicValue(System.Double,System.Double)">
            <summary>
            Determine the value for any major tic.
            </summary>
            <remarks>
            This method properly accounts for <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsText"/>,
            and other axis format settings.
            </remarks>
            <param name="baseVal">
            The value of the first major tic (floating point double)
            </param>
            <param name="tic">
            The major tic number (0 = first major tic).  For log scales, this is the actual power of 10.
            </param>
            <returns>
            The specified major tic value (floating point double).
            </returns>
        </member>
        <member name="M:ZedGraph.Axis.MakeLabel(ZedGraph.GraphPane,System.Int32,System.Double,System.String@)">
            <summary>
            Make a value label for the axis at the specified ordinal position.
            </summary>
            <remarks>
            This method properly accounts for <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsText"/>,
            and other axis format settings.
            </remarks>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="index">
            The zero-based, ordinal index of the label to be generated.  For example, a value of 2 would
            cause the third value label on the axis to be generated.
            </param>
            <param name="dVal">
            The numeric value associated with the label.  This value is ignored for log (<see cref="P:ZedGraph.Axis.IsLog"/>)
            and text (<see cref="P:ZedGraph.Axis.IsText"/>) type axes.
            </param>
            <param name="label">
            Output only.  The resulting value label.
            </param>
        </member>
        <member name="M:ZedGraph.Axis.DrawMinorTics(System.Drawing.Graphics,ZedGraph.GraphPane,System.Double,System.Single,System.Single,System.Single)">
            <summary>
            Draw the minor tic marks as required for this <see cref="T:ZedGraph.Axis"/>.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="baseVal">
            The scale value for the first major tic position.  This is the reference point
            for all other tic marks.
            </param>
            <param name="shift">The number of pixels to shift this axis, based on the
            value of <see cref="P:ZedGraph.Axis.Cross"/>.  A positive value is into the axisRect relative to
            the default axis position.</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <param name="topPix">
            The pixel location of the far side of the axisRect from this axis.
            This value is the axisRect.Height for the XAxis, or the axisRect.Width
            for the YAxis and Y2Axis.
            </param>
        </member>
        <member name="M:ZedGraph.Axis.CalcMinorTicValue(System.Double,System.Int32)">
            <summary>
            Determine the value for any minor tic.
            </summary>
            <remarks>
            This method properly accounts for <see cref="P:ZedGraph.Axis.IsLog"/>, <see cref="P:ZedGraph.Axis.IsText"/>,
            and other axis format settings.
            </remarks>
            <param name="baseVal">
            The value of the first major tic (floating point double).  This tic value is the base
            reference for all tics (including minor ones).
            </param>
            <param name="iTic">
            The major tic number (0 = first major tic).  For log scales, this is the actual power of 10.
            </param>
            <returns>
            The specified minor tic value (floating point double).
            </returns>
        </member>
        <member name="M:ZedGraph.Axis.CalcMinorStart(System.Double)">
            <summary>
            Internal routine to determine the ordinals of the first minor tic mark
            </summary>
            <param name="baseVal">
            The value of the first major tic for the axis.
            </param>
            <returns>
            The ordinal position of the first minor tic, relative to the first major tic.
            This value can be negative (e.g., -3 means the first minor tic is 3 minor step
            increments before the first major tic.
            </returns>
        </member>
        <member name="M:ZedGraph.Axis.DrawTitle(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single,System.Single)">
            <summary>
            Draw the title for this <see cref="T:ZedGraph.Axis"/>.
            </summary>
            <remarks>On entry, it is assumed that the
            graphics transform has been configured so that the origin is at the left side
            of this axis, and the axis is aligned along the X coordinate direction.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="shift">The number of pixels to shift this axis, based on the
            value of <see cref="P:ZedGraph.Axis.Cross"/>.  A positive value is into the axisRect relative to
            the default axis position.</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.Axis.GetClusterWidth(ZedGraph.GraphPane)">
            <summary>
            Determine the width, in pixel units, of each bar cluster including
            the cluster gaps and bar gaps.
            </summary>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object
            associated with this <see cref="T:ZedGraph.Axis"/></param>
            <returns>The width of each bar cluster, in pixel units</returns>
        </member>
        <member name="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)">
            <summary>
            Select a reasonable scale given a range of data values.
            </summary>
            <remarks>
            The scale range is chosen
            based on increments of 1, 2, or 5 (because they are even divisors of 10).  This
            routine honors the <see cref="P:ZedGraph.Axis.MinAuto"/>, <see cref="P:ZedGraph.Axis.MaxAuto"/>,
            and <see cref="P:ZedGraph.Axis.StepAuto"/> autorange settings as well as the <see cref="P:ZedGraph.Axis.IsLog"/>
            setting.  In the event that any of the autorange settings are false, the
            corresponding <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>, or <see cref="P:ZedGraph.Axis.Step"/>
            setting is explicitly honored, and the remaining autorange settings (if any) will
            be calculated to accomodate the non-autoranged values.  The basic defaults for
            scale selection are defined using <see cref="F:ZedGraph.Axis.Default.ZeroLever"/>,
            <see cref="F:ZedGraph.Axis.Default.TargetXSteps"/>, and <see cref="F:ZedGraph.Axis.Default.TargetYSteps"/>
            from the <see cref="T:ZedGraph.Axis.Default"/> default class.
            <para>On Exit:</para>
            <para><see cref="P:ZedGraph.Axis.Min"/> is set to scale minimum (if <see cref="P:ZedGraph.Axis.MinAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.Max"/> is set to scale maximum (if <see cref="P:ZedGraph.Axis.MaxAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.Step"/> is set to scale step size (if <see cref="P:ZedGraph.Axis.StepAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.MinorStep"/> is set to scale minor step size (if <see cref="P:ZedGraph.Axis.MinorStepAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.ScaleMag"/> is set to a magnitude multiplier according to the data</para>
            <para><see cref="P:ZedGraph.Axis.NumDec"/> is set to the number of decimal places to display (if <see cref="P:ZedGraph.Axis.NumDecAuto"/> = true)</para>
            </remarks>
            <param name="minVal">The minimum value of the data range for setting this
            <see cref="T:ZedGraph.Axis"/> scale range</param>
            <param name="maxVal">The maximum value of the data range for setting this
            <see cref="T:ZedGraph.Axis"/> scale range</param>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object
            associated with this <see cref="T:ZedGraph.Axis"/></param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.Axis.PickTextScale(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)">
            <summary>
            Select a reasonable text axis scale given a range of data values.
            </summary>
            <remarks>
            This method only applies to <see cref="F:ZedGraph.AxisType.Text"/> type axes, and it
            is called by the general <see cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/> method.  This is an ordinal
            type, such that the labeled values start at 1.0 and increment by 1.0 for
            each successive label.  The maximum number of labels on the graph is
            determined by <see cref="F:ZedGraph.Axis.Default.MaxTextLabels"/>.  If necessary, this method will
            set the <see cref="P:ZedGraph.Axis.Step"/> value to greater than 1.0 in order to keep the total
            labels displayed below <see cref="F:ZedGraph.Axis.Default.MaxTextLabels"/>.  For example, a
            <see cref="P:ZedGraph.Axis.Step"/> size of 2.0 would only display every other label on the
            axis.  The <see cref="P:ZedGraph.Axis.Step"/> value calculated by this routine is always
            an integral value.  This
            method honors the <see cref="P:ZedGraph.Axis.MinAuto"/>, <see cref="P:ZedGraph.Axis.MaxAuto"/>,
            and <see cref="P:ZedGraph.Axis.StepAuto"/> autorange settings.
            In the event that any of the autorange settings are false, the
            corresponding <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>, or <see cref="P:ZedGraph.Axis.Step"/>
            setting is explicitly honored, and the remaining autorange settings (if any) will
            be calculated to accomodate the non-autoranged values.
            <para>On Exit:</para>
            <para><see cref="P:ZedGraph.Axis.Min"/> is set to scale minimum (if <see cref="P:ZedGraph.Axis.MinAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.Max"/> is set to scale maximum (if <see cref="P:ZedGraph.Axis.MaxAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.Step"/> is set to scale step size (if <see cref="P:ZedGraph.Axis.StepAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.MinorStep"/> is set to scale minor step size (if <see cref="P:ZedGraph.Axis.MinorStepAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.ScaleMag"/> is set to a magnitude multiplier according to the data</para>
            <para><see cref="P:ZedGraph.Axis.NumDec"/> is set to the number of decimal places to display (if <see cref="P:ZedGraph.Axis.NumDecAuto"/> = true)</para>
            </remarks>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object
            associated with this <see cref="T:ZedGraph.Axis"/></param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <seealso cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/>
            <seealso cref="F:ZedGraph.AxisType.Text"/>
        </member>
        <member name="M:ZedGraph.Axis.CalcMaxLabels(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)">
            <summary>
            Calculate the maximum number of labels that will fit on this axis.
            </summary>
            <remarks>
            This method works for
            both X and Y direction axes, and it works for angled text (assuming that a bounding box
            is an appropriate measure).  Technically, labels at 45 degree angles could fit better than
            the return value of this method since the bounding boxes can overlap without the labels actually
            overlapping.
            </remarks>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object
            associated with this <see cref="T:ZedGraph.Axis"/></param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.Axis.PickOrdinalScale(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)">
            <summary>
            Select a reasonable ordinal axis scale given a range of data values.
            </summary>
            <remarks>
            This method only applies to <see cref="F:ZedGraph.AxisType.Ordinal"/> type axes, and it
            is called by the general <see cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/> method.  The scale range is chosen
            based on increments of 1, 2, or 5 (because they are even divisors of 10).
            Being an ordinal axis type, the <see cref="P:ZedGraph.Axis.Step"/> value will always be integral.  This
            method honors the <see cref="P:ZedGraph.Axis.MinAuto"/>, <see cref="P:ZedGraph.Axis.MaxAuto"/>,
            and <see cref="P:ZedGraph.Axis.StepAuto"/> autorange settings.
            In the event that any of the autorange settings are false, the
            corresponding <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>, or <see cref="P:ZedGraph.Axis.Step"/>
            setting is explicitly honored, and the remaining autorange settings (if any) will
            be calculated to accomodate the non-autoranged values.  The basic defaults for
            scale selection are defined using <see cref="F:ZedGraph.Axis.Default.ZeroLever"/>,
            <see cref="F:ZedGraph.Axis.Default.TargetXSteps"/>, and <see cref="F:ZedGraph.Axis.Default.TargetYSteps"/>
            from the <see cref="T:ZedGraph.Axis.Default"/> default class.
            <para>On Exit:</para>
            <para><see cref="P:ZedGraph.Axis.Min"/> is set to scale minimum (if <see cref="P:ZedGraph.Axis.MinAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.Max"/> is set to scale maximum (if <see cref="P:ZedGraph.Axis.MaxAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.Step"/> is set to scale step size (if <see cref="P:ZedGraph.Axis.StepAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.MinorStep"/> is set to scale minor step size (if <see cref="P:ZedGraph.Axis.MinorStepAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.ScaleMag"/> is set to a magnitude multiplier according to the data</para>
            <para><see cref="P:ZedGraph.Axis.NumDec"/> is set to the number of decimal places to display (if <see cref="P:ZedGraph.Axis.NumDecAuto"/> = true)</para>
            </remarks>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object
            associated with this <see cref="T:ZedGraph.Axis"/></param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <seealso cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/>
            <seealso cref="F:ZedGraph.AxisType.Ordinal"/>
        </member>
        <member name="M:ZedGraph.Axis.PickLogScale">
            <summary>
            Select a reasonable base 10 logarithmic axis scale given a range of data values.
            </summary>
            <remarks>
            This method only applies to <see cref="F:ZedGraph.AxisType.Log"/> type axes, and it
            is called by the general <see cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/> method.  The scale range is chosen
            based always on powers of 10 (full log cycles).  This
            method honors the <see cref="P:ZedGraph.Axis.MinAuto"/>, <see cref="P:ZedGraph.Axis.MaxAuto"/>,
            and <see cref="P:ZedGraph.Axis.StepAuto"/> autorange settings.
            In the event that any of the autorange settings are false, the
            corresponding <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>, or <see cref="P:ZedGraph.Axis.Step"/>
            setting is explicitly honored, and the remaining autorange settings (if any) will
            be calculated to accomodate the non-autoranged values.  For log axes, the MinorStep
            value is not used.
            <para>On Exit:</para>
            <para><see cref="P:ZedGraph.Axis.Min"/> is set to scale minimum (if <see cref="P:ZedGraph.Axis.MinAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.Max"/> is set to scale maximum (if <see cref="P:ZedGraph.Axis.MaxAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.Step"/> is set to scale step size (if <see cref="P:ZedGraph.Axis.StepAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.ScaleMag"/> is set to a magnitude multiplier according to the data</para>
            <para><see cref="P:ZedGraph.Axis.NumDec"/> is set to the number of decimal places to display (if <see cref="P:ZedGraph.Axis.NumDecAuto"/> = true)</para>
            </remarks>
            <seealso cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/>
            <seealso cref="F:ZedGraph.AxisType.Log"/>
        </member>
        <member name="M:ZedGraph.Axis.PickDateScale(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)">
            <summary>
            Select a reasonable date-time axis scale given a range of data values.
            </summary>
            <remarks>
            This method only applies to <see cref="F:ZedGraph.AxisType.Date"/> type axes, and it
            is called by the general <see cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/> method.  The scale range is chosen
            based on increments of 1, 2, or 5 (because they are even divisors of 10).
            Note that the <see cref="P:ZedGraph.Axis.Step"/> property setting can have multiple unit
            types (<see cref="T:ZedGraph.DateUnit"/>), but the <see cref="P:ZedGraph.Axis.Min"/> and
            <see cref="P:ZedGraph.Axis.Max"/> units are always days (<see cref="T:ZedGraph.XDate"/>).  This
            method honors the <see cref="P:ZedGraph.Axis.MinAuto"/>, <see cref="P:ZedGraph.Axis.MaxAuto"/>,
            and <see cref="P:ZedGraph.Axis.StepAuto"/> autorange settings.
            In the event that any of the autorange settings are false, the
            corresponding <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>, or <see cref="P:ZedGraph.Axis.Step"/>
            setting is explicitly honored, and the remaining autorange settings (if any) will
            be calculated to accomodate the non-autoranged values.  The basic default for
            scale selection is defined with
            <see cref="F:ZedGraph.Axis.Default.TargetXSteps"/> and <see cref="F:ZedGraph.Axis.Default.TargetYSteps"/>
            from the <see cref="T:ZedGraph.Axis.Default"/> default class.
            <para>On Exit:</para>
            <para><see cref="P:ZedGraph.Axis.Min"/> is set to scale minimum (if <see cref="P:ZedGraph.Axis.MinAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.Max"/> is set to scale maximum (if <see cref="P:ZedGraph.Axis.MaxAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.Step"/> is set to scale step size (if <see cref="P:ZedGraph.Axis.StepAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.MinorStep"/> is set to scale minor step size (if <see cref="P:ZedGraph.Axis.MinorStepAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.ScaleMag"/> is set to a magnitude multiplier according to the data</para>
            <para><see cref="P:ZedGraph.Axis.NumDec"/> is set to the number of decimal places to display (if <see cref="P:ZedGraph.Axis.NumDecAuto"/> = true)</para>
            </remarks>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object
            associated with this <see cref="T:ZedGraph.Axis"/></param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <seealso cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/>
            <seealso cref="F:ZedGraph.AxisType.Date"/>
            <seealso cref="P:ZedGraph.Axis.MajorUnit"/>
            <seealso cref="P:ZedGraph.Axis.MinorUnit"/>
        </member>
        <member name="M:ZedGraph.Axis.PickLinearScale(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)">
            <summary>
            Select a reasonable linear axis scale given a range of data values.
            </summary>
            <remarks>
            This method only applies to <see cref="F:ZedGraph.AxisType.Linear"/> type axes, and it
            is called by the general <see cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/> method.  The scale range is chosen
            based on increments of 1, 2, or 5 (because they are even divisors of 10).  This
            method honors the <see cref="P:ZedGraph.Axis.MinAuto"/>, <see cref="P:ZedGraph.Axis.MaxAuto"/>,
            and <see cref="P:ZedGraph.Axis.StepAuto"/> autorange settings.
            In the event that any of the autorange settings are false, the
            corresponding <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>, or <see cref="P:ZedGraph.Axis.Step"/>
            setting is explicitly honored, and the remaining autorange settings (if any) will
            be calculated to accomodate the non-autoranged values.  The basic defaults for
            scale selection are defined using <see cref="F:ZedGraph.Axis.Default.ZeroLever"/>,
            <see cref="F:ZedGraph.Axis.Default.TargetXSteps"/>, and <see cref="F:ZedGraph.Axis.Default.TargetYSteps"/>
            from the <see cref="T:ZedGraph.Axis.Default"/> default class.
            <para>On Exit:</para>
            <para><see cref="P:ZedGraph.Axis.Min"/> is set to scale minimum (if <see cref="P:ZedGraph.Axis.MinAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.Max"/> is set to scale maximum (if <see cref="P:ZedGraph.Axis.MaxAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.Step"/> is set to scale step size (if <see cref="P:ZedGraph.Axis.StepAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.MinorStep"/> is set to scale minor step size (if <see cref="P:ZedGraph.Axis.MinorStepAuto"/> = true)</para>
            <para><see cref="P:ZedGraph.Axis.ScaleMag"/> is set to a magnitude multiplier according to the data</para>
            <para><see cref="P:ZedGraph.Axis.NumDec"/> is set to the number of decimal places to display (if <see cref="P:ZedGraph.Axis.NumDecAuto"/> = true)</para>
            </remarks>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object
            associated with this <see cref="T:ZedGraph.Axis"/></param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <seealso cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/>
            <seealso cref="F:ZedGraph.AxisType.Linear"/>
        </member>
        <member name="M:ZedGraph.Axis.CalcStepSize(System.Double,System.Double)">
            <summary>
            Calculate a step size based on a data range.
            </summary>
            <remarks>
            This utility method
            will try to honor the <see cref="F:ZedGraph.Axis.Default.TargetXSteps"/> and
            <see cref="F:ZedGraph.Axis.Default.TargetYSteps"/> number of
            steps while using a rational increment (1, 2, or 5 -- which are
            even divisors of 10).  This method is used by <see cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/>.
            </remarks>
            <param name="range">The range of data in user scale units.  This can
            be a full range of the data for the major step size, or just the
            value of the major step size to calculate the minor step size</param>
            <param name="targetSteps">The desired "typical" number of steps
            to divide the range into</param>
            <returns>The calculated step size for the specified data range.</returns>
        </member>
        <member name="M:ZedGraph.Axis.CalcBoundedStepSize(System.Double,System.Double)">
            <summary>
            Calculate a step size based on a data range, limited to a maximum number of steps.
            </summary>
            <remarks>
            This utility method
            will calculate a step size, of no more than maxSteps,
            using a rational increment (1, 2, or 5 -- which are
            even divisors of 10).  This method is used by <see cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/>.
            </remarks>
            <param name="range">The range of data in user scale units.  This can
            be a full range of the data for the major step size, or just the
            value of the major step size to calculate the minor step size</param>
            <param name="maxSteps">The maximum allowable number of steps
            to divide the range into</param>
            <returns>The calculated step size for the specified data range.</returns>
        </member>
        <member name="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)">
            <summary>
            Calculate a step size for a <see cref="F:ZedGraph.AxisType.Date"/> scale.
            This method is used by <see cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/>.
            </summary>
            <param name="range">The range of data in units of days</param>
            <param name="targetSteps">The desired "typical" number of steps
            to divide the range into</param>
            <returns>The calculated step size for the specified data range.  Also
            calculates and sets the values for <see cref="P:ZedGraph.Axis.MajorUnit"/>,
            <see cref="P:ZedGraph.Axis.MinorUnit"/>, <see cref="P:ZedGraph.Axis.MinorStep"/>, and
            <see cref="P:ZedGraph.Axis.ScaleFormat"/></returns>
        </member>
        <member name="M:ZedGraph.Axis.CalcEvenStepDate(System.Double,System.Int32)">
            <summary>
            Calculate a date that is close to the specified date and an
            even multiple of the selected
            <see cref="P:ZedGraph.Axis.MajorUnit"/> for a <see cref="F:ZedGraph.AxisType.Date"/> scale.
            This method is used by <see cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/>.
            </summary>
            <param name="date">The date which the calculation should be close to</param>
            <param name="direction">The desired direction for the date to take.
            1 indicates the result date should be greater than the specified
            date parameter.  -1 indicates the other direction.</param>
            <returns>The calculated date</returns>
        </member>
        <member name="M:ZedGraph.Axis.MyMod(System.Double,System.Double)">
            <summary>
            Calculate the modulus (remainder) in a safe manner so that divide
            by zero errors are avoided
            </summary>
            <param name="x">The divisor</param>
            <param name="y">The dividend</param>
            <returns>the value of the modulus, or zero for the divide-by-zero
            case</returns>
        </member>
        <member name="M:ZedGraph.Axis.Transform(System.Double)">
            <summary>
            Transform the coordinate value from user coordinates (scale value)
            to graphics device coordinates (pixels).
            </summary>
            <remarks>This method takes into
            account the scale range (<see cref="P:ZedGraph.Axis.Min"/> and <see cref="P:ZedGraph.Axis.Max"/>),
            logarithmic state (<see cref="P:ZedGraph.Axis.IsLog"/>), scale reverse state
            (<see cref="P:ZedGraph.Axis.IsReverse"/>) and axis type (<see cref="T:ZedGraph.XAxis"/>,
            <see cref="T:ZedGraph.YAxis"/>, or <see cref="T:ZedGraph.Y2Axis"/>).
            Note that the <see cref="P:ZedGraph.GraphPane.AxisRect"/> must be valid, and
            <see cref="M:ZedGraph.Axis.SetupScaleData(ZedGraph.GraphPane)"/> must be called for the
            current configuration before using this method (this is called everytime
            the graph is drawn (i.e., <see cref="M:ZedGraph.GraphPane.Draw(System.Drawing.Graphics)"/> is called).
            </remarks>
            <param name="x">The coordinate value, in user scale units, to
            be transformed</param>
            <returns>the coordinate value transformed to screen coordinates
            for use in calling the <see cref="T:System.Drawing.Graphics"/> draw routines</returns>
        </member>
        <member name="M:ZedGraph.Axis.Transform(System.Int32,System.Double)">
            <summary>
            Transform the coordinate value from user coordinates (scale value)
            to graphics device coordinates (pixels).
            </summary>
            <remarks>
            This method takes into
            account the scale range (<see cref="P:ZedGraph.Axis.Min"/> and <see cref="P:ZedGraph.Axis.Max"/>),
            logarithmic state (<see cref="P:ZedGraph.Axis.IsLog"/>), scale reverse state
            (<see cref="P:ZedGraph.Axis.IsReverse"/>) and axis type (<see cref="T:ZedGraph.XAxis"/>,
            <see cref="T:ZedGraph.YAxis"/>, or <see cref="T:ZedGraph.Y2Axis"/>).
            Note that the <see cref="P:ZedGraph.GraphPane.AxisRect"/> must be valid, and
            <see cref="M:ZedGraph.Axis.SetupScaleData(ZedGraph.GraphPane)"/> must be called for the
            current configuration before using this method (this is called everytime
            the graph is drawn (i.e., <see cref="M:ZedGraph.GraphPane.Draw(System.Drawing.Graphics)"/> is called).
            </remarks>
            <param name="i">The ordinal value of this point, just in case
            this is an <see cref="F:ZedGraph.AxisType.Ordinal"/> axis</param>
            <param name="x">The coordinate value, in user scale units, to
            be transformed</param>
            <returns>the coordinate value transformed to screen coordinates
            for use in calling the <see cref="T:System.Drawing.Graphics"/> draw routines</returns>
        </member>
        <member name="M:ZedGraph.Axis.ReverseTransform(System.Single)">
            <summary>
            Reverse transform the user coordinates (scale value)
            given a graphics device coordinate (pixels).
            </summary>
            <remarks>
            This method takes into
            account the scale range (<see cref="P:ZedGraph.Axis.Min"/> and <see cref="P:ZedGraph.Axis.Max"/>),
            logarithmic state (<see cref="P:ZedGraph.Axis.IsLog"/>), scale reverse state
            (<see cref="P:ZedGraph.Axis.IsReverse"/>) and axis type (<see cref="T:ZedGraph.XAxis"/>,
            <see cref="T:ZedGraph.YAxis"/>, or <see cref="T:ZedGraph.Y2Axis"/>).
            Note that the <see cref="P:ZedGraph.GraphPane.AxisRect"/> must be valid, and
            <see cref="M:ZedGraph.Axis.SetupScaleData(ZedGraph.GraphPane)"/> must be called for the
            current configuration before using this method (this is called everytime
            the graph is drawn (i.e., <see cref="M:ZedGraph.GraphPane.Draw(System.Drawing.Graphics)"/> is called).
            </remarks>
            <param name="pixVal">The screen pixel value, in graphics device coordinates to
            be transformed</param>
            <returns>The user scale value that corresponds to the screen pixel location</returns>
        </member>
        <member name="M:ZedGraph.Axis.LocalTransform(System.Double)">
            <summary>
            Transform the coordinate value from user coordinates (scale value)
            to graphics device coordinates (pixels).
            </summary>
            <remarks>Assumes that the origin
            has been set to the "left" of this axis, facing from the label side.
            Note that the left side corresponds to the scale minimum for the X and
            Y2 axes, but it is the scale maximum for the Y axis.
            This method takes into
            account the scale range (<see cref="P:ZedGraph.Axis.Min"/> and <see cref="P:ZedGraph.Axis.Max"/>),
            logarithmic state (<see cref="P:ZedGraph.Axis.IsLog"/>), scale reverse state
            (<see cref="P:ZedGraph.Axis.IsReverse"/>) and axis type (<see cref="T:ZedGraph.XAxis"/>,
            <see cref="T:ZedGraph.YAxis"/>, or <see cref="T:ZedGraph.Y2Axis"/>).  Note that
            the <see cref="P:ZedGraph.GraphPane.AxisRect"/> must be valid, and
            <see cref="M:ZedGraph.Axis.SetupScaleData(ZedGraph.GraphPane)"/> must be called for the
            current configuration before using this method.
            </remarks>
            <param name="x">The coordinate value, in user scale units, to
            be transformed</param>
            <returns>the coordinate value transformed to screen coordinates
            for use in calling the <see cref="M:ZedGraph.Axis.DrawScale(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)"/> method</returns>
        </member>
        <member name="M:ZedGraph.Axis.SafeLog(System.Double)">
            <summary>
            Calculate a base 10 logarithm in a safe manner to avoid math exceptions
            </summary>
            <param name="x">The value for which the logarithm is to be calculated</param>
            <returns>The value of the logarithm, or 0 if the <paramref name="x"/>
            argument was negative or zero</returns>
        </member>
        <member name="P:ZedGraph.Axis.MinPix">
            <summary>
            The pixel position at the minimum value for this axis.  This read-only
            value is used/valid only during the Draw process.
            </summary>
        </member>
        <member name="P:ZedGraph.Axis.MaxPix">
            <summary>
            The pixel position at the maximum value for this axis.  This read-only
            value is used/valid only during the Draw process.
            </summary>
        </member>
        <member name="P:ZedGraph.Axis.Min">
            <summary>
            Gets or sets the minimum scale value for this axis.
            </summary>
            <remarks>This value can be set
            automatically based on the state of <see cref="P:ZedGraph.Axis.MinAuto"/>.  If
            this value is set manually, then <see cref="P:ZedGraph.Axis.MinAuto"/> will
            also be set to false.
            </remarks>
            <value> The value is defined in user scale units for <see cref="F:ZedGraph.AxisType.Log"/>
            and <see cref="F:ZedGraph.AxisType.Linear"/> axes. For <see cref="F:ZedGraph.AxisType.Text"/>
            and <see cref="F:ZedGraph.AxisType.Ordinal"/> axes,
            this value is an ordinal starting with 1.0.  For <see cref="F:ZedGraph.AxisType.Date"/>
            axes, this value is in XL Date format (see <see cref="T:ZedGraph.XDate"/>, which is the
            number of days since the reference date of January 1, 1900.</value>
            <seealso cref="P:ZedGraph.Axis.Max"/>
            <seealso cref="P:ZedGraph.Axis.Step"/>
            <seealso cref="P:ZedGraph.Axis.MinorStep"/>
            <seealso cref="P:ZedGraph.Axis.MinAuto"/>
        </member>
        <member name="P:ZedGraph.Axis.Max">
            <summary>
            Gets or sets the maximum scale value for this axis.
            </summary>
            <remarks>
            This value can be set
            automatically based on the state of <see cref="P:ZedGraph.Axis.MaxAuto"/>.  If
            this value is set manually, then <see cref="P:ZedGraph.Axis.MaxAuto"/> will
            also be set to false.
            </remarks>
            <value> The value is defined in user scale units for <see cref="F:ZedGraph.AxisType.Log"/>
            and <see cref="F:ZedGraph.AxisType.Linear"/> axes. For <see cref="F:ZedGraph.AxisType.Text"/>
            and <see cref="F:ZedGraph.AxisType.Ordinal"/> axes,
            this value is an ordinal starting with 1.0.  For <see cref="F:ZedGraph.AxisType.Date"/>
            axes, this value is in XL Date format (see <see cref="T:ZedGraph.XDate"/>, which is the
            number of days since the reference date of January 1, 1900.</value>
            <seealso cref="P:ZedGraph.Axis.Min"/>
            <seealso cref="P:ZedGraph.Axis.Step"/>
            <seealso cref="P:ZedGraph.Axis.MinorStep"/>
            <seealso cref="P:ZedGraph.Axis.MaxAuto"/>
        </member>
        <member name="P:ZedGraph.Axis.Step">
            <summary>
            Gets or sets the scale step size for this axis (the increment between
            labeled axis values).
            </summary>
            <remarks>
            This value can be set
            automatically based on the state of <see cref="P:ZedGraph.Axis.StepAuto"/>.  If
            this value is set manually, then <see cref="P:ZedGraph.Axis.StepAuto"/> will
            also be set to false.  This value is ignored for <see cref="F:ZedGraph.AxisType.Log"/>
            axes.  For <see cref="F:ZedGraph.AxisType.Date"/> axes, this
            value is defined in units of <see cref="P:ZedGraph.Axis.MajorUnit"/>.
            </remarks>
            <value> The value is defined in user scale units </value>
            <seealso cref="P:ZedGraph.Axis.Min"/>
            <seealso cref="P:ZedGraph.Axis.Max"/>
            <seealso cref="P:ZedGraph.Axis.MinorStep"/>
            <seealso cref="P:ZedGraph.Axis.StepAuto"/>
            <seealso cref="F:ZedGraph.Axis.Default.TargetXSteps"/>
            <seealso cref="F:ZedGraph.Axis.Default.TargetYSteps"/>
            <seealso cref="F:ZedGraph.Axis.Default.ZeroLever"/>
            <seealso cref="F:ZedGraph.Axis.Default.MaxTextLabels"/>
        </member>
        <member name="P:ZedGraph.Axis.MajorUnit">
            <summary>
            Gets or sets the type of units used for the major step size (<see cref="P:ZedGraph.Axis.Step"/>).
            </summary>
            <remarks>
            This unit type only applies to Date-Time axes (<see cref="F:ZedGraph.AxisType.Date"/> = true).
            The axis is set to date type with the <see cref="P:ZedGraph.Axis.Type"/> property.
            The unit types are defined as <see cref="T:ZedGraph.DateUnit"/>.
            </remarks>
            <value> The value is a <see cref="T:ZedGraph.DateUnit"/> enum type </value>
            <seealso cref="P:ZedGraph.Axis.Min"/>
            <seealso cref="P:ZedGraph.Axis.Max"/>
            <seealso cref="P:ZedGraph.Axis.Step"/>
            <seealso cref="P:ZedGraph.Axis.MinorStep"/>
            <seealso cref="P:ZedGraph.Axis.StepAuto"/>
        </member>
        <member name="P:ZedGraph.Axis.MinorUnit">
            <summary>
            Gets or sets the type of units used for the minor step size (<see cref="P:ZedGraph.Axis.MinorStep"/>).
            </summary>
            <remarks>
            This unit type only applies to Date-Time axes (<see cref="F:ZedGraph.AxisType.Date"/> = true).
            The axis is set to date type with the <see cref="P:ZedGraph.Axis.Type"/> property.
            The unit types are defined as <see cref="T:ZedGraph.DateUnit"/>.
            </remarks>
            <value> The value is a <see cref="T:ZedGraph.DateUnit"/> enum type </value>
            <seealso cref="P:ZedGraph.Axis.Min"/>
            <seealso cref="P:ZedGraph.Axis.Max"/>
            <seealso cref="P:ZedGraph.Axis.Step"/>
            <seealso cref="P:ZedGraph.Axis.MinorStep"/>
            <seealso cref="P:ZedGraph.Axis.MinorStepAuto"/>
        </member>
        <member name="P:ZedGraph.Axis.MinorStep">
            <summary>
            Gets or sets the scale minor step size for this axis (the spacing between
            minor tics).
            </summary>
            <remarks>This value can be set
            automatically based on the state of <see cref="P:ZedGraph.Axis.MinorStepAuto"/>.  If
            this value is set manually, then <see cref="P:ZedGraph.Axis.MinorStepAuto"/> will
            also be set to false.  This value is ignored for <see cref="F:ZedGraph.AxisType.Log"/> and
            <see cref="F:ZedGraph.AxisType.Text"/> axes.  For <see cref="F:ZedGraph.AxisType.Date"/> axes, this
            value is defined in units of <see cref="P:ZedGraph.Axis.MinorUnit"/>.
            </remarks>
            <value> The value is defined in user scale units </value>
            <seealso cref="P:ZedGraph.Axis.Min"/>
            <seealso cref="P:ZedGraph.Axis.Max"/>
            <seealso cref="P:ZedGraph.Axis.Step"/>
            <seealso cref="P:ZedGraph.Axis.MinorStepAuto"/>
        </member>
        <member name="P:ZedGraph.Axis.Cross">
            <summary>
            Gets or sets the scale value at which this axis should cross the "other" axis.
            </summary>
            <remarks>This property allows the axis to be shifted away from its default location.
            For example, for a graph with an X range from -100 to +100, the Y Axis can be located
            at the X=0 value rather than the left edge of the axisRect.  This value can be set
            automatically based on the state of <see cref="P:ZedGraph.Axis.CrossAuto"/>.  If
            this value is set manually, then <see cref="P:ZedGraph.Axis.CrossAuto"/> will
            also be set to false.  The "other" axis is the axis the handles the second dimension
            for the graph.  For the XAxis, the "other" axis is the YAxis.  For the YAxis or
            Y2Axis, the "other" axis is the XAxis.
            </remarks>
            <value> The value is defined in user scale units </value>
            <seealso cref="P:ZedGraph.Axis.Min"/>
            <seealso cref="P:ZedGraph.Axis.Max"/>
            <seealso cref="P:ZedGraph.Axis.Step"/>
            <seealso cref="P:ZedGraph.Axis.CrossAuto"/>
        </member>
        <member name="P:ZedGraph.Axis.BaseTic">
            <summary>
            Gets or sets the scale value at which the first major tic label will appear.
            </summary>
            <remarks>This property allows the scale labels to start at an irregular value.
            For example, on a scale range with <see cref="P:ZedGraph.Axis.Min"/> = 0, <see cref="P:ZedGraph.Axis.Max"/> = 1000,
            and <see cref="P:ZedGraph.Axis.Step"/> = 200, a <see cref="P:ZedGraph.Axis.BaseTic"/> value of 50 would cause
            the scale labels to appear at values 50, 250, 450, 650, and 850.  Note that the
            default value for this property is <see cref="F:ZedGraph.PointPair.Missing"/>, which means the
            value is not used.  Setting this property to any value other than
            <see cref="F:ZedGraph.PointPair.Missing"/> will activate the effect.  The value specified must
            coincide with the first major tic.  That is, if <see cref="P:ZedGraph.Axis.BaseTic"/> were set to
            650 in the example above, then the major tics would only occur at 650 and 850.  This
            setting may affect the minor tics, since the minor tics are always referenced to the
            <see cref="P:ZedGraph.Axis.BaseTic"/>.  That is, in the example above, if the <see cref="P:ZedGraph.Axis.MinorStep"/>
            were set to 30 (making it a non-multiple of the major step), then the minor tics would
            occur at 20, 50 (so it lines up with the BaseTic), 80, 110, 140, etc.
            </remarks>
            <value> The value is defined in user scale units </value>
            <seealso cref="P:ZedGraph.Axis.Min"/>
            <seealso cref="P:ZedGraph.Axis.Max"/>
            <seealso cref="P:ZedGraph.Axis.Step"/>
            <seealso cref="P:ZedGraph.Axis.MinorStep"/>
            <seealso cref="P:ZedGraph.Axis.Cross"/>
        </member>
        <member name="P:ZedGraph.Axis.MinAuto">
            <summary>
            Gets or sets a value that determines whether or not the minimum scale value <see cref="P:ZedGraph.Axis.Min"/>
            is set automatically.
            </summary>
            <remarks>
            This value will be set to false if
            <see cref="P:ZedGraph.Axis.Min"/> is manually changed.
            </remarks>
            <value>true for automatic mode, false for manual mode</value>
            <seealso cref="P:ZedGraph.Axis.Min"/>
        </member>
        <member name="P:ZedGraph.Axis.MaxAuto">
            <summary>
            Gets or sets a value that determines whether or not the maximum scale value <see cref="P:ZedGraph.Axis.Max"/>
            is set automatically.
            </summary>
            <remarks>
            This value will be set to false if
            <see cref="P:ZedGraph.Axis.Max"/> is manually changed.
            </remarks>
            <value>true for automatic mode, false for manual mode</value>
            <seealso cref="P:ZedGraph.Axis.Max"/>
        </member>
        <member name="P:ZedGraph.Axis.StepAuto">
            <summary>
            Gets or sets a value that determines whether or not the scale step size <see cref="P:ZedGraph.Axis.Step"/>
            is set automatically.
            </summary>
            <remarks>
            This value will be set to false if
            <see cref="P:ZedGraph.Axis.Step"/> is manually changed.
            </remarks>
            <value>true for automatic mode, false for manual mode</value>
            <seealso cref="P:ZedGraph.Axis.Step"/>
        </member>
        <member name="P:ZedGraph.Axis.MinorStepAuto">
            <summary>
            Gets or sets a value that determines whether or not the minor scale step size <see cref="P:ZedGraph.Axis.MinorStep"/>
            is set automatically.
            </summary>
            <remarks>
            This value will be set to false if
            <see cref="P:ZedGraph.Axis.MinorStep"/> is manually changed.
            </remarks>
            <value>true for automatic mode, false for manual mode</value>
            <seealso cref="P:ZedGraph.Axis.MinorStep"/>
        </member>
        <member name="P:ZedGraph.Axis.CrossAuto">
            <summary>
            Gets or sets a value that determines whether or not the <see cref="P:ZedGraph.Axis.Cross"/> value
            is set automatically.
            </summary>
            <value>Set to true to have ZedGraph put the axis in the default location, or false
            to specify the axis location manually with a <see cref="P:ZedGraph.Axis.Cross"/> value.</value>
            <seealso cref="P:ZedGraph.Axis.Min"/>
            <seealso cref="P:ZedGraph.Axis.Max"/>
            <seealso cref="P:ZedGraph.Axis.Step"/>
            <seealso cref="P:ZedGraph.Axis.Cross"/>
        </member>
        <member name="P:ZedGraph.Axis.MinGrace">
            <summary> Gets or sets the "grace" value applied to the minimum data range.
            </summary>
            <remarks>
            This value is
            expressed as a fraction of the total data range.  For example, assume the data
            range is from 4.0 to 16.0, leaving a range of 12.0.  If MinGrace is set to
            0.1, then 10% of the range, or 1.2 will be subtracted from the minimum data value.
            The scale will then be ranged to cover at least 2.8 to 16.0.
            </remarks>
            <seealso cref="P:ZedGraph.Axis.Min"/>
            <seealso cref="F:ZedGraph.Axis.Default.MinGrace"/>
            <seealso cref="P:ZedGraph.Axis.MaxGrace"/>
        </member>
        <member name="P:ZedGraph.Axis.MaxGrace">
            <summary> Gets or sets the "grace" value applied to the maximum data range.
            </summary>
            <remarks>
            This values determines how much extra space is left after the last data value.
            This value is
            expressed as a fraction of the total data range.  For example, assume the data
            range is from 4.0 to 16.0, leaving a range of 12.0.  If MaxGrace is set to
            0.1, then 10% of the range, or 1.2 will be added to the maximum data value.
            The scale will then be ranged to cover at least 4.0 to 17.2.
            </remarks>
            <seealso cref="P:ZedGraph.Axis.Max"/>
            <seealso cref="F:ZedGraph.Axis.Default.MaxGrace"/>
            <seealso cref="P:ZedGraph.Axis.MinGrace"/>
        </member>
        <member name="P:ZedGraph.Axis.MinSpace">
            <summary>
            Gets or sets the minimum axis space allocation.
            </summary>
            <remarks>
            This term, expressed in
            points (1/72 inch) and scaled according to <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>
            for the <see cref="T:ZedGraph.GraphPane"/>, determines the minimum amount of space
            an axis must have between the <see cref="P:ZedGraph.GraphPane.AxisRect"/> and the
            <see cref="P:ZedGraph.PaneBase.PaneRect"/>.  This minimum space
            applies whether <see cref="P:ZedGraph.Axis.IsVisible"/> is true or false.
            </remarks>
        </member>
        <member name="P:ZedGraph.Axis.Color">
            <summary>
            The color to use for drawing this <see cref="T:ZedGraph.Axis"/>.
            </summary>
            <remarks>
            This affects only the tic
            marks, since the <see cref="P:ZedGraph.Axis.TitleFontSpec"/> and
            <see cref="P:ZedGraph.Axis.ScaleFontSpec"/> both have their own color specification.
            </remarks>
            <value> The color is defined using the
            <see cref="T:System.Drawing.Color"/> class</value>
            <seealso cref="F:ZedGraph.Axis.Default.Color"/>.
            <seealso cref="P:ZedGraph.Axis.IsTic"/>
            <seealso cref="P:ZedGraph.Axis.IsVisible"/>
        </member>
        <member name="P:ZedGraph.Axis.TicSize">
            <summary>
            The length of the <see cref="T:ZedGraph.Axis"/> tic marks.
            </summary>
            <remarks>
            This length will be scaled
            according to the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> for the
            <see cref="T:ZedGraph.GraphPane"/>
            </remarks>
            <value>The tic size is measured in points (1/72 inch)</value>
            <seealso cref="F:ZedGraph.Axis.Default.TicSize"/>.
            <seealso cref="P:ZedGraph.Axis.IsTic"/>
            <seealso cref="P:ZedGraph.Axis.IsVisible"/>
            <seealso cref="P:ZedGraph.Axis.Color"/>
        </member>
        <member name="P:ZedGraph.Axis.MinorTicSize">
            <summary>
            The length of the <see cref="T:ZedGraph.Axis"/> minor tic marks.
            </summary>
            <remarks>
            This length will be scaled
            according to the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> for the
            <see cref="T:ZedGraph.GraphPane"/>
            </remarks>
            <value>The tic size is measured in points (1/72 inch)</value>
            <seealso cref="F:ZedGraph.Axis.Default.MinorTicSize"/>.
            <seealso cref="P:ZedGraph.Axis.IsMinorTic"/>
        </member>
        <member name="P:ZedGraph.Axis.IsTic">
            <summary>
            Gets or sets a property that determines whether or not the major outside tic marks
            are shown.
            </summary>
            <remarks>
            These are the tic marks on the outside of the <see cref="T:ZedGraph.Axis"/> border.
            The major tic spacing is controlled by <see cref="P:ZedGraph.Axis.Step"/>.
            </remarks>
            <value>true to show the major outside tic marks, false otherwise</value>
            <seealso cref="F:ZedGraph.Axis.Default.IsTic"/>.
            <seealso cref="P:ZedGraph.Axis.IsMinorTic"/>
            <seealso cref="P:ZedGraph.Axis.IsInsideTic"/>
            <seealso cref="P:ZedGraph.Axis.IsOppositeTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorInsideTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>
        </member>
        <member name="P:ZedGraph.Axis.IsMinorTic">
            <summary>
            Gets or sets a property that determines whether or not the minor outside tic marks
            are shown.
            </summary>
            <remarks>
            These are the tic marks on the outside of the <see cref="T:ZedGraph.Axis"/> border.
            The minor tic spacing is controlled by <see cref="P:ZedGraph.Axis.MinorStep"/>.  This setting is
            ignored (no minor tics are drawn) for text axes (see <see cref="P:ZedGraph.Axis.IsText"/>).
            </remarks>
            <value>true to show the minor outside tic marks, false otherwise</value>
            <seealso cref="F:ZedGraph.Axis.Default.IsMinorTic"/>.
            <seealso cref="P:ZedGraph.Axis.IsTic"/>
            <seealso cref="P:ZedGraph.Axis.IsInsideTic"/>
            <seealso cref="P:ZedGraph.Axis.IsOppositeTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorInsideTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>
        </member>
        <member name="P:ZedGraph.Axis.IsInsideTic">
            <summary>
            Gets or sets a property that determines whether or not the major inside tic marks
            are shown.
            </summary>
            <remarks>
            These are the tic marks on the inside of the <see cref="T:ZedGraph.Axis"/> border.
            The major tic spacing is controlled by <see cref="P:ZedGraph.Axis.Step"/>.
            </remarks>
            <value>true to show the major inside tic marks, false otherwise</value>
            <seealso cref="F:ZedGraph.Axis.Default.IsInsideTic"/>.
            <seealso cref="P:ZedGraph.Axis.IsTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorTic"/>
            <seealso cref="P:ZedGraph.Axis.IsOppositeTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorInsideTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>
        </member>
        <member name="P:ZedGraph.Axis.IsOppositeTic">
            <summary>
            Gets or sets a property that determines whether or not the major opposite tic marks
            are shown.
            </summary>
            <remarks>
            These are the tic marks on the inside of the <see cref="T:ZedGraph.Axis"/> border on
            the opposite side from the axis.
            The major tic spacing is controlled by <see cref="P:ZedGraph.Axis.Step"/>.
            </remarks>
            <value>true to show the major opposite tic marks, false otherwise</value>
            <seealso cref="F:ZedGraph.Axis.Default.IsOppositeTic"/>.
            <seealso cref="P:ZedGraph.Axis.IsTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorTic"/>
            <seealso cref="P:ZedGraph.Axis.IsInsideTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorInsideTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>
        </member>
        <member name="P:ZedGraph.Axis.IsMinorInsideTic">
            <summary>
            Gets or sets a property that determines whether or not the minor inside tic marks
            are shown.
            </summary>
            <remarks>
            These are the tic marks on the inside of the <see cref="T:ZedGraph.Axis"/> border.
            The minor tic spacing is controlled by <see cref="P:ZedGraph.Axis.MinorStep"/>.
            </remarks>
            <value>true to show the minor inside tic marks, false otherwise</value>
            <seealso cref="F:ZedGraph.Axis.Default.IsMinorInsideTic"/>.
            <seealso cref="P:ZedGraph.Axis.IsTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorTic"/>
            <seealso cref="P:ZedGraph.Axis.IsInsideTic"/>
            <seealso cref="P:ZedGraph.Axis.IsOppositeTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>
        </member>
        <member name="P:ZedGraph.Axis.IsMinorOppositeTic">
            <summary>
            Gets or sets a property that determines whether or not the minor opposite tic marks
            are shown.
            </summary>
            <remarks>
            These are the tic marks on the inside of the <see cref="T:ZedGraph.Axis"/> border on
            the opposite side from the axis.
            The minor tic spacing is controlled by <see cref="P:ZedGraph.Axis.MinorStep"/>.
            </remarks>
            <value>true to show the minor opposite tic marks, false otherwise</value>
            <seealso cref="F:ZedGraph.Axis.Default.IsMinorOppositeTic"/>.
            <seealso cref="P:ZedGraph.Axis.IsTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorTic"/>
            <seealso cref="P:ZedGraph.Axis.IsInsideTic"/>
            <seealso cref="P:ZedGraph.Axis.IsOppositeTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorInsideTic"/>
        </member>
        <member name="P:ZedGraph.Axis.IsTicsBetweenLabels">
            <summary>
            Gets or sets a property that determines whether or not the major tics will be drawn
            inbetween the labels, rather than right at the labels.
            </summary>
            <remarks>
            Note that this setting is only
            applicable if <see cref="P:ZedGraph.Axis.Type"/> = <see cref="F:ZedGraph.AxisType.Text"/>.
            </remarks>
            <value>true to place the text between the labels for text axes, false otherwise</value>
            <seealso cref="P:ZedGraph.Axis.IsTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorTic"/>
            <seealso cref="P:ZedGraph.Axis.IsInsideTic"/>
            <seealso cref="P:ZedGraph.Axis.IsOppositeTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorInsideTic"/>
            <seealso cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>
        </member>
        <member name="P:ZedGraph.Axis.TicPenWidth">
            <summary>
            Gets or sets the pen width to be used when drawing the tic marks for
            this <see cref="T:ZedGraph.Axis"/>
            </summary>
            <value>The pen width is defined in points (1/72 inch)</value>
            <seealso cref="F:ZedGraph.Axis.Default.TicPenWidth"/>.
            <seealso cref="P:ZedGraph.Axis.IsTic"/>
            <seealso cref="P:ZedGraph.Axis.Color"/>
        </member>
        <member name="P:ZedGraph.Axis.IsShowGrid">
            <summary>
            Gets or sets a value that determines if the major <see cref="T:ZedGraph.Axis"/> gridlines
            (at each labeled value) will be visible
            </summary>
            <value>true to show the gridlines, false otherwise</value>
            <seealso cref="F:ZedGraph.Axis.Default.IsShowGrid">Default.IsShowGrid</seealso>.
            <seealso cref="P:ZedGraph.Axis.GridColor"/>
            <seealso cref="P:ZedGraph.Axis.GridPenWidth"/>
            <seealso cref="P:ZedGraph.Axis.GridDashOn"/>
            <seealso cref="P:ZedGraph.Axis.GridDashOff"/>
            <seealso cref="P:ZedGraph.Axis.IsVisible"/>
        </member>
        <member name="P:ZedGraph.Axis.IsZeroLine">
            <summary>
            Gets or sets a boolean value that determines if a line will be drawn at the
            zero value for the axis.
            </summary>
            <remarks>
            The zero line is a line that divides the negative values from the positive values.
            The default is set according to
            <see cref="F:ZedGraph.XAxis.Default.IsZeroLine"/>, <see cref="F:ZedGraph.YAxis.Default.IsZeroLine"/>,
            <see cref="F:ZedGraph.Y2Axis.Default.IsZeroLine"/>,
            </remarks>
            <value>true to show the zero line, false otherwise</value>
        </member>
        <member name="P:ZedGraph.Axis.GridDashOn">
            <summary>
            The "Dash On" mode for drawing the grid.
            </summary>
            <remarks>
            This is the distance,
            in points (1/72 inch), of the dash segments that make up the dashed grid lines.
            </remarks>
            <value>The dash on length is defined in points (1/72 inch)</value>
            <seealso cref="P:ZedGraph.Axis.GridDashOff"/>
            <seealso cref="P:ZedGraph.Axis.IsShowGrid"/>
            <seealso cref="F:ZedGraph.Axis.Default.GridDashOn"/>.
        </member>
        <member name="P:ZedGraph.Axis.GridDashOff">
            <summary>
            The "Dash Off" mode for drawing the grid.
            </summary>
            <remarks>
            This is the distance,
            in points (1/72 inch), of the spaces between the dash segments that make up
            the dashed grid lines.
            </remarks>
            <value>The dash off length is defined in points (1/72 inch)</value>
            <seealso cref="P:ZedGraph.Axis.GridDashOn"/>
            <seealso cref="P:ZedGraph.Axis.IsShowGrid"/>
            <seealso cref="F:ZedGraph.Axis.Default.GridDashOff"/>.
        </member>
        <member name="P:ZedGraph.Axis.GridPenWidth">
            <summary>
            The pen width used for drawing the grid lines.
            </summary>
            <value>The grid pen width is defined in points (1/72 inch)</value>
            <seealso cref="P:ZedGraph.Axis.IsShowGrid"/>
            <seealso cref="F:ZedGraph.Axis.Default.GridPenWidth"/>.
            <seealso cref="P:ZedGraph.Axis.GridColor"/>
        </member>
        <member name="P:ZedGraph.Axis.GridColor">
            <summary>
            The color to use for drawing this <see cref="T:ZedGraph.Axis"/> grid.
            </summary>
            <remarks>
            This affects only the grid
            lines, since the <see cref="P:ZedGraph.Axis.TitleFontSpec"/> and
            <see cref="P:ZedGraph.Axis.ScaleFontSpec"/> both have their own color specification.
            </remarks>
            <value> The color is defined using the
            <see cref="T:System.Drawing.Color"/> class</value>
            <seealso cref="F:ZedGraph.Axis.Default.GridColor"/>.
            <seealso cref="P:ZedGraph.Axis.GridPenWidth"/>
        </member>
        <member name="P:ZedGraph.Axis.IsShowMinorGrid">
            <summary>
            Gets or sets a value that determines if the minor <see cref="T:ZedGraph.Axis"/> gridlines
            (in between each labeled value) will be visible
            </summary>
            <value>true to show the minor gridlines, false otherwise</value>
            <seealso cref="F:ZedGraph.Axis.Default.IsShowMinorGrid">Default.IsShowMinorGrid</seealso>.
            <seealso cref="P:ZedGraph.Axis.MinorGridColor"/>
            <seealso cref="P:ZedGraph.Axis.MinorGridPenWidth"/>
            <seealso cref="P:ZedGraph.Axis.MinorGridDashOn"/>
            <seealso cref="P:ZedGraph.Axis.MinorGridDashOff"/>
            <seealso cref="P:ZedGraph.Axis.IsVisible"/>
        </member>
        <member name="P:ZedGraph.Axis.MinorGridDashOn">
            <summary>
            Gets or sets the "Dash On" mode for drawing the minor grid.
            </summary>
            <remarks>
            This is the distance,
            in points (1/72 inch), of the dash segments that make up the dashed grid lines.
            </remarks>
            <value>The dash on length is defined in points (1/72 inch)</value>
            <seealso cref="P:ZedGraph.Axis.MinorGridDashOff"/>
            <seealso cref="P:ZedGraph.Axis.IsShowMinorGrid"/>
            <seealso cref="F:ZedGraph.Axis.Default.MinorGridDashOn"/>.
        </member>
        <member name="P:ZedGraph.Axis.MinorGridDashOff">
            <summary>
            Gets or sets the "Dash Off" mode for drawing the minor grid.
            </summary>
            <remarks>
            This is the distance,
            in points (1/72 inch), of the spaces between the dash segments that make up
            the dashed grid lines.
            </remarks>
            <value>The dash off length is defined in points (1/72 inch)</value>
            <seealso cref="P:ZedGraph.Axis.MinorGridDashOn"/>
            <seealso cref="P:ZedGraph.Axis.IsShowMinorGrid"/>
            <seealso cref="F:ZedGraph.Axis.Default.MinorGridDashOff"/>.
        </member>
        <member name="P:ZedGraph.Axis.MinorGridPenWidth">
            <summary>
            Gets or sets the default pen width used for drawing the minor grid lines.
            </summary>
            <value>The grid pen width is defined in points (1/72 inch)</value>
            <seealso cref="P:ZedGraph.Axis.IsShowMinorGrid"/>
            <seealso cref="F:ZedGraph.Axis.Default.MinorGridPenWidth"/>.
            <seealso cref="P:ZedGraph.Axis.MinorGridColor"/>
        </member>
        <member name="P:ZedGraph.Axis.MinorGridColor">
            <summary>
            Gets or sets the color to use for drawing this <see cref="T:ZedGraph.Axis"/> minor grid.
            </summary>
            <remarks>
            This affects only the minor grid
            lines, since the <see cref="P:ZedGraph.Axis.TitleFontSpec"/> and
            <see cref="P:ZedGraph.Axis.ScaleFontSpec"/> both have their own color specification.
            </remarks>
            <value> The color is defined using the
            <see cref="T:System.Drawing.Color"/> class</value>
            <seealso cref="F:ZedGraph.Axis.Default.MinorGridColor"/>.
            <seealso cref="P:ZedGraph.Axis.MinorGridPenWidth"/>
        </member>
        <member name="P:ZedGraph.Axis.IsVisible">
            <summary>
            This property determines whether or not the <see cref="T:ZedGraph.Axis"/> is shown.
            </summary>
            <remarks>
            Note that even if
            the axis is not visible, it can still be actively used to draw curves on a
            graph, it will just be invisible to the user
            </remarks>
            <value>true to show the axis, false to disable all drawing of this axis</value>
            <seealso cref="F:ZedGraph.XAxis.Default.IsVisible"/>.
            <seealso cref="F:ZedGraph.YAxis.Default.IsVisible"/>.
            <seealso cref="F:ZedGraph.Y2Axis.Default.IsVisible"/>.
        </member>
        <member name="P:ZedGraph.Axis.IsReverse">
            <summary>
            Determines if the scale values are reversed for this <see cref="T:ZedGraph.Axis"/>
            </summary>
            <value>true for the X values to decrease to the right or the Y values to
            decrease upwards, false otherwise</value>
            <seealso cref="F:ZedGraph.Axis.Default.IsReverse"/>.
        </member>
        <member name="P:ZedGraph.Axis.IsLog">
            <summary>
            Gets a property that indicates if this <see cref="T:ZedGraph.Axis"/> is logarithmic (base 10).
            </summary>
            <remarks>
            To make this property
            true, set <see cref="P:ZedGraph.Axis.Type"/> to <see cref="F:ZedGraph.AxisType.Log"/>.
            </remarks>
            <value>true for a logarithmic axis, false for a linear, date, or text axis</value>
            <seealso cref="P:ZedGraph.Axis.Type"/>
            <seealso cref="T:ZedGraph.AxisType"/>
        </member>
        <member name="P:ZedGraph.Axis.IsDate">
            <summary>
            Determines if this <see cref="T:ZedGraph.Axis"/> is of the date-time type.
            </summary>
            <remarks>
            To make this property
            true, set <see cref="P:ZedGraph.Axis.Type"/> to <see cref="F:ZedGraph.AxisType.Date"/>.
            </remarks>
            <value>true for a date axis, false for a linear, log, or text axis</value>
            <seealso cref="P:ZedGraph.Axis.Type"/>
            <seealso cref="T:ZedGraph.AxisType"/>
        </member>
        <member name="P:ZedGraph.Axis.IsText">
            <summary>
            Tests if this <see cref="T:ZedGraph.Axis"/> is labeled with user provided text
            labels rather than calculated numeric values.
            </summary>
            <remarks>
            The text labels are provided via the
            <see cref="P:ZedGraph.Axis.TextLabels"/> property.  Internally, the axis is still handled with ordinal values
            such that the axis <see cref="P:ZedGraph.Axis.Min"/> is set to 1.0, and the axis <see cref="P:ZedGraph.Axis.Max"/> is set
            to the number of labels.  To make this property true, set <see cref="P:ZedGraph.Axis.Type"/> to
            <see cref="F:ZedGraph.AxisType.Text"/>.
            </remarks>
            <value>true for a text-based axis, false for a linear, log, or date axes.
            If this property is true, then you should also provide
            an array of labels via <see cref="P:ZedGraph.Axis.TextLabels"/>.
            </value>
            <seealso cref="P:ZedGraph.Axis.Type"/>
            <seealso cref="T:ZedGraph.AxisType"/>
        </member>
        <member name="P:ZedGraph.Axis.IsOrdinal">
            <summary>
            Tests if this <see cref="T:ZedGraph.Axis"/> is an <see cref="F:ZedGraph.AxisType.Ordinal"/> type axis
            with numeric labels.
            </summary>
            <remarks>
            This is similar to a <see cref="F:ZedGraph.AxisType.Text"/> axis, but the labels are numeric
            rather than user-defined text.  An ordinal axis will cause the associated values for the
            curves to be ignored, and replaced by sequential integer values.
            For example, if the X Axis is ordinal, then the X values for each curve will be ignored, and the
            first point will be plotted at an ordinal value of 1.0, the second value at 2.0, etc.
            To make this property true, set <see cref="P:ZedGraph.Axis.Type"/> to
            <see cref="F:ZedGraph.AxisType.Ordinal"/>.
            </remarks>
            <value>true for an ordinal axis, false for a linear, log, text, or date axes.
            </value>
            <seealso cref="P:ZedGraph.Axis.Type"/>
            <seealso cref="T:ZedGraph.AxisType"/>
        </member>
        <member name="P:ZedGraph.Axis.Type">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.AxisType"/> for this <see cref="T:ZedGraph.Axis"/>.
            </summary>
            <remarks>
            The type can be either <see cref="F:ZedGraph.AxisType.Linear"/>,
            <see cref="F:ZedGraph.AxisType.Log"/>, <see cref="F:ZedGraph.AxisType.Date"/>,
            or <see cref="F:ZedGraph.AxisType.Text"/>.
            </remarks>
            <seealso cref="F:ZedGraph.Axis.Default.Type"/>.
            <seealso cref="P:ZedGraph.Axis.IsLog"/>
            <seealso cref="P:ZedGraph.Axis.IsText"/>
            <seealso cref="P:ZedGraph.Axis.IsOrdinal"/>
            <seealso cref="P:ZedGraph.Axis.IsDate"/>
            <seealso cref="P:ZedGraph.Axis.IsReverse"/>
        </member>
        <member name="P:ZedGraph.Axis.IsOmitMag">
            <summary>
            Gets or sets the property that controls whether or not the magnitude factor (power of 10) for
            this scale will be included in the label.
            </summary>
            <remarks>
            For large scale values, a "magnitude" value (power of 10) is automatically
            used for scaling the graph.  This magnitude value is automatically appended
            to the end of the Axis <see cref="P:ZedGraph.Axis.Title"/> (e.g., "(10^4)") to indicate
            that a magnitude is in use.  This property controls whether or not the
            magnitude is included in the title.  Note that it only affects the axis
            title; a magnitude value may still be used even if it is not shown in the title.
            </remarks>
            <value>true to show the magnitude value, false to hide it</value>
            <seealso cref="P:ZedGraph.Axis.Title"/>
            <seealso cref="P:ZedGraph.Axis.ScaleMag"/>
            <seealso cref="P:ZedGraph.Axis.ScaleFormat"/>
            <seealso cref="P:ZedGraph.Axis.NumDec"/>
        </member>
        <member name="P:ZedGraph.Axis.Title">
            <summary>
            Gets or sets the text title of this <see cref="T:ZedGraph.Axis"/>.
            </summary>
            <remarks>The title normally shows the basis and dimensions of
            the scale range, such as "Time (Years)".  The title is only shown if the
            <see cref="P:ZedGraph.Axis.IsShowTitle"/> property is set to true.  If the Title text is empty,
            then no title is shown, and no space is "reserved" for the title on the graph.
            </remarks>
            <value>the title is a string value</value>
            <seealso cref="P:ZedGraph.Axis.IsOmitMag"/>
            <seealso cref="P:ZedGraph.Axis.IsShowTitle"/>
        </member>
        <member name="P:ZedGraph.Axis.IsShowTitle">
            <summary>
            The display mode for the <see cref="T:ZedGraph.Axis"/>
            <see cref="P:ZedGraph.Axis.Title"/> property.  The default
            value comes from <see cref="F:ZedGraph.Axis.Default.IsShowTitle"/>.
            </summary>
            <value> boolean value; true to show the title, false to hide it.</value>
            <seealso cref="P:ZedGraph.Axis.Title"/>
        </member>
        <member name="P:ZedGraph.Axis.IsUseTenPower">
            <summary>
            Determines if powers-of-ten notation will be used for the numeric value labels.
            </summary>
            <remarks>
            The powers-of-ten notation is just the text "10" followed by a superscripted value
            indicating the magnitude.  This mode is only valid for log scales (see
            <see cref="P:ZedGraph.Axis.IsLog"/> and <see cref="P:ZedGraph.Axis.Type"/>).
            </remarks>
            <value> boolean value; true to show the title as a power of ten, false to
            show a regular numeric value (e.g., "0.01", "10", "1000")</value>
        </member>
        <member name="P:ZedGraph.Axis.IsPreventLabelOverlap">
            <summary>
            Gets or sets a <see cref="T:System.Boolean"/> value that determines if ZedGraph will check to
            see if the <see cref="T:ZedGraph.Axis"/> scale labels are close enough to overlap.  If so,
            ZedGraph will adjust the step size to prevent overlap.
            </summary>
            <remarks>
            The process of checking for overlap is done during the <see cref="M:ZedGraph.GraphPane.AxisChange(System.Drawing.Graphics)"/>
            method call, and affects the selection of the major step size (<see cref="P:ZedGraph.Axis.Step"/>).
            </remarks>
            <value> boolean value; true to check for overlap, false otherwise</value>
        </member>
        <member name="P:ZedGraph.Axis.TextLabels">
            <summary>
            The text labels for this <see cref="T:ZedGraph.Axis"/>.
            </summary>
            <remarks>
            This property is only
            applicable if <see cref="P:ZedGraph.Axis.Type"/> is set to <see cref="F:ZedGraph.AxisType.Text"/>.
            </remarks>
        </member>
        <member name="P:ZedGraph.Axis.ScaleFormatAuto">
            <summary>
            Determines whether or not the scale label format <see cref="P:ZedGraph.Axis.ScaleFormat"/>
            is determined automatically based on the range of data values.
            </summary>
            <remarks>
            This value will be set to false if
            <see cref="P:ZedGraph.Axis.ScaleFormat"/> is manually changed.
            </remarks>
            <value>true if <see cref="P:ZedGraph.Axis.ScaleFormat"/> will be set automatically, false
            if it is to be set manually by the user</value>
            <seealso cref="P:ZedGraph.Axis.ScaleMag"/>
            <seealso cref="P:ZedGraph.Axis.ScaleFormat"/>
            <seealso cref="P:ZedGraph.Axis.ScaleFontSpec"/>
            <seealso cref="P:ZedGraph.Axis.NumDec"/>
        </member>
        <member name="P:ZedGraph.Axis.ScaleFormat">
            <summary>
            The format of the <see cref="T:ZedGraph.Axis"/> tic labels.
            </summary>
            <remarks>
            This property is only used if the <see cref="P:ZedGraph.Axis.Type"/> is set to <see cref="F:ZedGraph.AxisType.Date"/>.
            This property may be set automatically by ZedGraph, depending on the state of
            <see cref="P:ZedGraph.Axis.ScaleFormatAuto"/>.
            </remarks>
            <value>This format string is as defined for the <see cref="M:ZedGraph.XDate.ToString"/> function</value>
            <seealso cref="P:ZedGraph.Axis.ScaleMag"/>
            <seealso cref="P:ZedGraph.Axis.ScaleFormatAuto"/>
            <seealso cref="P:ZedGraph.Axis.ScaleFontSpec"/>
            <seealso cref="P:ZedGraph.Axis.NumDec"/>
        </member>
        <member name="P:ZedGraph.Axis.ScaleAlign">
            <summary> Controls the alignment of the <see cref="T:ZedGraph.Axis"/> tic labels.
            </summary>
            <remarks>
            This property controls whether the inside, center, or outside edges of the
            text labels are aligned.
            </remarks>
        </member>
        <member name="P:ZedGraph.Axis.NumDecAuto">
            <summary>
            Determines whether or not the number of decimal places for value
            labels <see cref="P:ZedGraph.Axis.NumDec"/> is determined automatically based
            on the magnitudes of the scale values.
            </summary>
            <remarks>This value will be set to false if
            <see cref="P:ZedGraph.Axis.NumDec"/> is manually changed.
            </remarks>
            <value>true if <see cref="P:ZedGraph.Axis.NumDec"/> will be set automatically, false
            if it is to be set manually by the user</value>
            <seealso cref="P:ZedGraph.Axis.ScaleMag"/>
            <seealso cref="P:ZedGraph.Axis.ScaleFormat"/>
            <seealso cref="P:ZedGraph.Axis.ScaleFontSpec"/>
            <seealso cref="P:ZedGraph.Axis.NumDec"/>
        </member>
        <member name="P:ZedGraph.Axis.NumDec">
            <summary>
            The number of decimal places displayed for axis value labels.
            </summary>
            <remarks>
            This value can be determined automatically depending on the state of
            <see cref="P:ZedGraph.Axis.NumDecAuto"/>.  If this value is set manually by the user,
            then <see cref="P:ZedGraph.Axis.NumDecAuto"/> will also be set to false.
            </remarks>
            <value>the number of decimal places to be displayed for the axis
            scale labels</value>
            <seealso cref="P:ZedGraph.Axis.ScaleMag"/>
            <seealso cref="P:ZedGraph.Axis.ScaleFormat"/>
            <seealso cref="P:ZedGraph.Axis.ScaleFontSpec"/>
            <seealso cref="P:ZedGraph.Axis.NumDecAuto"/>
        </member>
        <member name="P:ZedGraph.Axis.ScaleMag">
            <summary>
            The magnitude multiplier for scale values.
            </summary>
            <remarks>
            This is used to limit
            the size of the displayed value labels.  For example, if the value
            is really 2000000, then the graph will display 2000 with a 10^3
            magnitude multiplier.  This value can be determined automatically
            depending on the state of <see cref="P:ZedGraph.Axis.ScaleMagAuto"/>.
            If this value is set manually by the user,
            then <see cref="P:ZedGraph.Axis.ScaleMagAuto"/> will also be set to false.
            </remarks>
            <value>The magnitude multiplier (power of 10) for the scale
            value labels</value>
            <seealso cref="P:ZedGraph.Axis.IsOmitMag"/>
            <seealso cref="P:ZedGraph.Axis.Title"/>
            <seealso cref="P:ZedGraph.Axis.ScaleFormat"/>
            <seealso cref="P:ZedGraph.Axis.ScaleFontSpec"/>
            <seealso cref="P:ZedGraph.Axis.NumDec"/>
        </member>
        <member name="P:ZedGraph.Axis.ScaleMagAuto">
            <summary>
            Determines whether the <see cref="P:ZedGraph.Axis.ScaleMag"/> value will be set
            automatically based on the data, or manually by the user.
            </summary>
            <remarks>
            If the user manually sets the <see cref="P:ZedGraph.Axis.ScaleMag"/> value, then this
            flag will be set to false.
            </remarks>
            <value>true to have <see cref="P:ZedGraph.Axis.ScaleMag"/> set automatically,
            false otherwise</value>
            <seealso cref="P:ZedGraph.Axis.IsOmitMag"/>
            <seealso cref="P:ZedGraph.Axis.Title"/>
            <seealso cref="P:ZedGraph.Axis.ScaleMag"/>
        </member>
        <member name="P:ZedGraph.Axis.ScaleFontSpec">
            <summary>
            Gets a reference to the <see cref="T:ZedGraph.FontSpec"/> class used to render
            the scale values
            </summary>
            <seealso cref="F:ZedGraph.Axis.Default.ScaleFontFamily"/>
            <seealso cref="F:ZedGraph.Axis.Default.ScaleFontSize"/>
            <seealso cref="F:ZedGraph.Axis.Default.ScaleFontColor"/>
            <seealso cref="F:ZedGraph.Axis.Default.ScaleFontBold"/>
            <seealso cref="F:ZedGraph.Axis.Default.ScaleFontUnderline"/>
            <seealso cref="F:ZedGraph.Axis.Default.ScaleFontItalic"/>
        </member>
        <member name="P:ZedGraph.Axis.TitleFontSpec">
            <summary>
            Gets a reference to the <see cref="T:ZedGraph.FontSpec"/> class used to render
            the <see cref="T:ZedGraph.Axis"/> <see cref="P:ZedGraph.Axis.Title"/>,
            </summary>
            <seealso cref="F:ZedGraph.Axis.Default.TitleFontFamily"/>
            <seealso cref="F:ZedGraph.Axis.Default.TitleFontSize"/>
            <seealso cref="F:ZedGraph.Axis.Default.TitleFontColor"/>
            <seealso cref="F:ZedGraph.Axis.Default.TitleFontBold"/>
            <seealso cref="F:ZedGraph.Axis.Default.TitleFontUnderline"/>
            <seealso cref="F:ZedGraph.Axis.Default.TitleFontItalic"/>
        </member>
        <member name="T:ZedGraph.Axis.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.Axis"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TicSize">
            <summary>
            The default size for the <see cref="T:ZedGraph.Axis"/> tic marks.
            (<see cref="P:ZedGraph.Axis.TicSize"/> property). Units are in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.MinorTicSize">
            <summary>
            The default size for the <see cref="T:ZedGraph.Axis"/> minor tic marks.
            (<see cref="P:ZedGraph.Axis.MinorTicSize"/> property). Units are in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TicPenWidth">
            <summary>
            The default pen width for drawing the <see cref="T:ZedGraph.Axis"/> tic marks.
            (<see cref="P:ZedGraph.Axis.TicPenWidth"/> property). Units are in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.ZeroLever">
            <summary>
            The default "zero lever" for automatically selecting the axis
            scale range (see <see cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/>). This number is
            used to determine when an axis scale range should be extended to
            include the zero value.  This value is maintained only in the
            <see cref="T:ZedGraph.Axis.Default"/> class, and cannot be changed after compilation.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.MinGrace">
            <summary> The default "grace" value applied to the minimum data range.
            This value is
            expressed as a fraction of the total data range.  For example, assume the data
            range is from 4.0 to 16.0, leaving a range of 12.0.  If MinGrace is set to
            0.1, then 10% of the range, or 1.2 will be subtracted from the minimum data value.
            The scale will then be ranged to cover at least 2.8 to 16.0.
            </summary>
            <seealso cref="P:ZedGraph.Axis.MinGrace"/>
        </member>
        <member name="F:ZedGraph.Axis.Default.MaxGrace">
            <summary> The default "grace" value applied to the maximum data range.
            This value is
            expressed as a fraction of the total data range.  For example, assume the data
            range is from 4.0 to 16.0, leaving a range of 12.0.  If MaxGrace is set to
            0.1, then 10% of the range, or 1.2 will be added to the maximum data value.
            The scale will then be ranged to cover at least 4.0 to 17.2.
            </summary>
            <seealso cref="P:ZedGraph.Axis.MinGrace"/>
            <seealso cref="F:ZedGraph.Axis.Default.MaxGrace"/>
        </member>
        <member name="F:ZedGraph.Axis.Default.EdgeTolerance">
            <summary>
            Determines the size of the band at the beginning and end of the axis that will have labels
            omitted if the axis is shifted due to a non-default location using the <see cref="P:ZedGraph.Axis.Cross"/>
            property.
            </summary>
            <remarks>
            This parameter applies only when <see cref="P:ZedGraph.Axis.CrossAuto"/> is false.  It is scaled according
            to the size of the graph based on <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  When a non-default
            axis location is selected, the first and last labels on that axis will overlap the opposing
            axis frame.  This parameter allows those labels to be omitted to avoid the overlap.  Set this
            parameter to zero to turn off the effect.
            </remarks>
        </member>
        <member name="F:ZedGraph.Axis.Default.MaxTextLabels">
            <summary>
            The maximum number of text labels (major tics) that will be allowed on the plot by
            the automatic scaling logic.  This value applies only to <see cref="F:ZedGraph.AxisType.Text"/>
            axes.  If there are more than MaxTextLabels on the plot, then
            <see cref="P:ZedGraph.Axis.Step"/> will be increased to reduce the number of labels.  That is,
            the step size might be increased to 2.0 to show only every other label.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TargetXSteps">
            <summary>
            The default target number of steps for automatically selecting the X axis
            scale step size (see <see cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/>).
            This number is an initial target value for the number of major steps
            on an axis.  This value is maintained only in the
            <see cref="T:ZedGraph.Axis.Default"/> class, and cannot be changed after compilation.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TargetYSteps">
            <summary>
            The default target number of steps for automatically selecting the Y or Y2 axis
            scale step size (see <see cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/>).
            This number is an initial target value for the number of major steps
            on an axis.  This value is maintained only in the
            <see cref="T:ZedGraph.Axis.Default"/> class, and cannot be changed after compilation.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TargetMinorXSteps">
            <summary>
            The default target number of minor steps for automatically selecting the X axis
            scale minor step size (see <see cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/>).
            This number is an initial target value for the number of minor steps
            on an axis.  This value is maintained only in the
            <see cref="T:ZedGraph.Axis.Default"/> class, and cannot be changed after compilation.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TargetMinorYSteps">
            <summary>
            The default target number of minor steps for automatically selecting the Y or Y2 axis
            scale minor step size (see <see cref="M:ZedGraph.Axis.PickScale(System.Double,System.Double,ZedGraph.GraphPane,System.Drawing.Graphics,System.Single)"/>).
            This number is an initial target value for the number of minor steps
            on an axis.  This value is maintained only in the
            <see cref="T:ZedGraph.Axis.Default"/> class, and cannot be changed after compilation.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.ScaleAlign">
            <summary> The default alignment of the <see cref="T:ZedGraph.Axis"/> tic labels.
            This value controls whether the inside, center, or outside edges of the text labels are aligned.
            </summary>
            <seealso cref="P:ZedGraph.Axis.ScaleAlign"/>
        </member>
        <member name="F:ZedGraph.Axis.Default.ScaleFontFamily">
            <summary>
            The default font family for the <see cref="T:ZedGraph.Axis"/> scale values
            font specification <see cref="P:ZedGraph.Axis.ScaleFontSpec"/>
            (<see cref="P:ZedGraph.FontSpec.Family"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.ScaleFontSize">
            <summary>
            The default font size for the <see cref="T:ZedGraph.Axis"/> scale values
            font specification <see cref="P:ZedGraph.Axis.ScaleFontSpec"/>
            (<see cref="P:ZedGraph.FontSpec.Size"/> property).  Units are
            in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.ScaleFontColor">
            <summary>
            The default font color for the <see cref="T:ZedGraph.Axis"/> scale values
            font specification <see cref="P:ZedGraph.Axis.ScaleFontSpec"/>
            (<see cref="P:ZedGraph.FontSpec.FontColor"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.ScaleFontBold">
            <summary>
            The default font bold mode for the <see cref="T:ZedGraph.Axis"/> scale values
            font specification <see cref="P:ZedGraph.Axis.ScaleFontSpec"/>
            (<see cref="P:ZedGraph.FontSpec.IsBold"/> property). true
            for a bold typeface, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.ScaleFontItalic">
            <summary>
            The default font italic mode for the <see cref="T:ZedGraph.Axis"/> scale values
            font specification <see cref="P:ZedGraph.Axis.ScaleFontSpec"/>
            (<see cref="P:ZedGraph.FontSpec.IsItalic"/> property). true
            for an italic typeface, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.ScaleFontUnderline">
            <summary>
            The default font underline mode for the <see cref="T:ZedGraph.Axis"/> scale values
            font specification <see cref="P:ZedGraph.Axis.ScaleFontSpec"/>
            (<see cref="P:ZedGraph.FontSpec.IsUnderline"/> property). true
            for an underlined typeface, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.ScaleFillColor">
            <summary>
            The default color for filling in the scale text background
            (see <see cref="P:ZedGraph.Fill.Color"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.ScaleFillBrush">
            <summary>
            The default custom brush for filling in the scale text background
            (see <see cref="P:ZedGraph.Fill.Brush"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.ScaleFillType">
            <summary>
            The default fill mode for filling in the scale text background
            (see <see cref="P:ZedGraph.Fill.Type"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.IsShowTitle">
            <summary>
            The default display mode for the <see cref="T:ZedGraph.Axis"/>
            <see cref="P:ZedGraph.Axis.Title"/> property
            (<see cref="P:ZedGraph.Axis.IsShowGrid"/> property). true
            to show the title, false to hide it.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TitleFontFamily">
            <summary>
            The default font family for the <see cref="T:ZedGraph.Axis"/> title text
            font specification <see cref="P:ZedGraph.Axis.TitleFontSpec"/>
            (<see cref="P:ZedGraph.FontSpec.Family"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TitleFontSize">
            <summary>
            The default font size for the <see cref="T:ZedGraph.Axis"/> title text
            font specification <see cref="P:ZedGraph.Axis.TitleFontSpec"/>
            (<see cref="P:ZedGraph.FontSpec.Size"/> property).  Units are
            in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TitleFontColor">
            <summary>
            The default font color for the <see cref="T:ZedGraph.Axis"/> title text
            font specification <see cref="P:ZedGraph.Axis.TitleFontSpec"/>
            (<see cref="P:ZedGraph.FontSpec.FontColor"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TitleFontBold">
            <summary>
            The default font bold mode for the <see cref="T:ZedGraph.Axis"/> title text
            font specification <see cref="P:ZedGraph.Axis.TitleFontSpec"/>
            (<see cref="P:ZedGraph.FontSpec.IsBold"/> property). true
            for a bold typeface, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TitleFontItalic">
            <summary>
            The default font italic mode for the <see cref="T:ZedGraph.Axis"/> title text
            font specification <see cref="P:ZedGraph.Axis.TitleFontSpec"/>
            (<see cref="P:ZedGraph.FontSpec.IsItalic"/> property). true
            for an italic typeface, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TitleFontUnderline">
            <summary>
            The default font underline mode for the <see cref="T:ZedGraph.Axis"/> title text
            font specification <see cref="P:ZedGraph.Axis.TitleFontSpec"/>
            (<see cref="P:ZedGraph.FontSpec.IsUnderline"/> property). true
            for an underlined typeface, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TitleFillColor">
            <summary>
            The default color for filling in the title text background
            (see <see cref="P:ZedGraph.Fill.Color"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TitleFillBrush">
            <summary>
            The default custom brush for filling in the title text background
            (see <see cref="P:ZedGraph.Fill.Brush"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.TitleFillType">
            <summary>
            The default fill mode for filling in the title text background
            (see <see cref="P:ZedGraph.Fill.Type"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.GridDashOn">
            <summary>
            The default "dash on" size for drawing the <see cref="T:ZedGraph.Axis"/> grid
            (<see cref="P:ZedGraph.Axis.GridDashOn"/> property). Units are in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.GridDashOff">
            <summary>
            The default "dash off" size for drawing the <see cref="T:ZedGraph.Axis"/> grid
            (<see cref="P:ZedGraph.Axis.GridDashOff"/> property). Units are in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.GridPenWidth">
            <summary>
            The default pen width for drawing the <see cref="T:ZedGraph.Axis"/> grid
            (<see cref="P:ZedGraph.Axis.GridPenWidth"/> property). Units are in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.GridColor">
            <summary>
            The default color for the <see cref="T:ZedGraph.Axis"/> grid lines
            (<see cref="P:ZedGraph.Axis.GridColor"/> property).  This color only affects the
            grid lines.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.MinorGridDashOn">
            <summary>
            The default "dash on" size for drawing the <see cref="T:ZedGraph.Axis"/> minor grid
            (<see cref="P:ZedGraph.Axis.MinorGridDashOn"/> property). Units are in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.MinorGridDashOff">
            <summary>
            The default "dash off" size for drawing the <see cref="T:ZedGraph.Axis"/> minor grid
            (<see cref="P:ZedGraph.Axis.MinorGridDashOff"/> property). Units are in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.MinorGridPenWidth">
            <summary>
            The default pen width for drawing the <see cref="T:ZedGraph.Axis"/> minor grid
            (<see cref="P:ZedGraph.Axis.MinorGridPenWidth"/> property). Units are in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.MinorGridColor">
            <summary>
            The default color for the <see cref="T:ZedGraph.Axis"/> minor grid lines
            (<see cref="P:ZedGraph.Axis.MinorGridColor"/> property).  This color only affects the
            minor grid lines.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.Color">
            <summary>
            The default color for the <see cref="T:ZedGraph.Axis"/> itself
            (<see cref="P:ZedGraph.Axis.Color"/> property).  This color only affects the
            tic marks and the axis border.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.IsShowGrid">
            <summary>
            The default display mode for the <see cref="T:ZedGraph.Axis"/> grid lines
            (<see cref="P:ZedGraph.Axis.IsShowGrid"/> property). true
            to show the grid lines, false to hide them.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.IsShowMinorGrid">
            <summary>
            The default display mode for the <see cref="T:ZedGraph.Axis"/> minor grid lines
            (<see cref="P:ZedGraph.Axis.IsShowMinorGrid"/> property). true
            to show the minor grid lines, false to hide them.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.IsTic">
            <summary>
            The display mode for the <see cref="T:ZedGraph.Axis"/> major outside tic marks
            (<see cref="P:ZedGraph.Axis.IsTic"/> property).
            The major tic spacing is controlled by <see cref="P:ZedGraph.Axis.Step"/>.
            </summary>
            <value>true to show the major tic marks (outside the axis),
            false otherwise</value>
        </member>
        <member name="F:ZedGraph.Axis.Default.IsMinorTic">
            <summary>
            The display mode for the <see cref="T:ZedGraph.Axis"/> minor outside tic marks
            (<see cref="P:ZedGraph.Axis.IsMinorTic"/> property).
            The minor tic spacing is controlled by <see cref="P:ZedGraph.Axis.MinorStep"/>.
            </summary>
            <value>true to show the minor tic marks (outside the axis),
            false otherwise</value>
        </member>
        <member name="F:ZedGraph.Axis.Default.IsInsideTic">
            <summary>
            The display mode for the <see cref="T:ZedGraph.Axis"/> major inside tic marks
            (<see cref="P:ZedGraph.Axis.IsInsideTic"/> property).
            The major tic spacing is controlled by <see cref="P:ZedGraph.Axis.Step"/>.
            </summary>
            <value>true to show the major tic marks (inside the axis),
            false otherwise</value>
        </member>
        <member name="F:ZedGraph.Axis.Default.IsOppositeTic">
            <summary>
            The display mode for the <see cref="T:ZedGraph.Axis"/> major opposite tic marks
            (<see cref="P:ZedGraph.Axis.IsOppositeTic"/> property).
            The major tic spacing is controlled by <see cref="P:ZedGraph.Axis.Step"/>.
            </summary>
            <value>true to show the major tic marks
            (inside the axis on the opposite side),
            false otherwise</value>
        </member>
        <member name="F:ZedGraph.Axis.Default.IsMinorInsideTic">
            <summary>
            The display mode for the <see cref="T:ZedGraph.Axis"/> minor inside tic marks
            (<see cref="P:ZedGraph.Axis.IsMinorTic"/> property).
            The minor tic spacing is controlled by <see cref="P:ZedGraph.Axis.MinorStep"/>.
            </summary>
            <value>true to show the minor tic marks (inside the axis),
            false otherwise</value>
        </member>
        <member name="F:ZedGraph.Axis.Default.IsMinorOppositeTic">
            <summary>
            The display mode for the <see cref="T:ZedGraph.Axis"/> minor opposite tic marks
            (<see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/> property).
            The minor tic spacing is controlled by <see cref="P:ZedGraph.Axis.MinorStep"/>.
            </summary>
            <value>true to show the minor tic marks
            (inside the axis on the opposite side),
            false otherwise</value>
        </member>
        <member name="F:ZedGraph.Axis.Default.IsLog">
            <summary>
            The default logarithmic mode for the <see cref="T:ZedGraph.Axis"/> scale
            (<see cref="P:ZedGraph.Axis.IsLog"/> property). true for a logarithmic scale,
            false for a cartesian scale.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.IsReverse">
            <summary>
            The default reverse mode for the <see cref="T:ZedGraph.Axis"/> scale
            (<see cref="P:ZedGraph.Axis.IsReverse"/> property). true for a reversed scale
            (X decreasing to the left, Y/Y2 decreasing upwards), false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.Type">
            <summary>
            The default setting for the <see cref="T:ZedGraph.Axis"/> scale axis type
            (<see cref="P:ZedGraph.Axis.Type"/> property).  This value is set as per
            the <see cref="T:ZedGraph.AxisType"/> enumeration
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.ScaleFormat">
            <summary>
            The default setting for the <see cref="T:ZedGraph.Axis"/> scale date format string
            (<see cref="P:ZedGraph.Axis.ScaleFormat"/> property).  This value is set as per
            the <see cref="M:ZedGraph.XDate.ToString"/> function.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.RangeYearYear">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            If the total span of data exceeds this number (in days), then the auto-range
            code will select <see cref="P:ZedGraph.Axis.MajorUnit"/> = <see cref="F:ZedGraph.DateUnit.Year"/>
            and <see cref="P:ZedGraph.Axis.MinorUnit"/> = <see cref="F:ZedGraph.DateUnit.Year"/>.
            This value normally defaults to 1825 days (5 years).
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.RangeYearMonth">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            If the total span of data exceeds this number (in days), then the auto-range
            code will select <see cref="P:ZedGraph.Axis.MajorUnit"/> = <see cref="F:ZedGraph.DateUnit.Year"/>
            and <see cref="P:ZedGraph.Axis.MinorUnit"/> = <see cref="F:ZedGraph.DateUnit.Month"/>.
            This value normally defaults to 365 days (1 year).
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.RangeMonthMonth">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            If the total span of data exceeds this number (in days), then the auto-range
            code will select <see cref="P:ZedGraph.Axis.MajorUnit"/> = <see cref="F:ZedGraph.DateUnit.Month"/>
            and <see cref="P:ZedGraph.Axis.MinorUnit"/> = <see cref="F:ZedGraph.DateUnit.Month"/>.
            This value normally defaults to 90 days (3 months).
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.RangeDayDay">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            If the total span of data exceeds this number (in days), then the auto-range
            code will select <see cref="P:ZedGraph.Axis.MajorUnit"/> = <see cref="F:ZedGraph.DateUnit.Day"/>
            and <see cref="P:ZedGraph.Axis.MinorUnit"/> = <see cref="F:ZedGraph.DateUnit.Day"/>.
            This value normally defaults to 10 days.
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.RangeDayHour">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            If the total span of data exceeds this number (in days), then the auto-range
            code will select <see cref="P:ZedGraph.Axis.MajorUnit"/> = <see cref="F:ZedGraph.DateUnit.Day"/>
            and <see cref="P:ZedGraph.Axis.MinorUnit"/> = <see cref="F:ZedGraph.DateUnit.Hour"/>.
            This value normally defaults to 3 days.
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.RangeHourHour">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            If the total span of data exceeds this number (in days), then the auto-range
            code will select <see cref="P:ZedGraph.Axis.MajorUnit"/> = <see cref="F:ZedGraph.DateUnit.Hour"/>
            and <see cref="P:ZedGraph.Axis.MinorUnit"/> = <see cref="F:ZedGraph.DateUnit.Hour"/>.
            This value normally defaults to 0.4167 days (10 hours).
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.RangeHourMinute">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            If the total span of data exceeds this number (in days), then the auto-range
            code will select <see cref="P:ZedGraph.Axis.MajorUnit"/> = <see cref="F:ZedGraph.DateUnit.Hour"/>
            and <see cref="P:ZedGraph.Axis.MinorUnit"/> = <see cref="F:ZedGraph.DateUnit.Minute"/>.
            This value normally defaults to 0.125 days (3 hours).
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.RangeMinuteMinute">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            If the total span of data exceeds this number (in days), then the auto-range
            code will select <see cref="P:ZedGraph.Axis.MajorUnit"/> = <see cref="F:ZedGraph.DateUnit.Minute"/>
            and <see cref="P:ZedGraph.Axis.MinorUnit"/> = <see cref="F:ZedGraph.DateUnit.Minute"/>.
            This value normally defaults to 6.94e-3 days (10 minutes).
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.RangeMinuteSecond">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            If the total span of data exceeds this number (in days), then the auto-range
            code will select <see cref="P:ZedGraph.Axis.MajorUnit"/> = <see cref="F:ZedGraph.DateUnit.Minute"/>
            and <see cref="P:ZedGraph.Axis.MinorUnit"/> = <see cref="F:ZedGraph.DateUnit.Second"/>.
            This value normally defaults to 2.083e-3 days (3 minutes).
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.Axis.Default.FormatYearYear">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            This is the format used for the scale values when auto-ranging code
            selects a <see cref="P:ZedGraph.Axis.ScaleFormat"/> of <see cref="F:ZedGraph.DateUnit.Year"/>
            for <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="F:ZedGraph.DateUnit.Year"/> for 
            for <see cref="P:ZedGraph.Axis.MinorUnit"/>.
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
            <seealso cref="T:System.Globalization.DateTimeFormatInfo"/>
        </member>
        <member name="F:ZedGraph.Axis.Default.FormatYearMonth">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            This is the format used for the scale values when auto-ranging code
            selects a <see cref="P:ZedGraph.Axis.ScaleFormat"/> of <see cref="F:ZedGraph.DateUnit.Year"/>
            for <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="F:ZedGraph.DateUnit.Month"/> for 
            for <see cref="P:ZedGraph.Axis.MinorUnit"/>.
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
            <seealso cref="T:System.Globalization.DateTimeFormatInfo"/>
        </member>
        <member name="F:ZedGraph.Axis.Default.FormatMonthMonth">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            This is the format used for the scale values when auto-ranging code
            selects a <see cref="P:ZedGraph.Axis.ScaleFormat"/> of <see cref="F:ZedGraph.DateUnit.Month"/>
            for <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="F:ZedGraph.DateUnit.Month"/> for 
            for <see cref="P:ZedGraph.Axis.MinorUnit"/>.
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
            <seealso cref="T:System.Globalization.DateTimeFormatInfo"/>
        </member>
        <member name="F:ZedGraph.Axis.Default.FormatDayDay">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            This is the format used for the scale values when auto-ranging code
            selects a <see cref="P:ZedGraph.Axis.ScaleFormat"/> of <see cref="F:ZedGraph.DateUnit.Day"/>
            for <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="F:ZedGraph.DateUnit.Day"/> for 
            for <see cref="P:ZedGraph.Axis.MinorUnit"/>.
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
            <seealso cref="T:System.Globalization.DateTimeFormatInfo"/>
        </member>
        <member name="F:ZedGraph.Axis.Default.FormatDayHour">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            This is the format used for the scale values when auto-ranging code
            selects a <see cref="P:ZedGraph.Axis.ScaleFormat"/> of <see cref="F:ZedGraph.DateUnit.Day"/>
            for <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="F:ZedGraph.DateUnit.Hour"/> for 
            for <see cref="P:ZedGraph.Axis.MinorUnit"/>.
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
            <seealso cref="T:System.Globalization.DateTimeFormatInfo"/>
        </member>
        <member name="F:ZedGraph.Axis.Default.FormatHourHour">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            This is the format used for the scale values when auto-ranging code
            selects a <see cref="P:ZedGraph.Axis.ScaleFormat"/> of <see cref="F:ZedGraph.DateUnit.Hour"/>
            for <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="F:ZedGraph.DateUnit.Hour"/> for 
            for <see cref="P:ZedGraph.Axis.MinorUnit"/>.
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
            <seealso cref="T:System.Globalization.DateTimeFormatInfo"/>
        </member>
        <member name="F:ZedGraph.Axis.Default.FormatHourMinute">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            This is the format used for the scale values when auto-ranging code
            selects a <see cref="P:ZedGraph.Axis.ScaleFormat"/> of <see cref="F:ZedGraph.DateUnit.Hour"/>
            for <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="F:ZedGraph.DateUnit.Minute"/> for 
            for <see cref="P:ZedGraph.Axis.MinorUnit"/>.
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
            <seealso cref="T:System.Globalization.DateTimeFormatInfo"/>
        </member>
        <member name="F:ZedGraph.Axis.Default.FormatMinuteMinute">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            This is the format used for the scale values when auto-ranging code
            selects a <see cref="P:ZedGraph.Axis.ScaleFormat"/> of <see cref="F:ZedGraph.DateUnit.Minute"/>
            for <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="F:ZedGraph.DateUnit.Minute"/> for 
            for <see cref="P:ZedGraph.Axis.MinorUnit"/>.
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
            <seealso cref="T:System.Globalization.DateTimeFormatInfo"/>
        </member>
        <member name="F:ZedGraph.Axis.Default.FormatMinuteSecond">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            This is the format used for the scale values when auto-ranging code
            selects a <see cref="P:ZedGraph.Axis.ScaleFormat"/> of <see cref="F:ZedGraph.DateUnit.Minute"/>
            for <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="F:ZedGraph.DateUnit.Second"/> for 
            for <see cref="P:ZedGraph.Axis.MinorUnit"/>.
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
            <seealso cref="T:System.Globalization.DateTimeFormatInfo"/>
        </member>
        <member name="F:ZedGraph.Axis.Default.FormatSecondSecond">
            <summary>
            A default setting for the <see cref="F:ZedGraph.AxisType.Date"/> auto-ranging code.
            This values applies only to Date-Time type axes.
            This is the format used for the scale values when auto-ranging code
            selects a <see cref="P:ZedGraph.Axis.ScaleFormat"/> of <see cref="F:ZedGraph.DateUnit.Second"/>
            for <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="F:ZedGraph.DateUnit.Second"/> for 
            for <see cref="P:ZedGraph.Axis.MinorUnit"/>.
            This value is used by the <see cref="M:ZedGraph.Axis.CalcDateStepSize(System.Double,System.Double)"/> method.
            </summary>
            <seealso cref="T:System.Globalization.DateTimeFormatInfo"/>
        </member>
        <member name="F:ZedGraph.Axis.Default.MinSpace">
            <summary>
            The default setting for the axis space allocation.  This term, expressed in
            points (1/72 inch) and scaled according to <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> for the
            <see cref="T:ZedGraph.GraphPane"/>, determines the minimum amount of space an axis must
            have between the <see cref="P:ZedGraph.GraphPane.AxisRect"/> and the
            <see cref="P:ZedGraph.PaneBase.PaneRect"/>.  This minimum space
            applies whether <see cref="P:ZedGraph.Axis.IsVisible"/> is true or false.
            </summary>
        </member>
        <member name="T:ZedGraph.Bar">
            <summary>
            A class representing all the characteristics of the bar
            segments that make up a curve on the graph.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.17 $ $Date: 2005/03/05 07:24:09 $ </version>
        </member>
        <member name="F:ZedGraph.Bar.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.Bar.fill">
            <summary>
            Private field that stores the <see cref="T:ZedGraph.Fill"/> data for this
            <see cref="T:ZedGraph.Bar"/>.  Use the public property <see cref="P:ZedGraph.Bar.Fill"/> to
            access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Bar.border">
            <summary>
            Private field that stores the <see cref="P:ZedGraph.Bar.Border"/> class that defines the
            properties of the border around this <see cref="T:ZedGraph.BarItem"/>. Use the public
            property <see cref="P:ZedGraph.Bar.Border"/> to access this value.
            </summary>
        </member>
        <member name="M:ZedGraph.Bar.#ctor">
            <summary>
            Default constructor that sets all <see cref="T:ZedGraph.Bar"/> properties to default
            values as defined in the <see cref="T:ZedGraph.Bar.Default"/> class.
            </summary>
        </member>
        <member name="M:ZedGraph.Bar.#ctor(System.Drawing.Color)">
            <summary>
            Default constructor that sets the 
            <see cref="T:System.Drawing.Color"/> as specified, and the remaining
            <see cref="T:ZedGraph.Bar"/> properties to default
            values as defined in the <see cref="T:ZedGraph.Bar.Default"/> class.
            The specified color is only applied to the
            <see cref="P:ZedGraph.Fill.Color"/>, and the <see cref="P:ZedGraph.Border.Color"/>
            will be defaulted.
            </summary>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value indicating
            the <see cref="P:ZedGraph.Fill.Color"/>
            of the Bar.
            </param>
        </member>
        <member name="M:ZedGraph.Bar.#ctor(ZedGraph.Bar)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The Bar object from which to copy</param>
        </member>
        <member name="M:ZedGraph.Bar.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the Bar</returns>
        </member>
        <member name="M:ZedGraph.Bar.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.Bar.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.Bar.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Draw the <see cref="T:ZedGraph.Bar"/> to the specified <see cref="T:System.Drawing.Graphics"/> device
            at the specified location.  This routine draws a single bar.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="left">The x position of the left side of the bar in
            pixel units</param>
            <param name="right">The x position of the right side of the bar in
            pixel units</param>
            <param name="top">The y position of the top of the bar in
            pixel units</param>
            <param name="bottom">The y position of the bottom of the bar in
            pixel units</param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.
            </param>
            <param name="fullFrame">true to draw the bottom portion of the border around the
            bar (this is for legend entries)</param> 
        </member>
        <member name="M:ZedGraph.Bar.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,System.Drawing.RectangleF,System.Single,System.Boolean)">
            <summary>
            Draw the <see cref="T:ZedGraph.Bar"/> to the specified <see cref="T:System.Drawing.Graphics"/> device
            at the specified location.  This routine draws a single bar.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="rect">The rectangle (pixels) to contain the bar</param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.
            </param>
            <param name="fullFrame">true to draw the bottom portion of the border around the
            bar (this is for legend entries)</param> 
        </member>
        <member name="M:ZedGraph.Bar.DrawBars(System.Drawing.Graphics,ZedGraph.GraphPane,ZedGraph.CurveItem,ZedGraph.Axis,ZedGraph.Axis,System.Single,System.Int32,System.Single)">
            <summary>
            Draw the this <see cref="T:ZedGraph.Bar"/> to the specified <see cref="T:System.Drawing.Graphics"/>
            device as a bar at each defined point. This method
            is normally only called by the <see cref="M:ZedGraph.BarItem.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,System.Int32,System.Single)"/> method of the
            <see cref="T:ZedGraph.BarItem"/> object
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="curve">A <see cref="T:ZedGraph.CurveItem"/> object representing the
            <see cref="T:ZedGraph.Bar"/>'s to be drawn.</param>
            <param name="baseAxis">The <see cref="T:ZedGraph.Axis"/> class instance that defines the base (independent)
            axis for the <see cref="T:ZedGraph.Bar"/></param>
            <param name="valueAxis">The <see cref="T:ZedGraph.Axis"/> class instance that defines the value (dependent)
            axis for the <see cref="T:ZedGraph.Bar"/></param>
            <param name="barWidth">
            The width of each bar, in pixels.
            </param>
            <param name="pos">
            The ordinal position of the this bar series (0=first bar, 1=second bar, etc.)
            in the cluster of bars.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.Bar.DrawSingleBar(System.Drawing.Graphics,ZedGraph.GraphPane,ZedGraph.CurveItem,ZedGraph.Axis,ZedGraph.Axis,System.Int32,System.Int32,System.Single)">
            <summary>
            Draw the specified single bar (an individual "point") of this series to the specified
            <see cref="T:System.Drawing.Graphics"/> device.  This method is not as efficient as
            <see cref="M:ZedGraph.Bar.DrawBars(System.Drawing.Graphics,ZedGraph.GraphPane,ZedGraph.CurveItem,ZedGraph.Axis,ZedGraph.Axis,System.Single,System.Int32,System.Single)"/>, which draws the bars for all points.  It is intended to be used
            only for <see cref="F:ZedGraph.BarType.SortedOverlay"/>, which requires special handling of each bar.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="curve">A <see cref="T:ZedGraph.CurveItem"/> object representing the
            <see cref="T:ZedGraph.Bar"/>'s to be drawn.</param>
            <param name="baseAxis">The <see cref="T:ZedGraph.Axis"/> class instance that defines the base (independent)
            axis for the <see cref="T:ZedGraph.Bar"/></param>
            <param name="valueAxis">The <see cref="T:ZedGraph.Axis"/> class instance that defines the value (dependent)
            axis for the <see cref="T:ZedGraph.Bar"/></param>
            <param name="pos">
            The ordinal position of the this bar series (0=first bar, 1=second bar, etc.)
            in the cluster of bars.
            </param>
            <param name="index">
            The zero-based index number for the single bar to be drawn.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.Bar.DrawSingleBar(System.Drawing.Graphics,ZedGraph.GraphPane,ZedGraph.CurveItem,System.Int32,System.Int32,ZedGraph.Axis,ZedGraph.Axis,System.Single)">
            <summary>
            Protected internal routine that draws the specified single bar (an individual "point")
            of this series to the specified <see cref="T:System.Drawing.Graphics"/> device.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="curve">A <see cref="T:ZedGraph.CurveItem"/> object representing the
            <see cref="T:ZedGraph.Bar"/>'s to be drawn.</param>
            <param name="index">
            The zero-based index number for the single bar to be drawn.
            </param>
            <param name="pos">
            The ordinal position of the this bar series (0=first bar, 1=second bar, etc.)
            in the cluster of bars.
            </param>
            <param name="baseAxis">The <see cref="T:ZedGraph.Axis"/> class instance that defines the base (independent)
            axis for the <see cref="T:ZedGraph.Bar"/></param>
            <param name="valueAxis">The <see cref="T:ZedGraph.Axis"/> class instance that defines the value (dependent)
            axis for the <see cref="T:ZedGraph.Bar"/></param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="P:ZedGraph.Bar.Border">
            <summary>
            The <see cref="P:ZedGraph.Bar.Border"/> object used to draw the border around the <see cref="T:ZedGraph.Bar"/>.
            </summary>
            <seealso cref="F:ZedGraph.Bar.Default.IsBorderVisible"/>
            <seealso cref="F:ZedGraph.Bar.Default.BorderWidth"/>
            <seealso cref="F:ZedGraph.Bar.Default.BorderColor"/>
        </member>
        <member name="P:ZedGraph.Bar.Fill">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.Fill"/> data for this
            <see cref="T:ZedGraph.Bar"/>.
            </summary>
        </member>
        <member name="T:ZedGraph.Bar.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.Bar"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.Bar.Default.BorderWidth">
            <summary>
            The default pen width to be used for drawing the border around the bars
            (<see cref="P:ZedGraph.Border.PenWidth"/> property).  Units are points.
            </summary>
        </member>
        <member name="F:ZedGraph.Bar.Default.FillType">
            <summary>
            The default fill mode for bars (<see cref="P:ZedGraph.Fill.Type"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Bar.Default.IsBorderVisible">
            <summary>
            The default border mode for bars (<see cref="P:ZedGraph.Border.IsVisible"/> property).
            true to display frames around bars, false otherwise
            </summary>
        </member>
        <member name="F:ZedGraph.Bar.Default.BorderColor">
            <summary>
            The default color for drawing frames around bars
            (<see cref="P:ZedGraph.Border.Color"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Bar.Default.FillColor">
            <summary>
            The default color for filling in the bars
            (<see cref="P:ZedGraph.Fill.Color"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Bar.Default.FillBrush">
            <summary>
            The default custom brush for filling in the bars
            (<see cref="P:ZedGraph.Fill.Brush"/> property).
            </summary>
        </member>
        <member name="T:ZedGraph.BarItem">
            <summary>
            Encapsulates a bar type that displays vertical or horizontal bars
            </summary>
            <remarks>
            The orientation of the bars depends on the state of
            <see cref="P:ZedGraph.GraphPane.BarBase"/>, and the bars can be stacked or
            clustered, depending on the state of <see cref="P:ZedGraph.GraphPane.BarType"/>
            </remarks>
            <author> John Champion </author>
            <version> $Revision: 3.11 $ $Date: 2005/02/11 05:20:42 $ </version>
        </member>
        <member name="T:ZedGraph.CurveItem">
            <summary>
            This class contains the data and methods for an individual curve within
            a graph pane.  It carries the settings for the curve including the
            key and item names, colors, symbols and sizes, linetypes, etc.
            </summary>
            
            <author> John Champion
            modified by Jerry Vos </author>
            <version> $Revision: 3.20 $ $Date: 2005/03/11 17:24:37 $ </version>
        </member>
        <member name="F:ZedGraph.CurveItem.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.CurveItem.label">
            <summary>
            protected field that stores a legend label string for this
            <see cref="T:ZedGraph.CurveItem"/>.  Use the public
            property <see cref="P:ZedGraph.CurveItem.Label"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.CurveItem.isY2Axis">
            <summary>
            protected field that stores the boolean value that determines whether this
            <see cref="T:ZedGraph.CurveItem"/> is on the left Y axis or the right Y axis (Y2).
            Use the public property <see cref="P:ZedGraph.CurveItem.IsY2Axis"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.CurveItem.isVisible">
            <summary>
            protected field that stores the boolean value that determines whether this
            <see cref="T:ZedGraph.CurveItem"/> is visible on the graph.
            Use the public property <see cref="P:ZedGraph.CurveItem.IsVisible"/> to access this value.
            Note that this value turns the curve display on or off, but it does not
            affect the display of the legend entry.  To hide the legend entry, you
            have to set <see cref="P:ZedGraph.CurveItem.IsLegendLabelVisible"/> to false.
            </summary>
        </member>
        <member name="F:ZedGraph.CurveItem.isLegendLabelVisible">
            <summary>
            protected field that stores the boolean value that determines whether the label
            for this <see cref="T:ZedGraph.CurveItem"/> is visible in the legend.
            Use the public property <see cref="P:ZedGraph.CurveItem.IsLegendLabelVisible"/> to access this value.
            Note that this value turns the legend entry display on or off, but it does not
            affect the display of the curve on the graph.  To hide the curve, you
            have to set <see cref="P:ZedGraph.CurveItem.IsVisible"/> to false.
            </summary>
        </member>
        <member name="F:ZedGraph.CurveItem.points">
            <summary>
            The <see cref="T:ZedGraph.PointPairList"/> of value sets that
            represent this <see cref="T:ZedGraph.CurveItem"/>.
            The size of this list determines the number of points that are
            plotted.  Note that values defined as
            System.Double.MaxValue are considered "missing" values
            (see <see cref="F:ZedGraph.PointPair.Missing"/>),
            and are not plotted.  The curve will have a break at these points
            to indicate the values are missing.
            </summary>
        </member>
        <member name="F:ZedGraph.CurveItem.Tag">
            <summary>
            A tag object for use by the user.  This can be used to store additional
            information associated with the <see cref="T:ZedGraph.CurveItem"/>.  ZedGraph does
            not use this value for any purpose.
            </summary>
            <remarks>
            Note that, if you are going to Serialize ZedGraph data, then any type
            that you store in <see cref="F:ZedGraph.CurveItem.Tag"/> must be a serializable type (or
            it will cause an exception).
            </remarks>
        </member>
        <member name="M:ZedGraph.CurveItem.#ctor(System.String,System.Double[],System.Double[])">
            <summary>
            <see cref="T:ZedGraph.CurveItem"/> constructor the pre-specifies the curve label, the
            x and y data values as a <see cref="T:ZedGraph.PointPairList"/>, the curve
            type (Bar or Line/Symbol), the <see cref="P:ZedGraph.CurveItem.Color"/>, and the
            <see cref="T:ZedGraph.SymbolType"/>. Other properties of the curve are
            defaulted to the values in the <see cref="T:ZedGraph.GraphPane.Default"/> class.
            </summary>
            <param name="label">A string label (legend entry) for this curve</param>
            <param name="x">An array of double precision values that define
            the independent (X axis) values for this curve</param>
            <param name="y">An array of double precision values that define
            the dependent (Y axis) values for this curve</param>
        </member>
        <member name="M:ZedGraph.CurveItem.#ctor(System.String,ZedGraph.PointPairList)">
            <summary>
            <see cref="T:ZedGraph.CurveItem"/> constructor the pre-specifies the curve label, the
            x and y data values as a <see cref="T:ZedGraph.PointPairList"/>, the curve
            type (Bar or Line/Symbol), the <see cref="P:ZedGraph.CurveItem.Color"/>, and the
            <see cref="T:ZedGraph.SymbolType"/>. Other properties of the curve are
            defaulted to the values in the <see cref="T:ZedGraph.GraphPane.Default"/> class.
            </summary>
            <param name="label">A string label (legend entry) for this curve</param>
            <param name="points">A <see cref="T:ZedGraph.PointPairList"/> of double precision value pairs that define
            the X and Y values for this curve</param>
        </member>
        <member name="M:ZedGraph.CurveItem.Init(System.String)">
            <summary>
            Internal initialization routine thats sets some initial values to defaults.
            </summary>
            <param name="label">A string label (legend entry) for this curve</param>
        </member>
        <member name="M:ZedGraph.CurveItem.#ctor(System.String)">
            <summary>
            <see cref="T:ZedGraph.CurveItem"/> constructor that specifies the label of the CurveItem.
            This is the same as <c>CurveItem(label, null, null)</c>.
            <seealso cref="M:ZedGraph.CurveItem.#ctor(System.String,System.Double[],System.Double[])"/>
            </summary>
            <param name="label">A string label (legend entry) for this curve</param>
        </member>
        <member name="M:ZedGraph.CurveItem.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:ZedGraph.CurveItem.#ctor(ZedGraph.CurveItem)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The CurveItem object from which to copy</param>
        </member>
        <member name="M:ZedGraph.CurveItem.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the CurveItem</returns>
        </member>
        <member name="M:ZedGraph.CurveItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.CurveItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.CurveItem.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,System.Int32,System.Single)">
            <summary>
            Do all rendering associated with this <see cref="T:ZedGraph.CurveItem"/> to the specified
            <see cref="T:System.Drawing.Graphics"/> device.  This method is normally only
            called by the Draw method of the parent <see cref="T:ZedGraph.CurveList"/>
            collection object.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="pos">The ordinal position of the current <see cref="T:ZedGraph.Bar"/>
            curve.</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.CurveItem.DrawLegendKey(System.Drawing.Graphics,ZedGraph.GraphPane,System.Drawing.RectangleF,System.Single)">
            <summary>
            Draw a legend key entry for this <see cref="T:ZedGraph.CurveItem"/> at the specified location.
            This abstract base method passes through to <see cref="M:ZedGraph.BarItem.DrawLegendKey(System.Drawing.Graphics,ZedGraph.GraphPane,System.Drawing.RectangleF,System.Single)"/> or
            <see cref="M:ZedGraph.LineItem.DrawLegendKey(System.Drawing.Graphics,ZedGraph.GraphPane,System.Drawing.RectangleF,System.Single)"/> to do the rendering.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> struct that specifies the
            location for the legend key</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.CurveItem.AddPoint(System.Double,System.Double)">
            <summary>
            Add a single x,y coordinate point to the end of the points collection for this curve.
            </summary>
            <param name="x">The X coordinate value</param>
            <param name="y">The Y coordinate value</param>
        </member>
        <member name="M:ZedGraph.CurveItem.AddPoint(ZedGraph.PointPair)">
            <summary>
            Add a <see cref="T:ZedGraph.PointPair"/> object to the end of the points collection for this curve.
            </summary>
            <param name="point">A reference to the <see cref="T:ZedGraph.PointPair"/> object to
            be added</param>
        </member>
        <member name="M:ZedGraph.CurveItem.Clear">
            <summary>
            Clears the points from this <see cref="T:ZedGraph.CurveItem"/>.  This is the same
            as <c>CurveItem.Points.Clear()</c>.
            </summary>
        </member>
        <member name="M:ZedGraph.CurveItem.MakeUnique">
            <summary>
            Loads some pseudo unique colors/symbols into this CurveItem.  This
            is the same as <c>MakeUnique(ColorSymbolRotator.StaticInstance)</c>.
            <seealso cref="P:ZedGraph.ColorSymbolRotator.StaticInstance"/>
            <seealso cref="T:ZedGraph.ColorSymbolRotator"/>
            <seealso cref="M:ZedGraph.CurveItem.MakeUnique(ZedGraph.ColorSymbolRotator)"/>
            </summary>
        </member>
        <member name="M:ZedGraph.CurveItem.MakeUnique(ZedGraph.ColorSymbolRotator)">
            <summary>
            Loads some pseudo unique colors/symbols into this CurveItem.  This
            is mainly useful for differentiating a set of new CurveItems without
            having to pick your own colors/symbols.
            <seealso cref="M:ZedGraph.CurveItem.MakeUnique(ZedGraph.ColorSymbolRotator)"/>
            </summary>
            <param name="rotator">
            The <see cref="T:ZedGraph.ColorSymbolRotator"/> that is used to pick the color
             and symbol for this method call.
            </param>
        </member>
        <member name="M:ZedGraph.CurveItem.GetRange(System.Double@,System.Double@,System.Double@,System.Double@,System.Boolean,System.Double,System.Double,System.Double,System.Double,ZedGraph.GraphPane)">
            <summary>
            Go through the list of <see cref="T:ZedGraph.PointPair"/> data values for this <see cref="T:ZedGraph.CurveItem"/>
            and determine the minimum and maximum values in the data.
            </summary>
            <param name="xMin">The minimum X value in the range of data</param>
            <param name="xMax">The maximum X value in the range of data</param>
            <param name="yMin">The minimum Y value in the range of data</param>
            <param name="yMax">The maximum Y value in the range of data</param>
            <param name="bIgnoreInitial">ignoreInitial is a boolean value that
            affects the data range that is considered for the automatic scale
            ranging (see <see cref="P:ZedGraph.GraphPane.IsIgnoreInitial"/>).  If true, then initial
            data points where the Y value is zero are not included when
            automatically determining the scale <see cref="P:ZedGraph.Axis.Min"/>,
            <see cref="P:ZedGraph.Axis.Max"/>, and <see cref="P:ZedGraph.Axis.Step"/> size.  All data after
            the first non-zero Y value are included.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="xLBound">The lower bound of allowable data for the X values.  This
            value allows you to subset the data values.  If the X range is bounded, then
            the resulting range for Y will reflect the Y values for the points within the X
            bounds.  Use <see cref="F:System.Double.MinValue"/> to have no bound.</param>
            <param name="xUBound">The upper bound of allowable data for the X values.  This
            value allows you to subset the data values.  If the X range is bounded, then
            the resulting range for Y will reflect the Y values for the points within the X
            bounds.  Use <see cref="F:System.Double.MaxValue"/> to have no bound.</param>
            <param name="yLBound">The lower bound of allowable data for the Y values.  This
            value allows you to subset the data values.  If the Y range is bounded, then
            the resulting range for X will reflect the X values for the points within the Y
            bounds.  Use <see cref="F:System.Double.MinValue"/> to have no bound.</param>
            <param name="yUBound">The upper bound of allowable data for the Y values.  This
            value allows you to subset the data values.  If the Y range is bounded, then
            the resulting range for X will reflect the X values for the points within the Y
            bounds.  Use <see cref="F:System.Double.MaxValue"/> to have no bound.</param>
            <seealso cref="P:ZedGraph.GraphPane.IsBoundedRanges"/>
        </member>
        <member name="M:ZedGraph.CurveItem.BaseAxis(ZedGraph.GraphPane)">
            <summary>Returns a reference to the <see cref="T:ZedGraph.Axis"/> object that is the "base"
            (independent axis) from which the values are drawn. </summary>
            <remarks>
            This property is determined by the value of <see cref="P:ZedGraph.GraphPane.BarBase"/> for
            <see cref="T:ZedGraph.BarItem"/> types.  It is determined by <see cref="P:ZedGraph.ErrorBarItem.BarBase"/>
            for <see cref="T:ZedGraph.ErrorBarItem"/> types, and by <see cref="P:ZedGraph.HiLowBarItem.BarBase"/>
            for <see cref="T:ZedGraph.HiLowBarItem"/> types (in these cases it can vary for each
            curve.  It is always the X axis for regular <see cref="T:ZedGraph.LineItem"/> types.
            </remarks>
            <seealso cref="T:ZedGraph.BarBase"/>
            <seealso cref="M:ZedGraph.CurveItem.ValueAxis(ZedGraph.GraphPane,System.Boolean)"/>
        </member>
        <member name="M:ZedGraph.CurveItem.ValueAxis(ZedGraph.GraphPane,System.Boolean)">
            <summary>Returns a reference to the <see cref="T:ZedGraph.Axis"/> object that is the "value"
            (dependent axis) from which the points are drawn. </summary>
            <remarks>
            This property is determined by the value of <see cref="P:ZedGraph.GraphPane.BarBase"/> for
            <see cref="T:ZedGraph.BarItem"/> types.  It is determined by <see cref="P:ZedGraph.ErrorBarItem.BarBase"/>
            for <see cref="T:ZedGraph.ErrorBarItem"/> types, and by <see cref="P:ZedGraph.HiLowBarItem.BarBase"/>
            for <see cref="T:ZedGraph.HiLowBarItem"/> types (in these cases it can vary for each
            curve.  It is always the Y axis for regular <see cref="T:ZedGraph.LineItem"/> types.
            </remarks>
            <seealso cref="T:ZedGraph.BarBase"/>
            <seealso cref="M:ZedGraph.CurveItem.BaseAxis(ZedGraph.GraphPane)"/>
        </member>
        <member name="M:ZedGraph.CurveItem.GetBarWidth(ZedGraph.GraphPane)">
            <summary>
            Calculate the width of each bar, depending on the actual bar type
            </summary>
            <returns>The width for an individual bar, in pixel units</returns>
        </member>
        <member name="P:ZedGraph.CurveItem.Label">
            <summary>
            A text string that represents the <see cref="T:ZedGraph.Legend"/>
            entry for the this
            <see cref="T:ZedGraph.CurveItem"/> object
            </summary>
        </member>
        <member name="P:ZedGraph.CurveItem.Color">
            <summary>
            The <see cref="T:ZedGraph.Line"/>/<see cref="T:ZedGraph.Symbol"/>/<see cref="T:ZedGraph.Bar"/> 
            color (FillColor for the Bar).  This is a common access to
            <see cref="P:ZedGraph.Line.Color"/>, <see cref="P:ZedGraph.Border.Color"/>, and
            <see cref="P:ZedGraph.Fill.Color"/> properties for this curve.
            </summary>
        </member>
        <member name="P:ZedGraph.CurveItem.IsVisible">
            <summary>
            Determines whether this <see cref="T:ZedGraph.CurveItem"/> is visible on the graph.
            Note that this value turns the curve display on or off, but it does not
            affect the display of the legend entry.  To hide the legend entry, you
            have to set <see cref="P:ZedGraph.CurveItem.IsLegendLabelVisible"/> to false.
            </summary>
        </member>
        <member name="P:ZedGraph.CurveItem.IsLegendLabelVisible">
            <summary>
            Determines whether the label for this <see cref="T:ZedGraph.CurveItem"/> is visible in the legend.
            Note that this value turns the legend entry display on or off, but it does not
            affect the display of the curve on the graph.  To hide the curve, you
            have to set <see cref="P:ZedGraph.CurveItem.IsVisible"/> to false.
            </summary>
        </member>
        <member name="P:ZedGraph.CurveItem.IsY2Axis">
            <summary>
            Determines which Y axis this <see cref="T:ZedGraph.CurveItem"/>
            is assigned to.  The
            <see cref="T:ZedGraph.YAxis"/> is on the left side of the graph and the
            <see cref="T:ZedGraph.Y2Axis"/> is on the right side.  Assignment to an axis
            determines the scale that is used to draw the curve on the graph.
            </summary>
            <value>true to assign the curve to the <see cref="T:ZedGraph.Y2Axis"/>,
            false to assign the curve to the <see cref="T:ZedGraph.YAxis"/></value>
        </member>
        <member name="P:ZedGraph.CurveItem.IsBar">
            <summary>
            Determines whether this <see cref="T:ZedGraph.CurveItem"/>
            is a <see cref="T:ZedGraph.BarItem"/>.  This does not include <see cref="T:ZedGraph.HiLowBarItem"/>'s
            or <see cref="T:ZedGraph.ErrorBarItem"/>'s.
            </summary>
            <value>true for a bar chart, or false for a line or pie graph</value>
        </member>
        <member name="P:ZedGraph.CurveItem.IsPie">
            <summary>
            Determines whether this <see cref="T:ZedGraph.CurveItem"/>
            is a <see cref="T:ZedGraph.PieItem"/>.
            </summary>
            <value>true for a pie chart, or false for a line or bar graph</value>
        </member>
        <member name="P:ZedGraph.CurveItem.IsLine">
            <summary>
            Determines whether this <see cref="T:ZedGraph.CurveItem"/>
            is a <see cref="T:ZedGraph.LineItem"/>.
            </summary>
            <value>true for a line chart, or false for a bar type</value>
        </member>
        <member name="P:ZedGraph.CurveItem.NPts">
            <summary>
            Readonly property that gives the number of points that define this
            <see cref="T:ZedGraph.CurveItem"/> object, which is the number of points in the
            <see cref="P:ZedGraph.CurveItem.Points"/> data collection.
            </summary>
        </member>
        <member name="P:ZedGraph.CurveItem.Points">
            <summary>
            The <see cref="T:ZedGraph.PointPairList"/> of X,Y point sets that represent this
            <see cref="T:ZedGraph.CurveItem"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.CurveItem.Item(System.Int32)">
            <summary>
            An accessor for the <see cref="T:ZedGraph.PointPair"/> datum for this <see cref="T:ZedGraph.CurveItem"/>.
            Index is the ordinal reference (zero based) of the point.
            </summary>
        </member>
        <member name="T:ZedGraph.CurveItem.Comparer">
            <summary>
            Compares <see cref="T:ZedGraph.CurveItem"/>'s based on the point value at the specified
            index and for the specified axis.
            <seealso cref="M:System.Collections.ArrayList.Sort"/>
            </summary>
        </member>
        <member name="M:ZedGraph.CurveItem.Comparer.#ctor(ZedGraph.SortType,System.Int32)">
            <summary>
            Constructor for Comparer.
            </summary>
            <param name="type">The axis type on which to sort.</param>
            <param name="index">The index number of the point on which to sort</param>
        </member>
        <member name="M:ZedGraph.CurveItem.Comparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two <see cref="T:ZedGraph.CurveItem"/>s using the previously specified index value
            and axis.  Sorts in descending order.
            </summary>
            <param name="l">Curve to the left.</param>
            <param name="r">Curve to the right.</param>
            <returns>-1, 0, or 1 depending on l.X's relation to r.X</returns>
        </member>
        <member name="F:ZedGraph.BarItem.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.BarItem.bar">
            <summary>
            Private field that stores a reference to the <see cref="T:ZedGraph.Bar"/>
            class defined for this <see cref="T:ZedGraph.BarItem"/>.  Use the public
            property <see cref="P:ZedGraph.BarItem.Bar"/> to access this value.
            </summary>
        </member>
        <member name="M:ZedGraph.BarItem.#ctor(System.String)">
            <summary>
            Create a new <see cref="T:ZedGraph.BarItem"/>, specifying only the legend label for the bar.
            </summary>
            <param name="label">The label that will appear in the legend.</param>
        </member>
        <member name="M:ZedGraph.BarItem.#ctor(System.String,System.Double[],System.Double[],System.Drawing.Color)">
            <summary>
            Create a new <see cref="T:ZedGraph.BarItem"/> using the specified properties.
            </summary>
            <param name="label">The label that will appear in the legend.</param>
            <param name="x">An array of double precision values that define
            the independent (X axis) values for this curve</param>
            <param name="y">An array of double precision values that define
            the dependent (Y axis) values for this curve</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value that will be applied to
            the <see cref="P:ZedGraph.Bar.Fill"/> and <see cref="P:ZedGraph.Bar.Border"/> properties.
            </param>
        </member>
        <member name="M:ZedGraph.BarItem.#ctor(System.String,ZedGraph.PointPairList,System.Drawing.Color)">
            <summary>
            Create a new <see cref="T:ZedGraph.BarItem"/> using the specified properties.
            </summary>
            <param name="label">The label that will appear in the legend.</param>
            <param name="points">A <see cref="T:ZedGraph.PointPairList"/> of double precision value pairs that define
            the X and Y values for this curve</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value that will be applied to
            the <see cref="P:ZedGraph.Bar.Fill"/> and <see cref="P:ZedGraph.Bar.Border"/> properties.
            </param>
        </member>
        <member name="M:ZedGraph.BarItem.#ctor(ZedGraph.BarItem)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.BarItem"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.BarItem.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the BarItem</returns>
        </member>
        <member name="M:ZedGraph.BarItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.BarItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.BarItem.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,System.Int32,System.Single)">
            <summary>
            Do all rendering associated with this <see cref="T:ZedGraph.BarItem"/> to the specified
            <see cref="T:System.Drawing.Graphics"/> device.  This method is normally only
            called by the Draw method of the parent <see cref="T:ZedGraph.CurveList"/>
            collection object.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="pos">The ordinal position of the current <see cref="P:ZedGraph.BarItem.Bar"/>
            curve.</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.BarItem.DrawLegendKey(System.Drawing.Graphics,ZedGraph.GraphPane,System.Drawing.RectangleF,System.Single)">
            <summary>
            Draw a legend key entry for this <see cref="T:ZedGraph.BarItem"/> at the specified location
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> struct that specifies the
            location for the legend key</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="P:ZedGraph.BarItem.Bar">
            <summary>
            Gets a reference to the <see cref="T:ZedGraph.Bar"/> class defined
            for this <see cref="T:ZedGraph.BarItem"/>.
            </summary>
        </member>
        <member name="T:ZedGraph.Border">
            <summary>
            A class that encapsulates Border (frame) properties for an object.  The <see cref="T:ZedGraph.Border"/> class
            is used in a variety of ZedGraph objects to handle the drawing of the Border around the object.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.10 $ $Date: 2005/01/22 06:20:50 $ </version>
        </member>
        <member name="F:ZedGraph.Border.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.Border.color">
            <summary>
            Private field that stores the Border color.  Use the public
            property <see cref="P:ZedGraph.Border.Color"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Border.penWidth">
            <summary>
            Private field that stores the pen width for this Border.  Use the public
            property <see cref="P:ZedGraph.Border.PenWidth"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Border.inflateFactor">
            <summary>
            Private field that stores the amount of inflation to be done on the rectangle
            before rendering.  This allows the border to be inset or outset relative to
            the actual rectangle area.  Use the public property <see cref="P:ZedGraph.Border.InflateFactor"/>
            to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Border.isVisible">
            <summary>
            Private field that determines if the Border will be drawn.  The Border will only
            be drawn if this value is true.  Use the public property <see cref="P:ZedGraph.Border.IsVisible"/>
            for access to this value.
            </summary>
        </member>
        <member name="M:ZedGraph.Border.#ctor">
            <summary>
            The default constructor.  Initialized to default values.
            </summary>
        </member>
        <member name="M:ZedGraph.Border.#ctor(System.Boolean,System.Drawing.Color,System.Single)">
            <summary>
            Constructor that specifies the visibility, color and penWidth of the Border.
            </summary>
            <param name="isVisible">Determines whether or not the Border will be drawn.</param>
            <param name="color">The color of the Border</param>
            <param name="penWidth">The width, in points (1/72 inch), for the Border.</param>
        </member>
        <member name="M:ZedGraph.Border.#ctor(System.Drawing.Color,System.Single)">
            <summary>
            Constructor that specifies the color and penWidth of the Border.
            </summary>
            <param name="color">The color of the Border</param>
            <param name="penWidth">The width, in points (1/72 inch), for the Border.</param>
        </member>
        <member name="M:ZedGraph.Border.#ctor(ZedGraph.Border)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The Border object from which to copy</param>
        </member>
        <member name="M:ZedGraph.Border.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the Border class</returns>
        </member>
        <member name="M:ZedGraph.Border.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.Border.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.Border.MakePen(System.Boolean,System.Single)">
            <summary>
            Create a new <see cref="T:System.Drawing.Pen"/> object from the properties of this
            <see cref="T:ZedGraph.Border"/> object.
            </summary>
            <param name="isPenWidthScaled">
            Set to true to have the <see cref="T:ZedGraph.Border"/> pen width scaled with the
            scaleFactor.
            </param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.
            </param>
            <returns>A <see cref="T:System.Drawing.Pen"/> object with the proper color and pen width.</returns>
        </member>
        <member name="M:ZedGraph.Border.Draw(System.Drawing.Graphics,System.Boolean,System.Single,System.Drawing.RectangleF)">
            <summary>
            Draw the specified Border (<see cref="T:System.Drawing.RectangleF"/>) using the properties of
            this <see cref="T:ZedGraph.Border"/> object.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="isPenWidthScaled">
            Set to true to have the <see cref="T:ZedGraph.Border"/> pen width scaled with the
            scaleFactor.
            </param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.
            </param>
            <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> struct to be drawn.</param>
        </member>
        <member name="P:ZedGraph.Border.Color">
            <summary>
            Determines the <see cref="T:System.Drawing.Color"/> of the <see cref="T:System.Drawing.Pen"/> used to
            draw this Border.
            </summary>
        </member>
        <member name="P:ZedGraph.Border.PenWidth">
            <summary>
            Gets or sets the width, in points (1/72 inch), of the <see cref="T:System.Drawing.Pen"/> used to draw this Border.
            </summary>
        </member>
        <member name="P:ZedGraph.Border.InflateFactor">
            <summary>
            Gets or sets the amount of inflation to be done on the rectangle
            before rendering.
            </summary>
            <remarks>This allows the border to be inset or outset relative to
            the actual rectangle area.  Use the public property <see cref="P:ZedGraph.Border.InflateFactor"/>
            to access this value.
            </remarks>
        </member>
        <member name="P:ZedGraph.Border.IsVisible">
            <summary>
            Determines whether or not the Border will be drawn.  true to draw the Border,
            false otherwise
            </summary>
        </member>
        <member name="T:ZedGraph.Border.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.Fill"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.Border.Default.IsVisible">
            <summary>
            The default visibility for drawing the Border.
            See the <see cref="F:ZedGraph.Border.Default.IsVisible"/> property.
            </summary>
        </member>
        <member name="F:ZedGraph.Border.Default.PenWidth">
            <summary>
            The default pen width, in points (1/72 inch), for the Border.  See the <see cref="F:ZedGraph.Border.Default.PenWidth"/>
            property.
            </summary>
        </member>
        <member name="F:ZedGraph.Border.Default.InflateFactor">
            <summary>
            The default value for <see cref="P:ZedGraph.Border.InflateFactor"/>, in units of points (1/72 inch).
            </summary>
            <seealso cref="P:ZedGraph.Border.InflateFactor"/>
        </member>
        <member name="F:ZedGraph.Border.Default.Color">
            <summary>
            The default color for the Border.  See the <see cref="F:ZedGraph.Border.Default.Color"/> property.
            </summary>
        </member>
        <member name="T:ZedGraph.BoxItem">
            <summary>
            A class that represents a bordered and/or filled box (rectangle) object on
            the graph.  A list of
            BoxItem objects is maintained by the <see cref="T:ZedGraph.GraphItemList"/> collection class.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.8 $ $Date: 2005/02/13 17:31:41 $ </version>
        </member>
        <member name="F:ZedGraph.BoxItem.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.BoxItem.fill">
            <summary>
            Private field that stores the <see cref="T:ZedGraph.Fill"/> data for this
            <see cref="T:ZedGraph.BoxItem"/>.  Use the public property <see cref="P:ZedGraph.BoxItem.Fill"/> to
            access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.BoxItem.border">
            <summary>
            Private field that determines the properties of the border around this
            <see cref="T:ZedGraph.BoxItem"/>
            Use the public property <see cref="P:ZedGraph.BoxItem.Border"/> to access this value.
            </summary>
        </member>
        <member name="M:ZedGraph.BoxItem.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color)">
            <overloads>Constructors for the <see cref="T:ZedGraph.BoxItem"/> object</overloads>
            <summary>
            A constructor that allows the position, border color, and solid fill color
            of the <see cref="T:ZedGraph.BoxItem"/> to be pre-specified.
            </summary>
            <param name="borderColor">An arbitrary <see cref="T:System.Drawing.Color"/> specification
            for the box border</param>
            <param name="fillColor">An arbitrary <see cref="T:System.Drawing.Color"/> specification
            for the box fill (will be a solid color fill)</param>
            <param name="rect"/>The <see cref="T:System.Drawing.RectangleF"/> struct that defines
            the box.  This will be in units determined by
            <see cref="P:ZedGraph.Location.CoordinateFrame"/>.
        </member>
        <member name="M:ZedGraph.BoxItem.#ctor(System.Drawing.RectangleF)">
            <summary>
            A constructor that allows the position
            of the <see cref="T:ZedGraph.BoxItem"/> to be pre-specified.  Other properties are defaulted.
            </summary>
            <param name="rect"/>The <see cref="T:System.Drawing.RectangleF"/> struct that defines
            the box.  This will be in units determined by
            <see cref="P:ZedGraph.Location.CoordinateFrame"/>.
        </member>
        <member name="M:ZedGraph.BoxItem.#ctor">
            <summary>
            A default constructor that creates a <see cref="T:ZedGraph.BoxItem"/> from a
            <see cref="T:System.Drawing.RectangleF"/> of (0,0,1,1).  Other properties are defaulted.
            </summary>
        </member>
        <member name="M:ZedGraph.BoxItem.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            A constructor that allows the position, border color, and two-color
            gradient fill colors
            of the <see cref="T:ZedGraph.BoxItem"/> to be pre-specified.
            </summary>
            <param name="borderColor">An arbitrary <see cref="T:System.Drawing.Color"/> specification
            for the box border</param>
            <param name="fillColor1">An arbitrary <see cref="T:System.Drawing.Color"/> specification
            for the start of the box gradient fill</param>
            <param name="fillColor2">An arbitrary <see cref="T:System.Drawing.Color"/> specification
            for the end of the box gradient fill</param>
            <param name="rect"/>The <see cref="T:System.Drawing.RectangleF"/> struct that defines
            the box.  This will be in units determined by
            <see cref="P:ZedGraph.Location.CoordinateFrame"/>.
        </member>
        <member name="M:ZedGraph.BoxItem.#ctor(ZedGraph.BoxItem)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.BoxItem"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.BoxItem.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.BoxItem"/></returns>
        </member>
        <member name="M:ZedGraph.BoxItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.BoxItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.BoxItem.Draw(System.Drawing.Graphics,ZedGraph.PaneBase,System.Single)">
            <summary>
            Render this object to the specified <see cref="T:System.Drawing.Graphics"/> device.
            </summary>
            <remarks>
            This method is normally only called by the Draw method
            of the parent <see cref="T:ZedGraph.GraphItemList"/> collection object.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.BoxItem.PointInBox(System.Drawing.PointF,ZedGraph.PaneBase,System.Drawing.Graphics,System.Single)">
            <summary>
            Determine if the specified screen point lies inside the bounding box of this
            <see cref="T:ZedGraph.BoxItem"/>.
            </summary>
            <param name="pt">The screen point, in pixels</param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>true if the point lies in the bounding box, false otherwise</returns>
        </member>
        <member name="P:ZedGraph.BoxItem.Fill">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.Fill"/> data for this
            <see cref="T:ZedGraph.BoxItem"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.BoxItem.Border">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.Border"/> object, which
            determines the properties of the border around this
            <see cref="T:ZedGraph.BoxItem"/>
            </summary>
        </member>
        <member name="T:ZedGraph.BoxItem.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.ArrowItem"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.BoxItem.Default.PenWidth">
            <summary>
            The default pen width used for the <see cref="T:ZedGraph.BoxItem"/> border
            (<see cref="P:ZedGraph.Border.PenWidth"/> property).  Units are points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.BoxItem.Default.BorderColor">
            <summary>
            The default color used for the <see cref="T:ZedGraph.BoxItem"/> border
            (<see cref="P:ZedGraph.Border.Color"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.BoxItem.Default.FillColor">
            <summary>
            The default color used for the <see cref="T:ZedGraph.BoxItem"/> fill
            (<see cref="P:ZedGraph.Fill.Color"/> property).
            </summary>
        </member>
        <member name="T:ZedGraph.CollectionPlus">
            <summary>
            A collection base class containing basic extra functionality to be inherited
            by <see cref="T:ZedGraph.CurveList"/>, <see cref="T:ZedGraph.PointPairList"/>,
            <see cref="T:ZedGraph.GraphItemList"/>.
            </summary>
            <remarks>The methods in this collection operate on basic
            <see cref="T:System.Object"/> types.  Therefore, in order to make sure that
            the derived classes remain strongly-typed, there are no Add() or
            Insert() methods here, and no methods that return an object.
            Only Remove(), Move(), IndexOf(), etc. methods are included.</remarks>
            
            <author> John Champion</author>
            <version> $Revision: 3.4 $ $Date: 2005/02/02 04:52:04 $ </version>
        </member>
        <member name="M:ZedGraph.CollectionPlus.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ZedGraph.CollectionPlus.IndexOf(System.Object)">
            <summary>
            Return the zero-based position index of the specified object
            in the collection.
            </summary>
            <param name="item">A reference to the object that is to be found.
            </param>
            <returns>The zero-based index of the specified object, or -1 if the
            object is not in the list</returns>
            <seealso cref="M:System.Collections.IList.IndexOf(System.Object)"/>
        </member>
        <member name="M:ZedGraph.CollectionPlus.Remove(System.Int32)">
            <summary>
            Remove an object from the collection at the specified ordinal location.
            </summary>
            <param name="index">
            An ordinal position in the list at which the object to be removed 
            is located.
            </param>
            <seealso cref="M:System.Collections.IList.Remove(System.Object)"/>
        </member>
        <member name="M:ZedGraph.CollectionPlus.Remove(System.Object)">
            <summary>
            Remove an object from the collection based on an object reference.
            </summary>
            <param name="item">A reference to the object that is to be
            removed.</param>
            <seealso cref="M:System.Collections.IList.Remove(System.Object)"/>
        </member>
        <member name="M:ZedGraph.CollectionPlus.Move(System.Int32,System.Int32)">
            <summary>
            Move the position of the object at the specified index
            to the new relative position in the list.</summary>
            <remarks>For Graphic type objects, this method controls the
            Z-Order of the items.  Objects at the beginning of the list
            appear in front of objects at the end of the list.</remarks>
            <param name="index">The zero-based index of the object
            to be moved.</param>
            <param name="relativePos">The relative number of positions to move
            the object.  A value of -1 will move the
            object one position earlier in the list, a value
            of 1 will move it one position later.  To move an item to the
            beginning of the list, use a large negative value (such as -999).
            To move it to the end of the list, use a large positive value.
            </param>
            <returns>The new position for the object, or -1 if the object
            was not found.</returns>
        </member>
        <member name="T:ZedGraph.ColorSymbolRotator">
            <summary>
            Class used to get the next color/symbol for GraphPane.AddCurve methods.
            </summary>
            
            <author> Jerry Vos modified by John Champion </author>
            <version> $Revision: 3.1 $ $Date: 2005/03/01 06:41:32 $ </version>
        </member>
        <member name="F:ZedGraph.ColorSymbolRotator.COLORS">
            <summary>
            The <see cref="T:System.Drawing.Color"/>s <see cref="T:ZedGraph.ColorSymbolRotator"/> 
            rotates through.
            </summary>
        </member>
        <member name="F:ZedGraph.ColorSymbolRotator.SYMBOLS">
            <summary>
            The <see cref="T:ZedGraph.SymbolType"/>s <see cref="T:ZedGraph.ColorSymbolRotator"/> 
            rotates through.
            </summary>
        </member>
        <member name="F:ZedGraph.ColorSymbolRotator.colorIndex">
            <summary>
            The index of the next color to be used. Note: may be 
            > COLORS.Length, it is reset to 0 on the next call if it is.
            </summary>
        </member>
        <member name="F:ZedGraph.ColorSymbolRotator.symbolIndex">
            <summary>
            The index of the next symbol to be used. Note: may be 
            > SYMBOLS.Length, it is reset to 0 on the next call if it is.
            </summary>
        </member>
        <member name="P:ZedGraph.ColorSymbolRotator.NextColor">
            <summary>
            Retrieves the next color in the rotation  Calling this
            method has the side effect of incrementing the color index.
            <seealso cref="P:ZedGraph.ColorSymbolRotator.NextSymbol"/>
            <seealso cref="P:ZedGraph.ColorSymbolRotator.NextColorIndex"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ColorSymbolRotator.NextColorIndex">
            <summary>
            Retrieves the index of the next color to be used.  Calling this
            method has the side effect of incrementing the color index.
            </summary>
        </member>
        <member name="P:ZedGraph.ColorSymbolRotator.NextSymbol">
            <summary>
            Retrieves the next color in the rotation.  Calling this
            method has the side effect of incrementing the symbol index.
            <seealso cref="P:ZedGraph.ColorSymbolRotator.NextColor"/>
            <seealso cref="P:ZedGraph.ColorSymbolRotator.NextSymbolIndex"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ColorSymbolRotator.NextSymbolIndex">
            <summary>
            Retrieves the index of the next symbol to be used.  Calling this
            method has the side effect of incrementing the symbol index.
            </summary>
        </member>
        <member name="P:ZedGraph.ColorSymbolRotator.StaticInstance">
            <summary>
            Retrieves the <see cref="T:ZedGraph.ColorSymbolRotator"/> instance used by the
            static methods.
            <seealso cref="P:ZedGraph.ColorSymbolRotator.StaticNextColor"/>
            <seealso cref="P:ZedGraph.ColorSymbolRotator.StaticNextSymbol"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ColorSymbolRotator.StaticNextColor">
            <summary>
            Retrieves the next color from this class's static 
            <see cref="T:ZedGraph.ColorSymbolRotator"/> instance
            <seealso cref="P:ZedGraph.ColorSymbolRotator.StaticInstance"/>
            <seealso cref="P:ZedGraph.ColorSymbolRotator.StaticNextSymbol"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ColorSymbolRotator.StaticNextSymbol">
            <summary>
            Retrieves the next symbol type from this class's static 
            <see cref="T:ZedGraph.ColorSymbolRotator"/> instance
            <seealso cref="P:ZedGraph.ColorSymbolRotator.StaticInstance"/>
            <seealso cref="P:ZedGraph.ColorSymbolRotator.StaticNextColor"/>
            </summary>
        </member>
        <member name="T:ZedGraph.CurveList">
            <summary>
            A collection class containing a list of <see cref="T:ZedGraph.CurveItem"/> objects
            that define the set of curves to be displayed on the graph.
            </summary>
            
            <author> John Champion
            modified by Jerry Vos</author>
            <version> $Revision: 3.23 $ $Date: 2005/03/11 17:24:37 $ </version>
        </member>
        <member name="M:ZedGraph.CurveList.HasData">
            <summary>
            Determine if there is any data in any of the <see cref="T:ZedGraph.CurveItem"/>
            objects for this graph.  This method does not verify valid data, it
            only checks to see if <see cref="P:ZedGraph.CurveItem.NPts"/> &gt; 0.
            </summary>
            <returns>true if there is any data, false otherwise</returns>
        </member>
        <member name="M:ZedGraph.CurveList.#ctor">
            <summary>
            Default constructor for the collection class
            </summary>
        </member>
        <member name="M:ZedGraph.CurveList.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the CurveList</returns>
        </member>
        <member name="M:ZedGraph.CurveList.#ctor(ZedGraph.CurveList)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The XAxis object from which to copy</param>
        </member>
        <member name="M:ZedGraph.CurveList.Add(ZedGraph.CurveItem)">
            <summary>
            Add a <see cref="T:ZedGraph.CurveItem"/> object to the collection at the end of the list.
            </summary>
            <param name="curve">A reference to the <see cref="T:ZedGraph.CurveItem"/> object to
            be added</param>
            <seealso cref="M:System.Collections.IList.Add(System.Object)"/>
        </member>
        <member name="M:ZedGraph.CurveList.Remove(ZedGraph.CurveItem)">
            <summary>
            Remove a <see cref="T:ZedGraph.CurveItem"/> object from the collection based on an object reference.
            </summary>
            <param name="curve">A reference to the <see cref="T:ZedGraph.CurveItem"/> object that is to be
            removed.</param>
            <seealso cref="M:System.Collections.IList.Remove(System.Object)"/>
        </member>
        <member name="M:ZedGraph.CurveList.Insert(System.Int32,ZedGraph.CurveItem)">
            <summary>
            Insert a <see cref="T:ZedGraph.CurveItem"/> object into the collection at the specified
            zero-based index location.
            </summary>
            <param name="index">The zero-based index location for insertion.</param>
            <param name="curve">A reference to the <see cref="T:ZedGraph.CurveItem"/> object that is to be
            inserted.</param>
            <seealso cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/>
        </member>
        <member name="M:ZedGraph.CurveList.IndexOf(System.String)">
            <summary>
            Return the zero-based position index of the
            <see cref="T:ZedGraph.CurveItem"/> with the specified <see cref="P:ZedGraph.CurveItem.Label"/>.
            </summary>
            <param name="label">The <see cref="T:System.String"/> label that is in the
            <see cref="P:ZedGraph.CurveItem.Label"/> attribute of the item to be found.
            </param>
            <returns>The zero-based index of the specified <see cref="T:ZedGraph.CurveItem"/>,
            or -1 if the <see cref="T:ZedGraph.CurveItem"/> is not in the list</returns>
            <seealso cref="M:System.Collections.IList.IndexOf(System.Object)"/>
            <seealso cref="M:ZedGraph.CurveList.IndexOfTag(System.String)"/>
        </member>
        <member name="M:ZedGraph.CurveList.IndexOfTag(System.String)">
            <summary>
            Return the zero-based position index of the
            <see cref="T:ZedGraph.CurveItem"/> with the specified <see cref="F:ZedGraph.CurveItem.Tag"/>.
            </summary>
            <remarks>In order for this method to work, the <see cref="F:ZedGraph.CurveItem.Tag"/>
            property must be of type <see cref="T:System.String"/>.</remarks>
            <param name="label">The <see cref="T:System.String"/> label that is in the
            <see cref="F:ZedGraph.CurveItem.Tag"/> attribute of the item to be found.
            </param>
            <returns>The zero-based index of the specified <see cref="T:ZedGraph.CurveItem"/>,
            or -1 if the <see cref="T:ZedGraph.CurveItem"/> is not in the list</returns>
            <seealso cref="M:System.Collections.IList.IndexOf(System.Object)"/>
            <seealso cref="M:ZedGraph.CurveList.IndexOf(System.String)"/>
        </member>
        <member name="M:ZedGraph.CurveList.Sort(ZedGraph.SortType,System.Int32)">
            <summary>
            Sorts the list according to the point values at the specified index and
            for the specified axis.
            </summary>
        </member>
        <member name="M:ZedGraph.CurveList.GetRange(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Boolean,ZedGraph.GraphPane)">
            <summary>
            Go through each <see cref="T:ZedGraph.CurveItem"/> object in the collection,
            calling the <see cref="M:ZedGraph.PointPairList.GetRange(System.Double@,System.Double@,System.Double@,System.Double@,System.Boolean,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Double)"/> member to 
            determine the minimum and maximum values in the
            <see cref="P:ZedGraph.CurveItem.Points"/> list of data value pairs.  If the curves include 
            a stack bar, handle within the current GetRange method. In the event that no
            data are available, a default range of min=0.0 and max=1.0 are returned.
            If the Y axis has a valid data range and the Y2 axis not, then the Y2
            range will be a duplicate of the Y range.  Vice-versa for the Y2 axis
            having valid data when the Y axis does not.
            If any <see cref="T:ZedGraph.CurveItem"/> in the list has a missing
            <see cref="T:ZedGraph.PointPairList"/>, a new empty one will be generated.
            </summary>
            <param name="xMinVal">The minimun X value in the data range for all curves
            in this collection</param>
            <param name="xMaxVal">The maximun X value in the data range for all curves
            in this collection</param>
            <param name="yMinVal">The minimun Y (left Y axis) value in the data range
            for all curves in this collection</param>
            <param name="yMaxVal">The maximun Y (left Y axis) value in the data range
            for all curves in this collection</param>
            <param name="y2MinVal">The minimun Y2 (right Y axis) value in the data range
            for all curves in this collection</param>
            <param name="y2MaxVal">The maximun Y2 (right Y axis) value in the data range
            for all curves in this collection</param>
            <param name="bIgnoreInitial">ignoreInitial is a boolean value that
            affects the data range that is considered for the automatic scale
            ranging (see <see cref="P:ZedGraph.GraphPane.IsIgnoreInitial"/>).  If true, then initial
            data points where the Y value is zero are not included when
            automatically determining the scale <see cref="P:ZedGraph.Axis.Min"/>,
            <see cref="P:ZedGraph.Axis.Max"/>, and <see cref="P:ZedGraph.Axis.Step"/> size.  All data after
            the first non-zero Y value are included.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <seealso cref="P:ZedGraph.GraphPane.IsBoundedRanges"/>
        </member>
        <member name="M:ZedGraph.CurveList.GetStackRange(ZedGraph.GraphPane,ZedGraph.CurveItem,System.Double@,System.Double@,System.Double@,System.Double@,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculate the range for stacked bars and lines.
            </summary>
            <remarks>This method is required for the stacked
            types because (for bars), the negative values are a separate stack than the positive
            values.  If you just sum up the bars, you will get the sum of the positive plus negative,
            which is less than the maximum positive value and greater than the maximum negative value.
            </remarks>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="curve">The <see cref="T:ZedGraph.CurveItem"/> for which to calculate the range</param>
            <param name="tXMinVal">The minimum X value so far</param>
            <param name="tYMinVal">The minimum Y value so far</param>
            <param name="tXMaxVal">The maximum X value so far</param>
            <param name="tYMaxVal">The maximum Y value so far</param>
            <param name="xLBound">The lower bound of allowable data for the X values.  This
            value allows you to subset the data values.  If the X range is bounded, then
            the resulting range for Y will reflect the Y values for the points within the X
            bounds.  Use <see cref="F:System.Double.MinValue"/> to have no bound.</param>
            <param name="xUBound">The upper bound of allowable data for the X values.  This
            value allows you to subset the data values.  If the X range is bounded, then
            the resulting range for Y will reflect the Y values for the points within the X
            bounds.  Use <see cref="F:System.Double.MaxValue"/> to have no bound.</param>
            <param name="yLBound">The lower bound of allowable data for the Y values.  This
            value allows you to subset the data values.  If the Y range is bounded, then
            the resulting range for X will reflect the X values for the points within the Y
            bounds.  Use <see cref="F:System.Double.MinValue"/> to have no bound.</param>
            <param name="yUBound">The upper bound of allowable data for the Y values.  This
            value allows you to subset the data values.  If the Y range is bounded, then
            the resulting range for X will reflect the X values for the points within the Y
            bounds.  Use <see cref="F:System.Double.MaxValue"/> to have no bound.</param>
            <seealso cref="P:ZedGraph.GraphPane.IsBoundedRanges"/>
        </member>
        <member name="M:ZedGraph.CurveList.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)">
            <summary>
            Render all the <see cref="T:ZedGraph.CurveItem"/> objects in the list to the
            specified <see cref="T:System.Drawing.Graphics"/>
            device by calling the <see cref="M:ZedGraph.CurveItem.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,System.Int32,System.Single)"/> member function of
            each <see cref="T:ZedGraph.CurveItem"/> object.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="P:ZedGraph.CurveList.MaxPts">
            <summary>
            Read only value for the maximum number of points in any of the curves
            in the list.
            </summary>
        </member>
        <member name="P:ZedGraph.CurveList.NumBars">
            <summary>
            Read only property that returns the number of curves in the list that are of
            type <see cref="T:ZedGraph.Bar"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.CurveList.NumPies">
            <summary>
            Read only property that returns the number of pie slices in the list (class type is
            <see cref="T:ZedGraph.PieItem"/> ).
            </summary>
        </member>
        <member name="P:ZedGraph.CurveList.IsPieOnly">
            <summary>
            Read only property that determines if all items in the <see cref="T:ZedGraph.CurveList"/> are
            Pies.
            </summary>
        </member>
        <member name="P:ZedGraph.CurveList.Item(System.Int32)">
            <summary>
            Indexer to access the specified <see cref="T:ZedGraph.CurveItem"/> object by
            its ordinal position in the list.
            </summary>
            <param name="index">The ordinal position (zero-based) of the
            <see cref="T:ZedGraph.CurveItem"/> object to be accessed.</param>
            <value>A <see cref="T:ZedGraph.CurveItem"/> object reference.</value>
        </member>
        <member name="P:ZedGraph.CurveList.Item(System.String)">
            <summary>
            Indexer to access the specified <see cref="T:ZedGraph.CurveItem"/> object by
            its <see cref="P:ZedGraph.CurveItem.Label"/> string.
            </summary>
            <param name="label">The string label of the
            <see cref="T:ZedGraph.CurveItem"/> object to be accessed.</param>
            <value>A <see cref="T:ZedGraph.CurveItem"/> object reference.</value>
        </member>
        <member name="T:ZedGraph.EllipseItem">
            <summary>
            A class that represents a bordered and/or filled ellipse object on
            the graph.  A list of EllipseItem objects is maintained by the
            <see cref="T:ZedGraph.GraphItemList"/> collection class.  The ellipse is defined
            as the ellipse that would be contained by the rectangular box as
            defined by the <see cref="T:ZedGraph.Location"/> property.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.7 $ $Date: 2005/02/13 17:31:41 $ </version>
        </member>
        <member name="F:ZedGraph.EllipseItem.schema3">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="M:ZedGraph.EllipseItem.#ctor(System.Drawing.RectangleF)">
            <overloads>Constructors for the <see cref="T:ZedGraph.EllipseItem"/> object</overloads>
            <summary>
            A constructor that allows the position and size
            of the <see cref="T:ZedGraph.EllipseItem"/> to be pre-specified.  Other properties are defaulted.
            </summary>
            <param name="rect"/>The <see cref="T:System.Drawing.RectangleF"/> struct that defines
            the ellipse.  This will be in units determined by
            <see cref="P:ZedGraph.Location.CoordinateFrame"/>.
        </member>
        <member name="M:ZedGraph.EllipseItem.#ctor">
            <summary>
            A default constructor that places the <see cref="T:ZedGraph.EllipseItem"/> at the
            default <see cref="T:System.Drawing.RectangleF"/> of (0,0,1,1).  Other properties are defaulted.
            </summary>
        </member>
        <member name="M:ZedGraph.EllipseItem.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            A constructor that allows the position, border color, and solid fill color
            of the <see cref="T:ZedGraph.EllipseItem"/> to be pre-specified.
            </summary>
            <param name="borderColor">An arbitrary <see cref="T:System.Drawing.Color"/> specification
            for the ellipse border</param>
            <param name="fillColor">An arbitrary <see cref="T:System.Drawing.Color"/> specification
            for the ellipse fill (will be a solid color fill)</param>
            <param name="rect"/>The <see cref="T:System.Drawing.RectangleF"/> struct that defines
            the ellipse.  This will be in units determined by
            <see cref="P:ZedGraph.Location.CoordinateFrame"/>.
        </member>
        <member name="M:ZedGraph.EllipseItem.#ctor(System.Drawing.RectangleF,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            A constructor that allows the position, border color, and two-color
            gradient fill colors
            of the <see cref="T:ZedGraph.EllipseItem"/> to be pre-specified.
            </summary>
            <param name="borderColor">An arbitrary <see cref="T:System.Drawing.Color"/> specification
            for the ellipse border</param>
            <param name="fillColor1">An arbitrary <see cref="T:System.Drawing.Color"/> specification
            for the start of the ellipse gradient fill</param>
            <param name="fillColor2">An arbitrary <see cref="T:System.Drawing.Color"/> specification
            for the end of the ellipse gradient fill</param>
            <param name="rect"/>The <see cref="T:System.Drawing.RectangleF"/> struct that defines
            the ellipse.  This will be in units determined by
            <see cref="P:ZedGraph.Location.CoordinateFrame"/>.
        </member>
        <member name="M:ZedGraph.EllipseItem.#ctor(ZedGraph.BoxItem)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.EllipseItem"/> object from
            which to copy</param>
        </member>
        <member name="M:ZedGraph.EllipseItem.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.EllipseItem"/></returns>
        </member>
        <member name="M:ZedGraph.EllipseItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.EllipseItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.EllipseItem.Draw(System.Drawing.Graphics,ZedGraph.PaneBase,System.Single)">
            <summary>
            Render this object to the specified <see cref="T:System.Drawing.Graphics"/> device.
            </summary>
            <remarks>
            This method is normally only called by the Draw method
            of the parent <see cref="T:ZedGraph.GraphItemList"/> collection object.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.EllipseItem.PointInBox(System.Drawing.PointF,ZedGraph.PaneBase,System.Drawing.Graphics,System.Single)">
            <summary>
            Determine if the specified screen point lies inside the bounding box of this
            <see cref="T:ZedGraph.BoxItem"/>.
            </summary>
            <param name="pt">The screen point, in pixels</param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>true if the point lies in the bounding box, false otherwise</returns>
        </member>
        <member name="T:ZedGraph.ErrorBar">
            <summary>
            This class handles the drawing of the curve <see cref="T:ZedGraph.ErrorBar"/> objects.
            The Error Bars are the vertical lines with a symbol at each end.
            </summary>
            <remarks>To draw "I-Beam" bars, the symbol type defaults to
            <see cref="F:ZedGraph.SymbolType.HDash"/>, which is just a horizontal line.
            If <see cref="T:ZedGraph.BarBase"/> is Y-oriented, then the symbol type should be
            set to <see cref="F:ZedGraph.SymbolType.VDash"/> to get the same effect.
            </remarks>
            
            <author> John Champion </author>
            <version> $Revision: 3.8 $ $Date: 2005/03/05 07:24:10 $ </version>
        </member>
        <member name="F:ZedGraph.ErrorBar.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.ErrorBar.isVisible">
            <summary>
            Private field that stores the visibility of this
            <see cref="T:ZedGraph.ErrorBar"/>.  Use the public
            property <see cref="P:ZedGraph.ErrorBar.IsVisible"/> to access this value.  If this value is
            false, the symbols will not be shown.
            </summary>
        </member>
        <member name="F:ZedGraph.ErrorBar.color">
            <summary>
            Private field that stores the error bar color.  Use the public
            property <see cref="P:ZedGraph.ErrorBar.Color"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.ErrorBar.penWidth">
            <summary>
            Private field that stores the pen width for this error bar.  Use the public
            property <see cref="P:ZedGraph.ErrorBar.PenWidth"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.ErrorBar.symbol">
            <summary>
            private field that contains the symbol element that will be drawn
            at the top and bottom of the error bar.  Use the public property
            <see cref="P:ZedGraph.ErrorBar.Symbol"/> to access this value.
            </summary>
        </member>
        <member name="M:ZedGraph.ErrorBar.#ctor">
            <summary>
            Default constructor that sets all <see cref="T:ZedGraph.ErrorBar"/> properties to
            default values as defined in the <see cref="T:ZedGraph.ErrorBar.Default"/> class.
            </summary>
        </member>
        <member name="M:ZedGraph.ErrorBar.#ctor(System.Drawing.Color)">
            <summary>
            Default constructor that sets the
            <see cref="P:ZedGraph.ErrorBar.Color"/> as specified, and the remaining
            <see cref="T:ZedGraph.ErrorBar"/> properties to default
            values as defined in the <see cref="T:ZedGraph.ErrorBar.Default"/> class.
            </summary>
            <param name="color">A <see cref="P:ZedGraph.ErrorBar.Color"/> value indicating
            the color of the symbol
            </param>
        </member>
        <member name="M:ZedGraph.ErrorBar.#ctor(ZedGraph.ErrorBar)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.ErrorBar"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.ErrorBar.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.ErrorBar"/></returns>
        </member>
        <member name="M:ZedGraph.ErrorBar.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.ErrorBar.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.ErrorBar.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,System.Boolean,System.Single,System.Single,System.Single,System.Single,System.Drawing.Pen)">
            <summary>
            Draw the <see cref="T:ZedGraph.ErrorBar"/> to the specified <see cref="T:System.Drawing.Graphics"/>
            device at the specified location.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="isXBase">boolean value that indicates if the "base" axis for this
            <see cref="T:ZedGraph.ErrorBar"/> is the X axis.  True for an <see cref="T:ZedGraph.XAxis"/> base,
            false for a <see cref="T:ZedGraph.YAxis"/> or <see cref="T:ZedGraph.Y2Axis"/> base.</param>
            <param name="pixBase">The independent axis position of the center of the error bar in
            pixel units</param>
            <param name="pixValue">The dependent axis position of the top of the error bar in
            pixel units</param>
            <param name="pixLowValue">The dependent axis position of the bottom of the error bar in
            pixel units</param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.</param>
            <param name="pen">A pen with attributes of <see cref="P:ZedGraph.ErrorBar.Color"/> and
            <see cref="P:ZedGraph.ErrorBar.PenWidth"/> for this <see cref="T:ZedGraph.ErrorBar"/></param>
        </member>
        <member name="M:ZedGraph.ErrorBar.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,ZedGraph.ErrorBarItem,ZedGraph.Axis,ZedGraph.Axis,System.Single)">
            <summary>
            Draw all the <see cref="T:ZedGraph.ErrorBar"/>'s to the specified <see cref="T:System.Drawing.Graphics"/>
            device as a an error bar at each defined point.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="curve">A <see cref="T:ZedGraph.CurveItem"/> object representing the
            <see cref="T:ZedGraph.Bar"/>'s to be drawn.</param>
            <param name="baseAxis">The <see cref="T:ZedGraph.Axis"/> class instance that defines the base (independent)
            axis for the <see cref="T:ZedGraph.Bar"/></param>
            <param name="valueAxis">The <see cref="T:ZedGraph.Axis"/> class instance that defines the value (dependent)
            axis for the <see cref="T:ZedGraph.Bar"/></param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="P:ZedGraph.ErrorBar.IsVisible">
            <summary>
            Gets or sets a property that shows or hides the <see cref="T:ZedGraph.ErrorBar"/>.
            </summary>
            <value>true to show the error bar, false to hide it</value>
            <seealso cref="F:ZedGraph.ErrorBar.Default.IsVisible"/>
        </member>
        <member name="P:ZedGraph.ErrorBar.Color">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Color"/> data for this
            <see cref="T:ZedGraph.ErrorBar"/>.
            </summary>
            <remarks>This property only controls the color of
            the vertical line.  The symbol color is controlled separately in
            the <see cref="P:ZedGraph.ErrorBar.Symbol"/> property.
            </remarks>
        </member>
        <member name="P:ZedGraph.ErrorBar.PenWidth">
            <summary>
            The pen width to be used for drawing error bars
            Units are points.
            </summary>
            <remarks>This property only controls the pen width for the
            vertical line.  The pen width for the symbol outline is
            controlled separately by the <see cref="P:ZedGraph.ErrorBar.Symbol"/> property.
            </remarks>
        </member>
        <member name="P:ZedGraph.ErrorBar.Symbol">
            <summary>
            Contains the symbol element that will be drawn
            at the top and bottom of the error bar.
            </summary>
        </member>
        <member name="T:ZedGraph.ErrorBar.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.ErrorBar"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.ErrorBar.Default.Size">
            <summary>
            The default size for curve symbols
            (<see cref="P:ZedGraph.Symbol.Size"/> property),
            in units of points.
            </summary>
        </member>
        <member name="F:ZedGraph.ErrorBar.Default.PenWidth">
            <summary>
            The default pen width to be used for drawing error bars
            (<see cref="P:ZedGraph.ErrorBar.PenWidth"/> property).  Units are points.
            </summary>
        </member>
        <member name="F:ZedGraph.ErrorBar.Default.IsVisible">
            <summary>
            The default display mode for symbols (<see cref="P:ZedGraph.ErrorBar.IsVisible"/> property).
            true to display symbols, false to hide them.
            </summary>
        </member>
        <member name="F:ZedGraph.ErrorBar.Default.Color">
            <summary>
            The default color for drawing error bars (<see cref="P:ZedGraph.ErrorBar.Color"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.ErrorBar.Default.Type">
            <summary>
            The default symbol for drawing at the top and bottom of the
            error bar (see <see cref="P:ZedGraph.ErrorBar.Symbol"/>).
            </summary>
        </member>
        <member name="T:ZedGraph.ErrorBarItem">
            <summary>
            Encapsulates an "Error Bar" curve type that displays a vertical or horizontal
            line with a symbol at each end.
            </summary>
            <remarks>The <see cref="T:ZedGraph.ErrorBarItem"/> type is intended for displaying
            confidence intervals, candlesticks, stock High-Low charts, etc.  It is
            technically not a bar, since it is drawn as a vertical or horizontal line.
            The default symbol at each end of the "bar" is <see cref="F:ZedGraph.SymbolType.HDash"/>,
            which creates an "I-Beam".  For horizontal bars
            (<see cref="F:ZedGraph.BarBase.Y"/> or
            <see cref="F:ZedGraph.BarBase.Y2"/>), you will need to change the symbol to
            <see cref="F:ZedGraph.SymbolType.VDash"/> to get horizontal "I-Beams".
            Since the horizontal segments are actually symbols, their widths are
            controlled by the symbol size in <see cref="P:ZedGraph.ErrorBar.Symbol"/>,
            specified in points (1/72nd inch).  The position of each "I-Beam" is set
            according to the <see cref="T:ZedGraph.PointPair"/> values.  The independent axis
            is assigned with <see cref="P:ZedGraph.ErrorBarItem.BarBase"/>, and is a
            <see cref="T:ZedGraph.BarBase"/> enum type.</remarks>
            <author> John Champion </author>
            <version> $Revision: 3.8 $ $Date: 2005/03/11 17:24:38 $ </version>
        </member>
        <member name="F:ZedGraph.ErrorBarItem.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.ErrorBarItem.errorBar">
            <summary>
            Private field that stores a reference to the <see cref="T:ZedGraph.ErrorBar"/>
            class defined for this <see cref="T:ZedGraph.ErrorBarItem"/>.  Use the public
            property <see cref="P:ZedGraph.ErrorBarItem.ErrorBar"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.ErrorBarItem.barBase">
            <summary>
            Private field that determines which <see cref="T:ZedGraph.Axis"/> is the independent axis
            for this <see cref="T:ZedGraph.ErrorBarItem"/>.
            </summary>
        </member>
        <member name="M:ZedGraph.ErrorBarItem.#ctor(System.String)">
            <summary>
            Create a new <see cref="T:ZedGraph.ErrorBarItem"/>, specifying only the legend label.
            </summary>
            <param name="label">The label that will appear in the legend.</param>
        </member>
        <member name="M:ZedGraph.ErrorBarItem.#ctor(System.String,System.Double[],System.Double[],System.Double[],System.Drawing.Color)">
            <summary>
            Create a new <see cref="T:ZedGraph.ErrorBarItem"/> using the specified properties.
            </summary>
            <param name="label">The label that will appear in the legend.</param>
            <param name="x">An array of double precision values that define
            the X axis values for this curve</param>
            <param name="y">An array of double precision values that define
            the Y axis values for this curve</param>
            <param name="lowValue">An array of double precision values that define
            the lower dependent values for this curve</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value that will be applied to
            the <see cref="T:ZedGraph.Line"/> properties.
            </param>
        </member>
        <member name="M:ZedGraph.ErrorBarItem.#ctor(System.String,ZedGraph.PointPairList,System.Drawing.Color)">
            <summary>
            Create a new <see cref="T:ZedGraph.ErrorBarItem"/> using the specified properties.
            </summary>
            <param name="label">The label that will appear in the legend.</param>
            <param name="points">A <see cref="T:ZedGraph.PointPairList"/> of double precision values that define
            the X, Y and lower dependent values for this curve</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value that will be applied to
            the <see cref="T:ZedGraph.Line"/> properties.
            </param>
        </member>
        <member name="M:ZedGraph.ErrorBarItem.#ctor(ZedGraph.ErrorBarItem)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.ErrorBarItem"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.ErrorBarItem.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.ErrorBarItem"/></returns>
        </member>
        <member name="M:ZedGraph.ErrorBarItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.ErrorBarItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.ErrorBarItem.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,System.Int32,System.Single)">
            <summary>
            Do all rendering associated with this <see cref="T:ZedGraph.ErrorBarItem"/> to the specified
            <see cref="T:System.Drawing.Graphics"/> device.  This method is normally only
            called by the Draw method of the parent <see cref="T:ZedGraph.CurveList"/>
            collection object.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="pos">The ordinal position of the current <see cref="T:ZedGraph.ErrorBarItem"/>
            curve.</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.ErrorBarItem.DrawLegendKey(System.Drawing.Graphics,ZedGraph.GraphPane,System.Drawing.RectangleF,System.Single)">
            <summary>
            Draw a legend key entry for this <see cref="T:ZedGraph.ErrorBarItem"/> at the specified location
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> struct that specifies the
            location for the legend key</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.ErrorBarItem.GetRange(System.Double@,System.Double@,System.Double@,System.Double@,System.Boolean,System.Double,System.Double,System.Double,System.Double,ZedGraph.GraphPane)">
            <summary>
            Go through the list of <see cref="T:ZedGraph.PointPair"/> data values for this
            <see cref="T:ZedGraph.ErrorBarItem"/> and determine the minimum and maximum values in the data.
            </summary>
            <param name="xMin">The minimum X value in the range of data</param>
            <param name="xMax">The maximum X value in the range of data</param>
            <param name="yMin">The minimum Y value in the range of data</param>
            <param name="yMax">The maximum Y value in the range of data</param>
            <param name="bIgnoreInitial">ignoreInitial is a boolean value that
            affects the data range that is considered for the automatic scale
            ranging (see <see cref="P:ZedGraph.GraphPane.IsIgnoreInitial"/>).  If true, then initial
            data points where the Y value is zero are not included when
            automatically determining the scale <see cref="P:ZedGraph.Axis.Min"/>,
            <see cref="P:ZedGraph.Axis.Max"/>, and <see cref="P:ZedGraph.Axis.Step"/> size.  All data after
            the first non-zero Y value are included.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="xLBound">The lower bound of allowable data for the X values.  This
            value allows you to subset the data values.  If the X range is bounded, then
            the resulting range for Y will reflect the Y values for the points within the X
            bounds.  Use <see cref="F:System.Double.MinValue"/> to have no bound.</param>
            <param name="xUBound">The upper bound of allowable data for the X values.  This
            value allows you to subset the data values.  If the X range is bounded, then
            the resulting range for Y will reflect the Y values for the points within the X
            bounds.  Use <see cref="F:System.Double.MaxValue"/> to have no bound.</param>
            <param name="yLBound">The lower bound of allowable data for the Y values.  This
            value allows you to subset the data values.  If the Y range is bounded, then
            the resulting range for X will reflect the X values for the points within the Y
            bounds.  Use <see cref="F:System.Double.MinValue"/> to have no bound.</param>
            <param name="yUBound">The upper bound of allowable data for the Y values.  This
            value allows you to subset the data values.  If the Y range is bounded, then
            the resulting range for X will reflect the X values for the points within the Y
            bounds.  Use <see cref="F:System.Double.MaxValue"/> to have no bound.</param>
            <seealso cref="P:ZedGraph.GraphPane.IsBoundedRanges"/>
        </member>
        <member name="P:ZedGraph.ErrorBarItem.ErrorBar">
            <summary>
            Gets a reference to the <see cref="P:ZedGraph.ErrorBarItem.ErrorBar"/> class defined
            for this <see cref="T:ZedGraph.ErrorBarItem"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ErrorBarItem.BarBase">
            <summary>
            Determines which <see cref="T:ZedGraph.Axis"/> is the independent axis
            for this <see cref="T:ZedGraph.ErrorBarItem"/>.
            </summary>
            <remarks>Typically this is set to <see cref="F:ZedGraph.BarBase.X"/> for
            vertical error bars.  If it is set to <see cref="F:ZedGraph.BarBase.Y"/> or
            <see cref="F:ZedGraph.BarBase.Y2"/>, then the error bars will be horizontal.
            Note that for <see cref="T:ZedGraph.ErrorBarItem"/>'s, the <see cref="P:ZedGraph.ErrorBarItem.BarBase"/>
            is set individually for each curve.  You can have one
            <see cref="T:ZedGraph.ErrorBarItem"/> aligned vertically, and the next
            horizontally.  This is in contrast to <see cref="T:ZedGraph.BarItem"/>'s, in
            which the <see cref="T:ZedGraph.BarBase"/> is set according to
            the global <see cref="P:ZedGraph.GraphPane.BarBase"/>, so all
            <see cref="T:ZedGraph.BarItem"/>'s on a <see cref="T:ZedGraph.GraphPane"/> will have the
            same alignment.
            </remarks>
        </member>
        <member name="T:ZedGraph.Fill">
            <summary>
            A class that encapsulates color-fill properties for an object.  The <see cref="T:ZedGraph.Fill"/> class
            is used in <see cref="P:ZedGraph.PaneBase.PaneRect"/>, <see cref="P:ZedGraph.GraphPane.AxisRect"/>, <see cref="T:ZedGraph.Legend"/>,
            <see cref="T:ZedGraph.Bar"/>, and <see cref="T:ZedGraph.Line"/> objects.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.11 $ $Date: 2005/02/12 23:22:51 $ </version>
        </member>
        <member name="F:ZedGraph.Fill.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.Fill.color">
            <summary>
            Private field that stores the fill color.  Use the public
            property <see cref="P:ZedGraph.Fill.Color"/> to access this value.  This property is
            only applicable if the <see cref="P:ZedGraph.Fill.Type"/> is not <see cref="F:ZedGraph.FillType.None"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.Fill.brush">
            <summary>
            Private field that stores the custom fill brush.  Use the public
            property <see cref="P:ZedGraph.Fill.Brush"/> to access this value.  This property is
            only applicable if the 
            <see cref="P:ZedGraph.Fill.Type"/> property is set to <see cref="F:ZedGraph.FillType.Brush"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.Fill.type">
            <summary>
            Private field that determines the type of color fill.  Use the public
            property <see cref="P:ZedGraph.Fill.Type"/> to access this value.  The fill color
            is determined by the property <see cref="P:ZedGraph.Fill.Color"/> or
            <see cref="P:ZedGraph.Fill.Brush"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.Fill.isScaled">
            <summary>
            Private field that determines if the brush will be scaled to the bounding box
            of the filled object.  If this value is false, then the brush will only be aligned
            with the filled object based on the <see cref="P:ZedGraph.Fill.AlignH"/> and <see cref="P:ZedGraph.Fill.AlignV"/>
            properties.
            </summary>
        </member>
        <member name="F:ZedGraph.Fill.alignH">
            <summary>
            Private field that determines how the brush will be aligned with the filled object
            in the horizontal direction.  This value is a <see cref="T:ZedGraph.AlignH"/> enumeration.
            This field only applies if <see cref="P:ZedGraph.Fill.IsScaled"/> is false.
            properties.
            </summary>
            <seealso cref="P:ZedGraph.Fill.AlignH"/>
            <seealso cref="P:ZedGraph.Fill.AlignV"/>
        </member>
        <member name="F:ZedGraph.Fill.alignV">
            <summary>
            Private field that determines how the brush will be aligned with the filled object
            in the vertical direction.  This value is a <see cref="T:ZedGraph.AlignV"/> enumeration.
            This field only applies if <see cref="P:ZedGraph.Fill.IsScaled"/> is false.
            properties.
            </summary>
            <seealso cref="P:ZedGraph.Fill.AlignH"/>
            <seealso cref="P:ZedGraph.Fill.AlignV"/>
        </member>
        <member name="F:ZedGraph.Fill.image">
            <summary>
            Private field that saves the image passed to the constructor.
            This is used strictly for serialization.
            </summary>
        </member>
        <member name="F:ZedGraph.Fill.wrapMode">
            <summary>
            Private field that saves the image wrapmode passed to the constructor.
            This is used strictly for serialization.
            </summary>
        </member>
        <member name="F:ZedGraph.Fill.colorList">
            <summary>
            Private field that saves the list of colors used to create the
            <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> in the constructor.  This is used strictly
            for serialization.
            </summary>
        </member>
        <member name="F:ZedGraph.Fill.positionList">
            <summary>
            Private field that saves the list of positions used to create the
            <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> in the constructor.  This is used strictly
            for serialization.
            </summary>
        </member>
        <member name="F:ZedGraph.Fill.angle">
            <summary>
            Private field the saves the angle of the fill.  This is used strictly for serialization.
            </summary>
        </member>
        <member name="M:ZedGraph.Fill.Init">
            <summary>
            Generic initializer to default values
            </summary>
        </member>
        <member name="M:ZedGraph.Fill.#ctor">
            <summary>
            The default constructor.  Initialized to no fill.
            </summary>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Color,System.Drawing.Brush,ZedGraph.FillType)">
            <summary>
            Constructor that specifies the color, brush, and type for this fill.
            </summary>
            <param name="color">The color of the fill for solid fills</param>
            <param name="brush">A custom brush for fills.  Can be a <see cref="T:System.Drawing.SolidBrush"/>,
            <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/>, or <see cref="T:System.Drawing.TextureBrush"/>.</param>
            <param name="type">The <see cref="T:ZedGraph.FillType"/> for this fill.</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Color)">
            <summary>
            Constructor that creates a solid color-fill, setting <see cref="P:ZedGraph.Fill.Type"/> to
            <see cref="F:ZedGraph.FillType.Solid"/>, and setting <see cref="P:ZedGraph.Fill.Color"/> to the
            specified color value.
            </summary>
            <param name="color">The color of the solid fill</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>
            Constructor that creates a linear gradient color-fill, setting <see cref="P:ZedGraph.Fill.Type"/> to
            <see cref="F:ZedGraph.FillType.Brush"/> using the specified colors and angle.
            </summary>
            <param name="color1">The first color for the gradient fill</param>
            <param name="color2">The second color for the gradient fill</param>
            <param name="angle">The angle (degrees) of the gradient fill</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Constructor that creates a linear gradient color-fill, setting <see cref="P:ZedGraph.Fill.Type"/> to
            <see cref="F:ZedGraph.FillType.Brush"/> using the specified colors.
            </summary>
            <param name="color1">The first color for the gradient fill</param>
            <param name="color2">The second color for the gradient fill</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Constructor that creates a linear gradient color-fill, setting <see cref="P:ZedGraph.Fill.Type"/> to
            <see cref="F:ZedGraph.FillType.Brush"/> using the specified colors.  This gradient fill
            consists of three colors.
            </summary>
            <param name="color1">The first color for the gradient fill</param>
            <param name="color2">The second color for the gradient fill</param>
            <param name="color3">The third color for the gradient fill</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Single)">
            <summary>
            Constructor that creates a linear gradient color-fill, setting <see cref="P:ZedGraph.Fill.Type"/> to
            <see cref="F:ZedGraph.FillType.Brush"/> using the specified colors.  This gradient fill
            consists of three colors
            </summary>
            <param name="color1">The first color for the gradient fill</param>
            <param name="color2">The second color for the gradient fill</param>
            <param name="color3">The third color for the gradient fill</param>
            <param name="angle">The angle (degrees) of the gradient fill</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Drawing2D.ColorBlend)">
            <summary>
            Constructor that creates a linear gradient multi-color-fill, setting <see cref="P:ZedGraph.Fill.Type"/> to
            <see cref="F:ZedGraph.FillType.Brush"/> using the specified colors.  This gradient fill
            consists of many colors based on a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> object.  The gradient
            angle is defaulted to zero.
            </summary>
            <param name="blend">The <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> object that defines the colors
            and positions along the gradient.</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Drawing2D.ColorBlend,System.Single)">
            <summary>
            Constructor that creates a linear gradient multi-color-fill, setting <see cref="P:ZedGraph.Fill.Type"/> to
            <see cref="F:ZedGraph.FillType.Brush"/> using the specified colors.  This gradient fill
            consists of many colors based on a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> object, drawn at the
            specified angle (degrees).
            </summary>
            <param name="blend">The <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> object that defines the colors
            and positions along the gradient.</param>
            <param name="angle">The angle (degrees) of the gradient fill</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Color[])">
            <summary>
            Constructor that creates a linear gradient multi-color-fill, setting <see cref="P:ZedGraph.Fill.Type"/> to
            <see cref="F:ZedGraph.FillType.Brush"/> using the specified colors.  This gradient fill
            consists of many colors based on an array of <see cref="P:ZedGraph.Fill.Color"/> objects, drawn at an
            angle of zero (degrees).  The <see paramref="colors"/> array is used to create
            a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> object assuming a even linear distribution of the colors
            across the gradient.
            </summary>
            <param name="colors">The array of <see cref="P:ZedGraph.Fill.Color"/> objects that defines the colors
            along the gradient.</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Color[],System.Single)">
            <summary>
            Constructor that creates a linear gradient multi-color-fill, setting <see cref="P:ZedGraph.Fill.Type"/> to
            <see cref="F:ZedGraph.FillType.Brush"/> using the specified colors.  This gradient fill
            consists of many colors based on an array of <see cref="P:ZedGraph.Fill.Color"/> objects, drawn at the
            specified angle (degrees).  The <see paramref="colors"/> array is used to create
            a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> object assuming a even linear distribution of the colors
            across the gradient.
            </summary>
            <param name="colors">The array of <see cref="P:ZedGraph.Fill.Color"/> objects that defines the colors
            along the gradient.</param>
            <param name="angle">The angle (degrees) of the gradient fill</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Color[],System.Single[])">
            <summary>
            Constructor that creates a linear gradient multi-color-fill, setting <see cref="P:ZedGraph.Fill.Type"/> to
            <see cref="F:ZedGraph.FillType.Brush"/> using the specified colors.  This gradient fill
            consists of many colors based on an array of <see cref="P:ZedGraph.Fill.Color"/> objects, drawn at the
            an angle of zero (degrees).  The <see paramref="colors"/> array is used to create
            a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> object assuming a even linear distribution of the colors
            across the gradient.
            </summary>
            <param name="colors">The array of <see cref="P:ZedGraph.Fill.Color"/> objects that defines the colors
            along the gradient.</param>
            <param name="positions">The array of floating point values that defines the color
            positions along the gradient.  Values should range from 0 to 1.</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Color[],System.Single[],System.Single)">
            <summary>
            Constructor that creates a linear gradient multi-color-fill, setting <see cref="P:ZedGraph.Fill.Type"/> to
            <see cref="F:ZedGraph.FillType.Brush"/> using the specified colors.  This gradient fill
            consists of many colors based on an array of <see cref="P:ZedGraph.Fill.Color"/> objects, drawn at the
            specified angle (degrees).  The <see paramref="colors"/> array is used to create
            a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/> object assuming a even linear distribution of the colors
            across the gradient.
            </summary>
            <param name="colors">The array of <see cref="P:ZedGraph.Fill.Color"/> objects that defines the colors
            along the gradient.</param>
            <param name="positions">The array of floating point values that defines the color
            positions along the gradient.  Values should range from 0 to 1.</param>
            <param name="angle">The angle (degrees) of the gradient fill</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Image,System.Drawing.Drawing2D.WrapMode)">
            <summary>
            Constructor that creates a texture fill, setting <see cref="P:ZedGraph.Fill.Type"/> to
            <see cref="F:ZedGraph.FillType.Brush"/> and using the specified image.
            </summary>
            <param name="image">The <see cref="T:System.Drawing.Image"/> to use for filling</param>
            <param name="wrapMode">The <see cref="T:System.Drawing.Drawing2D.WrapMode"/> class that controls the image wrapping properties</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Brush)">
            <summary>
            Constructor that creates a <see cref="P:ZedGraph.Fill.Brush"/> fill, using a user-supplied, custom
            <see cref="P:ZedGraph.Fill.Brush"/>.  The brush will be scaled to fit the destination screen object
            unless you manually change <see cref="P:ZedGraph.Fill.IsScaled"/> to false;
            </summary>
            <param name="brush">The <see cref="P:ZedGraph.Fill.Brush"/> to use for fancy fills.  Typically, this would
            be a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> or a <see cref="T:System.Drawing.TextureBrush"/> class</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Brush,System.Boolean)">
            <summary>
            Constructor that creates a <see cref="P:ZedGraph.Fill.Brush"/> fill, using a user-supplied, custom
            <see cref="P:ZedGraph.Fill.Brush"/>.  The brush will be scaled to fit the destination screen object
            according to the <see paramref="isScaled"/> parameter.
            </summary>
            <param name="brush">The <see cref="P:ZedGraph.Fill.Brush"/> to use for fancy fills.  Typically, this would
            be a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> or a <see cref="T:System.Drawing.TextureBrush"/> class</param>
            <param name="isScaled">Determines if the brush will be scaled to fit the bounding box
            of the destination object.  true to scale it, false to leave it unscaled</param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Drawing.Brush,ZedGraph.AlignH,ZedGraph.AlignV)">
            <summary>
            Constructor that creates a <see cref="P:ZedGraph.Fill.Brush"/> fill, using a user-supplied, custom
            <see cref="P:ZedGraph.Fill.Brush"/>.  This constructor will make the brush unscaled (see <see cref="P:ZedGraph.Fill.IsScaled"/>),
            but it provides <see paramref="alignH"/> and <see paramref="alignV"/> parameters to control
            alignment of the brush with respect to the filled object.
            </summary>
            <param name="brush">The <see cref="P:ZedGraph.Fill.Brush"/> to use for fancy fills.  Typically, this would
            be a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> or a <see cref="T:System.Drawing.TextureBrush"/> class</param>
            <param name="alignH">Controls the horizontal alignment of the brush within the filled object
            (see <see cref="P:ZedGraph.Fill.AlignH"/></param>
            <param name="alignV">Controls the vertical alignment of the brush within the filled object
            (see <see cref="P:ZedGraph.Fill.AlignV"/></param>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(ZedGraph.Fill)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The Fill object from which to copy</param>
        </member>
        <member name="M:ZedGraph.Fill.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the Fill class</returns>
        </member>
        <member name="M:ZedGraph.Fill.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.Fill.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.Fill.MakeBrush(System.Drawing.RectangleF)">
            <summary>
            Create a fill brush using current properties.  This method will construct a brush based on the
            settings of <see cref="P:ZedGraph.Fill.Type"/>, <see cref="P:ZedGraph.Fill.Color"/>
            and <see cref="P:ZedGraph.Fill.Brush"/>.  If
            <see cref="P:ZedGraph.Fill.Type"/> is set to <see cref="F:ZedGraph.FillType.Brush"/> and
            <see cref="P:ZedGraph.Fill.Brush"/>
            is null, then a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> will be created between the colors of
            <see cref="P:System.Drawing.Color.White"/> and <see cref="P:ZedGraph.Fill.Color"/>.
            </summary>
            <param name="rect">A rectangle that bounds the object to be filled.  This determines
            the start and end of the gradient fill.</param>
            <returns>A <see cref="T:System.Drawing.Brush"/> class representing the fill brush</returns>
        </member>
        <member name="M:ZedGraph.Fill.MakeBrush(System.Drawing.RectangleF,ZedGraph.PointPair)">
            <summary>
            Create a fill brush using current properties.  This method will construct a brush based on the
            settings of <see cref="P:ZedGraph.Fill.Type"/>, <see cref="P:ZedGraph.Fill.Color"/>
            and <see cref="P:ZedGraph.Fill.Brush"/>.  If
            <see cref="P:ZedGraph.Fill.Type"/> is set to <see cref="F:ZedGraph.FillType.Brush"/> and
            <see cref="P:ZedGraph.Fill.Brush"/>
            is null, then a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> will be created between the colors of
            <see cref="P:System.Drawing.Color.White"/> and <see cref="P:ZedGraph.Fill.Color"/>.
            </summary>
            <param name="rect">A rectangle that bounds the object to be filled.  This determines
            the start and end of the gradient fill.</param>
            <param name="dataValue">The data value to be used for a value-based
            color gradient.  This is only applicable for <see cref="F:ZedGraph.FillType.GradientByX"/>,
            <see cref="F:ZedGraph.FillType.GradientByY"/> or <see cref="F:ZedGraph.FillType.GradientByZ"/>.</param>
            <returns>A <see cref="T:System.Drawing.Brush"/> class representing the fill brush</returns>
        </member>
        <member name="M:ZedGraph.Fill.Draw(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Fill the background of the <see cref="T:System.Drawing.RectangleF"/> area, using the
            fill type from this <see cref="T:ZedGraph.Fill"/>.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> struct specifying the area
            to be filled</param>
        </member>
        <member name="P:ZedGraph.Fill.Color">
            <summary>
            The fill color.  This property is used as a single color to make a solid fill
            (<see cref="P:ZedGraph.Fill.Type"/> is <see cref="F:ZedGraph.FillType.Solid"/>), or it can be used in 
            combination with <see cref="P:System.Drawing.Color.White"/> to make a
            <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/>
            when <see cref="P:ZedGraph.Fill.Type"/> is <see cref="F:ZedGraph.FillType.Brush"/> and <see cref="P:ZedGraph.Fill.Brush"/>
            is null.
            </summary>
            <seealso cref="P:ZedGraph.Fill.Type"/>
        </member>
        <member name="P:ZedGraph.Fill.Brush">
            <summary>
            The custom fill brush.  This can be a <see cref="T:System.Drawing.SolidBrush"/>, a
            <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/>, or a <see cref="T:System.Drawing.TextureBrush"/>.  This property is
            only applicable if the <see cref="P:ZedGraph.Fill.Type"/> property is set
            to <see cref="F:ZedGraph.FillType.Brush"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.Fill.Type">
            <summary>
            Determines the type of fill, which can be either solid
            color (<see cref="F:ZedGraph.FillType.Solid"/>) or a custom brush
            (<see cref="F:ZedGraph.FillType.Brush"/>).  See <see cref="P:ZedGraph.Fill.Type"/> for
            more information.
            </summary>
            <seealso cref="P:ZedGraph.Fill.Color"/>
        </member>
        <member name="P:ZedGraph.Fill.IsVisible">
            <summary>
            This property determines the type of color fill. 
            Returns true if the <see cref="P:ZedGraph.Fill.Type"/> property is either
            <see cref="F:ZedGraph.FillType.Solid"/> or
            <see cref="F:ZedGraph.FillType.Brush"/>.  If set to true, this property
            will automatically set the <see cref="P:ZedGraph.Fill.Type"/> to
            <see cref="F:ZedGraph.FillType.Brush"/>.  If set to false, this property
            will automatically set the <see cref="P:ZedGraph.Fill.Type"/> to
            <see cref="F:ZedGraph.FillType.None"/>.  In order to get a regular
            solid-color fill, you have to manually set <see cref="P:ZedGraph.Fill.Type"/>
            to <see cref="F:ZedGraph.FillType.Solid"/>.
            </summary>
            <seealso cref="P:ZedGraph.Fill.Color"/>
            <seealso cref="P:ZedGraph.Fill.Brush"/>
            <seealso cref="P:ZedGraph.Fill.Type"/>
        </member>
        <member name="P:ZedGraph.Fill.IsScaled">
            <summary>
            Determines if the brush will be scaled to the bounding box
            of the filled object.  If this value is false, then the brush will only be aligned
            with the filled object based on the <see cref="P:ZedGraph.Fill.AlignH"/> and <see cref="P:ZedGraph.Fill.AlignV"/>
            properties.
            </summary>
        </member>
        <member name="P:ZedGraph.Fill.AlignH">
            <summary>
            Determines how the brush will be aligned with the filled object
            in the horizontal direction.  This value is a <see cref="T:ZedGraph.AlignH"/> enumeration.
            This field only applies if <see cref="P:ZedGraph.Fill.IsScaled"/> is false.
            </summary>
            <seealso cref="P:ZedGraph.Fill.AlignV"/>
        </member>
        <member name="P:ZedGraph.Fill.AlignV">
            <summary>
            Determines how the brush will be aligned with the filled object
            in the vertical direction.  This value is a <see cref="T:ZedGraph.AlignV"/> enumeration.
            This field only applies if <see cref="P:ZedGraph.Fill.IsScaled"/> is false.
            </summary>
            <seealso cref="P:ZedGraph.Fill.AlignH"/>
        </member>
        <member name="P:ZedGraph.Fill.IsGradientValueType">
            <summary>
            Returns a boolean value indicating whether or not this fill is a "Gradient-By-Value"
            type.  This is true for <see cref="F:ZedGraph.FillType.GradientByX"/>, <see cref="F:ZedGraph.FillType.GradientByY"/>,
            or <see cref="F:ZedGraph.FillType.GradientByZ"/>.
            </summary>
            <remarks>
            The gradient by value fill method allows the fill color for each point or bar to
            be based on a value for that point (either X, Y, or Z in the <see cref="T:ZedGraph.PointPairList"/>.
            For example, assume a <see cref="T:ZedGraph.Fill"/> class is defined with a linear gradient ranging from
            <see cref="P:System.Drawing.Color.Blue"/> to <see cref="P:System.Drawing.Color.Red"/> and the <see cref="P:ZedGraph.Fill.Type"/>
            is set to <see cref="F:ZedGraph.FillType.GradientByY"/>.  If <see cref="P:ZedGraph.Fill.RangeMin"/> is set to 
            100.0 and <see cref="P:ZedGraph.Fill.RangeMax"/> is set to 200.0, then a point that has a Y value of
            100 or less will be colored blue, a point with a Y value of 200 or more will be
            colored red, and a point between 100 and 200 will have a color based on a linear scale
            between blue and red.  Note that the fill color is always solid for any given point.
            You can use the Z value from <see cref="T:ZedGraph.PointPairList"/> along with
            <see cref="F:ZedGraph.FillType.GradientByZ"/> to color individual points according to some
            property that is independent of the X,Y point pair.
            </remarks>
            <value>true if this is a Gradient-by-value type, false otherwise</value>
            <seealso cref="F:ZedGraph.FillType.GradientByX"/>
            <seealso cref="F:ZedGraph.FillType.GradientByY"/>
            <seealso cref="F:ZedGraph.FillType.GradientByZ"/>
        </member>
        <member name="P:ZedGraph.Fill.RangeMin">
            <summary>
            The minimum user-scale value for the gradient-by-value determination.  This defines
            the user-scale value for the start of the gradient.
            </summary>
            <seealso cref="F:ZedGraph.FillType.GradientByX"/>
            <seealso cref="F:ZedGraph.FillType.GradientByY"/>
            <seealso cref="F:ZedGraph.FillType.GradientByZ"/>
            <seealso cref="P:ZedGraph.Fill.IsGradientValueType"/>
            <value>A double value, in user scale unit</value>
        </member>
        <member name="P:ZedGraph.Fill.RangeMax">
            <summary>
            The maximum user-scale value for the gradient-by-value determination.  This defines
            the user-scale value for the end of the gradient.
            </summary>
            <seealso cref="F:ZedGraph.FillType.GradientByX"/>
            <seealso cref="F:ZedGraph.FillType.GradientByY"/>
            <seealso cref="F:ZedGraph.FillType.GradientByZ"/>
            <seealso cref="P:ZedGraph.Fill.IsGradientValueType"/>
            <value>A double value, in user scale unit</value>
        </member>
        <member name="T:ZedGraph.Fill.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.Fill"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.Fill.Default.IsScaled">
            <summary>
            The default scaling mode for <see cref="P:ZedGraph.Fill.Brush"/> fills.
            This is the default value for the <see cref="P:ZedGraph.Fill.IsScaled"/> property.
            </summary>
        </member>
        <member name="F:ZedGraph.Fill.Default.AlignH">
            <summary>
            The default horizontal alignment for <see cref="P:ZedGraph.Fill.Brush"/> fills.
            This is the default value for the <see cref="P:ZedGraph.Fill.AlignH"/> property.
            </summary>
        </member>
        <member name="F:ZedGraph.Fill.Default.AlignV">
            <summary>
            The default vertical alignment for <see cref="P:ZedGraph.Fill.Brush"/> fills.
            This is the default value for the <see cref="P:ZedGraph.Fill.AlignV"/> property.
            </summary>
        </member>
        <member name="T:ZedGraph.FontSpec">
            <summary>
            The <see cref="T:ZedGraph.FontSpec"/> class is a generic font class that maintains the font family,
            attributes, colors, border and fill modes, font size, and angle information.
            This class can render text with a variety of alignment options using the
            <see cref="T:ZedGraph.AlignH"/> and <see cref="T:ZedGraph.AlignV"/> parameters in the
            <see cref="M:ZedGraph.FontSpec.Draw(System.Drawing.Graphics,System.Boolean,System.String,System.Single,System.Single,ZedGraph.AlignH,ZedGraph.AlignV,System.Single)"/> method.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.14 $ $Date: 2005/02/02 04:52:04 $ </version>
        </member>
        <member name="F:ZedGraph.FontSpec.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.FontSpec.fontColor">
            <summary>
            Private field that stores the color of the font characters for this
            <see cref="T:ZedGraph.FontSpec"/>.  Use the public property <see cref="P:ZedGraph.FontSpec.FontColor"/>
            to access this value.
            </summary>
            <value>A system <see cref="T:System.Drawing.Color"/> reference.</value>
        </member>
        <member name="F:ZedGraph.FontSpec.family">
            <summary>
            Private field that stores the font family name for this <see cref="T:ZedGraph.FontSpec"/>.
            Use the public property <see cref="P:ZedGraph.FontSpec.Family"/> to access this value.
            </summary>
            <value>A text string with the font family name, e.g., "Arial"</value>
        </member>
        <member name="F:ZedGraph.FontSpec.isBold">
            <summary>
            Private field that determines whether this <see cref="T:ZedGraph.FontSpec"/> is
            drawn with bold typeface.
            Use the public property <see cref="P:ZedGraph.FontSpec.IsBold"/> to access this value.
            </summary>
            <value>A boolean value, true for bold, false for normal</value>
        </member>
        <member name="F:ZedGraph.FontSpec.isItalic">
            <summary>
            Private field that determines whether this <see cref="T:ZedGraph.FontSpec"/> is
            drawn with italic typeface.
            Use the public property <see cref="P:ZedGraph.FontSpec.IsItalic"/> to access this value.
            </summary>
            <value>A boolean value, true for italic, false for normal</value>
        </member>
        <member name="F:ZedGraph.FontSpec.isUnderline">
            <summary>
            Private field that determines whether this <see cref="T:ZedGraph.FontSpec"/> is
            drawn with underlined typeface.
            Use the public property <see cref="P:ZedGraph.FontSpec.IsUnderline"/> to access this value.
            </summary>
            <value>A boolean value, true for underline, false for normal</value>
        </member>
        <member name="F:ZedGraph.FontSpec.fill">
            <summary>
            Private field that stores the <see cref="T:ZedGraph.Fill"/> data for this
            <see cref="T:ZedGraph.FontSpec"/>.  Use the public property <see cref="P:ZedGraph.FontSpec.Fill"/> to
            access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.FontSpec.border">
            <summary>
            Private field that determines the properties of the border around the text.
            Use the public property <see cref="P:ZedGraph.FontSpec.Border"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.FontSpec.angle">
            <summary>
            Private field that determines the angle at which this
            <see cref="T:ZedGraph.FontSpec"/> object is drawn.  Use the public property
            <see cref="P:ZedGraph.FontSpec.Angle"/> to access this value.
            </summary>
            <value>The angle of the font, measured in anti-clockwise degrees from
            horizontal.  Negative values are permitted.</value>
        </member>
        <member name="F:ZedGraph.FontSpec.stringAlignment">
            <summary>
            Private field that determines the alignment with which this
            <see cref="T:ZedGraph.FontSpec"/> object is drawn.  This alignment really only
            affects multi-line strings.  Use the public property
            <see cref="P:ZedGraph.FontSpec.StringAlignment"/> to access this value.
            </summary>
            <value>A <see cref="P:ZedGraph.FontSpec.StringAlignment"/> enumeration.</value>
        </member>
        <member name="F:ZedGraph.FontSpec.size">
            <summary>
            Private field that determines the size of the font for this
            <see cref="T:ZedGraph.FontSpec"/> object.  Use the public property
            <see cref="P:ZedGraph.FontSpec.Size"/> to access this value.
            </summary>
            <value>The size of the font, measured in points (1/72 inch).</value>
        </member>
        <member name="F:ZedGraph.FontSpec.font">
            <summary>
            Private field that stores a reference to the <see cref="T:System.Drawing.Font"/>
            object for this <see cref="T:ZedGraph.FontSpec"/>.  This font object will be at
            the actual drawn size <see cref="F:ZedGraph.FontSpec.scaledSize"/> according to the current
            size of the <see cref="T:ZedGraph.GraphPane"/>.  Use the public method
            <see cref="M:ZedGraph.FontSpec.GetFont(System.Single)"/> to access this font object.
            </summary>
            <value>A reference to a <see cref="T:System.Drawing.Font"/> object</value>
        </member>
        <member name="F:ZedGraph.FontSpec.superScriptFont">
            <summary>
            Private field that stores a reference to the <see cref="T:System.Drawing.Font"/>
            object that will be used for superscripts.  This font object will be a
            fraction of the <see cref="T:ZedGraph.FontSpec"/> <see cref="F:ZedGraph.FontSpec.scaledSize"/>,
            based on the value of <see cref="F:ZedGraph.FontSpec.Default.SuperSize"/>.  This
            property is internal, and has no public access.
            </summary>
            <value>A reference to a <see cref="T:System.Drawing.Font"/> object</value>
        </member>
        <member name="F:ZedGraph.FontSpec.scaledSize">
            <summary>
            Private field that temporarily stores the scaled size of the font for this
            <see cref="T:ZedGraph.FontSpec"/> object.  This represents the actual on-screen
            size, rather than the <see cref="P:ZedGraph.FontSpec.Size"/> that represents the reference
            size for a "full-sized" <see cref="T:ZedGraph.GraphPane"/>.
            </summary>
            <value>The size of the font, measured in points (1/72 inch).</value>
        </member>
        <member name="M:ZedGraph.FontSpec.#ctor">
            <summary>
            Construct a <see cref="T:ZedGraph.FontSpec"/> object with default properties.
            </summary>
        </member>
        <member name="M:ZedGraph.FontSpec.#ctor(System.String,System.Single,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Construct a <see cref="T:ZedGraph.FontSpec"/> object with the given properties.  All other properties
            are defaulted according to the values specified in the <see cref="T:ZedGraph.FontSpec.Default"/>
            default class.
            </summary>
            <param name="family">A text string representing the font family
            (default is "Arial")</param>
            <param name="size">A size of the font in points.  This size will be scaled
            based on the ratio of the <see cref="P:ZedGraph.PaneBase.PaneRect"/> dimension to the
            <see cref="P:ZedGraph.PaneBase.BaseDimension"/> of the <see cref="T:ZedGraph.GraphPane"/> object. </param>
            <param name="color">The color with which to render the font</param>
            <param name="isBold">true for a bold typeface, false otherwise</param>
            <param name="isItalic">true for an italic typeface, false otherwise</param>
            <param name="isUnderline">true for an underlined font, false otherwise</param>
        </member>
        <member name="M:ZedGraph.FontSpec.#ctor(System.String,System.Single,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Drawing.Color,System.Drawing.Brush,ZedGraph.FillType)">
            <summary>
            Construct a <see cref="T:ZedGraph.FontSpec"/> object with the given properties.  All other properties
            are defaulted according to the values specified in the <see cref="T:ZedGraph.FontSpec.Default"/>
            default class.
            </summary>
            <param name="family">A text string representing the font family
            (default is "Arial")</param>
            <param name="size">A size of the font in points.  This size will be scaled
            based on the ratio of the <see cref="P:ZedGraph.PaneBase.PaneRect"/> dimension to the
            <see cref="P:ZedGraph.PaneBase.BaseDimension"/> of the <see cref="T:ZedGraph.GraphPane"/> object. </param>
            <param name="color">The color with which to render the font</param>
            <param name="isBold">true for a bold typeface, false otherwise</param>
            <param name="isItalic">true for an italic typeface, false otherwise</param>
            <param name="isUnderline">true for an underlined font, false otherwise</param>
            <param name="fillColor">The <see cref="T:System.Drawing.Color"/> to use for filling in the text background</param>
            <param name="fillBrush">The <see cref="T:System.Drawing.Brush"/> to use for filling in the text background</param>
            <param name="fillType">The <see cref="T:ZedGraph.FillType"/> to use for the
            text background</param>
        </member>
        <member name="M:ZedGraph.FontSpec.#ctor(ZedGraph.FontSpec)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The FontSpec object from which to copy</param>
        </member>
        <member name="M:ZedGraph.FontSpec.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the FontSpec</returns>
        </member>
        <member name="M:ZedGraph.FontSpec.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.FontSpec.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.FontSpec.Remake(System.Single,System.Single,System.Single@,System.Drawing.Font@)">
            <summary>
            Recreate the font based on a new scaled size.  The font
            will only be recreated if the scaled size has changed by
            at least 0.1 points.
            </summary>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <param name="size">The unscaled size of the font, in points</param>
            <param name="scaledSize">The scaled size of the font, in points</param>
            <param name="font">A reference to the <see cref="T:System.Drawing.Font"/> object</param>
        </member>
        <member name="M:ZedGraph.FontSpec.GetFont(System.Single)">
            <summary>
            Get the <see cref="T:System.Drawing.Font"/> class for the current scaled font.
            </summary>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>Returns a reference to a <see cref="T:System.Drawing.Font"/> object
            with a size of <see cref="F:ZedGraph.FontSpec.scaledSize"/>, and font <see cref="P:ZedGraph.FontSpec.Family"/>.
            </returns>
        </member>
        <member name="M:ZedGraph.FontSpec.Draw(System.Drawing.Graphics,System.Boolean,System.String,System.Single,System.Single,ZedGraph.AlignH,ZedGraph.AlignV,System.Single)">
            <summary>
            Render the specified <paramref name="text"/> to the specifed
            <see cref="T:System.Drawing.Graphics"/> device.  The text, border, and fill options
            will be rendered as required.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="isPenWidthScaled">
            Set to true to have the <see cref="P:ZedGraph.FontSpec.Border"/> pen width scaled with the
            scaleFactor.
            </param>
            <param name="text">A string value containing the text to be
            displayed.  This can be multiple lines, separated by newline ('\n')
            characters</param>
            <param name="x">The X location to display the text, in screen
            coordinates, relative to the horizontal (<see cref="T:ZedGraph.AlignH"/>)
            alignment parameter <paramref name="alignH"/></param>
            <param name="y">The Y location to display the text, in screen
            coordinates, relative to the vertical (<see cref="T:ZedGraph.AlignV"/>
            alignment parameter <paramref name="alignV"/></param>
            <param name="alignH">A horizontal alignment parameter specified
            using the <see cref="T:ZedGraph.AlignH"/> enum type</param>
            <param name="alignV">A vertical alignment parameter specified
            using the <see cref="T:ZedGraph.AlignV"/> enum type</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.FontSpec.Draw(System.Drawing.Graphics,System.Boolean,System.String,System.Single,System.Single,ZedGraph.AlignH,ZedGraph.AlignV,System.Single,System.Drawing.SizeF)">
            <summary>
            Render the specified <paramref name="text"/> to the specifed
            <see cref="T:System.Drawing.Graphics"/> device.  The text, border, and fill options
            will be rendered as required.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="isPenWidthScaled">
            Set to true to have the <see cref="P:ZedGraph.FontSpec.Border"/> pen width scaled with the
            scaleFactor.
            </param>
            <param name="text">A string value containing the text to be
            displayed.  This can be multiple lines, separated by newline ('\n')
            characters</param>
            <param name="x">The X location to display the text, in screen
            coordinates, relative to the horizontal (<see cref="T:ZedGraph.AlignH"/>)
            alignment parameter <paramref name="alignH"/></param>
            <param name="y">The Y location to display the text, in screen
            coordinates, relative to the vertical (<see cref="T:ZedGraph.AlignV"/>
            alignment parameter <paramref name="alignV"/></param>
            <param name="alignH">A horizontal alignment parameter specified
            using the <see cref="T:ZedGraph.AlignH"/> enum type</param>
            <param name="alignV">A vertical alignment parameter specified
            using the <see cref="T:ZedGraph.AlignV"/> enum type</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <param name="layoutArea">The limiting area (<see cref="T:System.Drawing.SizeF"/>) into which the text
            must fit.  The actual rectangle may be smaller than this, but the text will be wrapped
            to accomodate the area.</param>
        </member>
        <member name="M:ZedGraph.FontSpec.PointInBox(System.Drawing.PointF,System.Drawing.Graphics,System.String,System.Single,System.Single,ZedGraph.AlignH,ZedGraph.AlignV,System.Single)">
            <summary>
            Determines if the specified screen point lies within the bounding box of
            the text, taking into account alignment and rotation parameters.
            </summary>
            <param name="pt">The screen point, in pixel units</param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="text">A string value containing the text to be
            displayed.  This can be multiple lines, separated by newline ('\n')
            characters</param>
            <param name="x">The X location to display the text, in screen
            coordinates, relative to the horizontal (<see cref="T:ZedGraph.AlignH"/>)
            alignment parameter <paramref name="alignH"/></param>
            <param name="y">The Y location to display the text, in screen
            coordinates, relative to the vertical (<see cref="T:ZedGraph.AlignV"/>
            alignment parameter <paramref name="alignV"/></param>
            <param name="alignH">A horizontal alignment parameter specified
            using the <see cref="T:ZedGraph.AlignH"/> enum type</param>
            <param name="alignV">A vertical alignment parameter specified
            using the <see cref="T:ZedGraph.AlignV"/> enum type</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>true if the point lies within the bounding box, false otherwise</returns>
        </member>
        <member name="M:ZedGraph.FontSpec.PointInBox(System.Drawing.PointF,System.Drawing.Graphics,System.String,System.Single,System.Single,ZedGraph.AlignH,ZedGraph.AlignV,System.Single,System.Drawing.SizeF)">
            <summary>
            Determines if the specified screen point lies within the bounding box of
            the text, taking into account alignment and rotation parameters.
            </summary>
            <param name="pt">The screen point, in pixel units</param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="text">A string value containing the text to be
            displayed.  This can be multiple lines, separated by newline ('\n')
            characters</param>
            <param name="x">The X location to display the text, in screen
            coordinates, relative to the horizontal (<see cref="T:ZedGraph.AlignH"/>)
            alignment parameter <paramref name="alignH"/></param>
            <param name="y">The Y location to display the text, in screen
            coordinates, relative to the vertical (<see cref="T:ZedGraph.AlignV"/>
            alignment parameter <paramref name="alignV"/></param>
            <param name="alignH">A horizontal alignment parameter specified
            using the <see cref="T:ZedGraph.AlignH"/> enum type</param>
            <param name="alignV">A vertical alignment parameter specified
            using the <see cref="T:ZedGraph.AlignV"/> enum type</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <param name="layoutArea">The limiting area (<see cref="T:System.Drawing.SizeF"/>) into which the text
            must fit.  The actual rectangle may be smaller than this, but the text will be wrapped
            to accomodate the area.</param>
            <returns>true if the point lies within the bounding box, false otherwise</returns>
        </member>
        <member name="M:ZedGraph.FontSpec.DrawTenPower(System.Drawing.Graphics,ZedGraph.GraphPane,System.String,System.Single,System.Single,ZedGraph.AlignH,ZedGraph.AlignV,System.Single)">
            <summary>
            Render the specified <paramref name="text"/> to the specifed
            <see cref="T:System.Drawing.Graphics"/> device.  The text, border, and fill options
            will be rendered as required.  This special case method will show the
            specified text as a power of 10, using the <see cref="F:ZedGraph.FontSpec.Default.SuperSize"/>
            and <see cref="F:ZedGraph.FontSpec.Default.SuperShift"/>.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="text">A string value containing the text to be
            displayed.  This can be multiple lines, separated by newline ('\n')
            characters</param>
            <param name="x">The X location to display the text, in screen
            coordinates, relative to the horizontal (<see cref="T:ZedGraph.AlignH"/>)
            alignment parameter <paramref name="alignH"/></param>
            <param name="y">The Y location to display the text, in screen
            coordinates, relative to the vertical (<see cref="T:ZedGraph.AlignV"/>
            alignment parameter <paramref name="alignV"/></param>
            <param name="alignH">A horizontal alignment parameter specified
            using the <see cref="T:ZedGraph.AlignH"/> enum type</param>
            <param name="alignV">A vertical alignment parameter specified
            using the <see cref="T:ZedGraph.AlignV"/> enum type</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.FontSpec.GetHeight(System.Single)">
            <summary>
            Get the height of the scaled font
            </summary>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>The scaled font height, in pixels</returns>
        </member>
        <member name="M:ZedGraph.FontSpec.GetWidth(System.Drawing.Graphics,System.Single)">
            <summary>
            Get the average character width of the scaled font.  The average width is
            based on the character 'x'
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>The scaled font width, in pixels</returns>
        </member>
        <member name="M:ZedGraph.FontSpec.GetWidth(System.Drawing.Graphics,System.String,System.Single)">
            <summary>
            Get the total width of the specified text string
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="text">The text string for which the width is to be calculated
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>The scaled text width, in pixels</returns>
        </member>
        <member name="M:ZedGraph.FontSpec.MeasureString(System.Drawing.Graphics,System.String,System.Single)">
            <summary>
            Get a <see cref="T:System.Drawing.SizeF"/> struct representing the width and height
            of the specified text string, based on the scaled font size
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="text">The text string for which the width is to be calculated
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>The scaled text dimensions, in pixels, in the form of
            a <see cref="T:System.Drawing.SizeF"/> struct</returns>
        </member>
        <member name="M:ZedGraph.FontSpec.MeasureString(System.Drawing.Graphics,System.String,System.Single,System.Drawing.SizeF)">
            <summary>
            Get a <see cref="T:System.Drawing.SizeF"/> struct representing the width and height
            of the specified text string, based on the scaled font size, and using
            the specified <see cref="T:System.Drawing.SizeF"/> as an outer limit.
            </summary>
            <remarks>
            This method will allow the text to wrap as necessary to fit the 
            <see paramref="layoutArea"/>.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="text">The text string for which the width is to be calculated
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <param name="layoutArea">The limiting area (<see cref="T:System.Drawing.SizeF"/>) into which the text
            must fit.  The actual rectangle may be smaller than this, but the text will be wrapped
            to accomodate the area.</param>
            <returns>The scaled text dimensions, in pixels, in the form of
            a <see cref="T:System.Drawing.SizeF"/> struct</returns>
        </member>
        <member name="M:ZedGraph.FontSpec.BoundingBox(System.Drawing.Graphics,System.String,System.Single)">
            <summary>
            Get a <see cref="T:System.Drawing.SizeF"/> struct representing the width and height
            of the bounding box for the specified text string, based on the scaled font size.
            </summary>
            <remarks>
            This routine differs from <see cref="M:ZedGraph.FontSpec.MeasureString(System.Drawing.Graphics,System.String,System.Single)"/> in that it takes into
            account the rotation angle of the font, and gives the dimensions of the
            bounding box that encloses the text at the specified angle.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="text">The text string for which the width is to be calculated
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>The scaled text dimensions, in pixels, in the form of
            a <see cref="T:System.Drawing.SizeF"/> struct</returns>
        </member>
        <member name="M:ZedGraph.FontSpec.BoundingBox(System.Drawing.Graphics,System.String,System.Single,System.Drawing.SizeF)">
            <summary>
            Get a <see cref="T:System.Drawing.SizeF"/> struct representing the width and height
            of the bounding box for the specified text string, based on the scaled font size.
            </summary>
            <remarks>
            This routine differs from <see cref="M:ZedGraph.FontSpec.MeasureString(System.Drawing.Graphics,System.String,System.Single)"/> in that it takes into
            account the rotation angle of the font, and gives the dimensions of the
            bounding box that encloses the text at the specified angle.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="text">The text string for which the width is to be calculated
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <param name="layoutArea">The limiting area (<see cref="T:System.Drawing.SizeF"/>) into which the text
            must fit.  The actual rectangle may be smaller than this, but the text will be wrapped
            to accomodate the area.</param>
            <returns>The scaled text dimensions, in pixels, in the form of
            a <see cref="T:System.Drawing.SizeF"/> struct</returns>
        </member>
        <member name="M:ZedGraph.FontSpec.BoundingBoxTenPower(System.Drawing.Graphics,System.String,System.Single)">
            <summary>
            Get a <see cref="T:System.Drawing.SizeF"/> struct representing the width and height
            of the bounding box for the specified text string, based on the scaled font size.
            </summary>
            <remarks>
            This special case method will show the specified string as a power of 10,
            superscripted and downsized according to the
            <see cref="F:ZedGraph.FontSpec.Default.SuperSize"/> and <see cref="F:ZedGraph.FontSpec.Default.SuperShift"/>.
            This routine differs from <see cref="M:ZedGraph.FontSpec.MeasureString(System.Drawing.Graphics,System.String,System.Single)"/> in that it takes into
            account the rotation angle of the font, and gives the dimensions of the
            bounding box that encloses the text at the specified angle.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="text">The text string for which the width is to be calculated
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>The scaled text dimensions, in pixels, in the form of
            a <see cref="T:System.Drawing.SizeF"/> struct</returns>
        </member>
        <member name="P:ZedGraph.FontSpec.FontColor">
            <summary>
            The color of the font characters for this <see cref="T:ZedGraph.FontSpec"/>.
            Note that the border and background
            colors are set using the <see cref="P:ZedGraph.Border.Color"/> and
            <see cref="P:ZedGraph.Fill.Color"/> properties, respectively.
            </summary>
            <value>A system <see cref="T:System.Drawing.Color"/> reference.</value>
        </member>
        <member name="P:ZedGraph.FontSpec.Family">
            <summary>
            The font family name for this <see cref="T:ZedGraph.FontSpec"/>.
            </summary>
            <value>A text string with the font family name, e.g., "Arial"</value>
        </member>
        <member name="P:ZedGraph.FontSpec.IsBold">
            <summary>
            Determines whether this <see cref="T:ZedGraph.FontSpec"/> is
            drawn with bold typeface.
            </summary>
            <value>A boolean value, true for bold, false for normal</value>
        </member>
        <member name="P:ZedGraph.FontSpec.IsItalic">
            <summary>
            Determines whether this <see cref="T:ZedGraph.FontSpec"/> is
            drawn with italic typeface.
            </summary>
            <value>A boolean value, true for italic, false for normal</value>
        </member>
        <member name="P:ZedGraph.FontSpec.IsUnderline">
            <summary>
            Determines whether this <see cref="T:ZedGraph.FontSpec"/> is
            drawn with underlined typeface.
            </summary>
            <value>A boolean value, true for underline, false for normal</value>
        </member>
        <member name="P:ZedGraph.FontSpec.Angle">
            <summary>
            The angle at which this <see cref="T:ZedGraph.FontSpec"/> object is drawn.
            </summary>
            <value>The angle of the font, measured in anti-clockwise degrees from
            horizontal.  Negative values are permitted.</value>
        </member>
        <member name="P:ZedGraph.FontSpec.StringAlignment">
            <summary>
            Determines the alignment with which this
            <see cref="T:ZedGraph.FontSpec"/> object is drawn.  This alignment really only
            affects multi-line strings.
            </summary>
            <value>A <see cref="P:ZedGraph.FontSpec.StringAlignment"/> enumeration.</value>
        </member>
        <member name="P:ZedGraph.FontSpec.Size">
            <summary>
            The size of the font for this <see cref="T:ZedGraph.FontSpec"/> object.
            </summary>
            <value>The size of the font, measured in points (1/72 inch).</value>
        </member>
        <member name="P:ZedGraph.FontSpec.Border">
            <summary>
            Gets or sets the <see cref="P:ZedGraph.FontSpec.Border"/> class used to draw the border border
            around this text.
            </summary>
        </member>
        <member name="P:ZedGraph.FontSpec.Fill">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.Fill"/> data for this
            <see cref="T:ZedGraph.FontSpec"/>, which controls how the background
            behind the text is filled.
            </summary>
        </member>
        <member name="T:ZedGraph.FontSpec.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.FontSpec"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.FontSpec.Default.SuperSize">
            <summary>
            The default size fraction of the superscript font, expressed as a fraction
            of the size of the main font.
            </summary>
        </member>
        <member name="F:ZedGraph.FontSpec.Default.SuperShift">
            <summary>
            The default shift fraction of the superscript, expressed as a
            fraction of the superscripted character height.  This is the height
            above the main font (a zero shift means the main font and the superscript
            font have the tops aligned).
            </summary>
        </member>
        <member name="F:ZedGraph.FontSpec.Default.FillColor">
            <summary>
            The default color for filling in the background of the text block
            (<see cref="P:ZedGraph.Fill.Color"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.FontSpec.Default.FillBrush">
            <summary>
            The default custom brush for filling in this <see cref="T:ZedGraph.FontSpec"/>
            (<see cref="P:ZedGraph.Fill.Brush"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.FontSpec.Default.FillType">
            <summary>
            The default fill mode for this <see cref="T:ZedGraph.FontSpec"/>
            (<see cref="P:ZedGraph.Fill.Type"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.FontSpec.Default.StringAlignment">
            <summary>
            Default value for the alignment with which this
            <see cref="T:ZedGraph.FontSpec"/> object is drawn.  This alignment really only
            affects multi-line strings.
            </summary>
            <value>A <see cref="F:ZedGraph.FontSpec.Default.StringAlignment"/> enumeration.</value>
        </member>
        <member name="T:ZedGraph.GraphItemList">
            <summary>
            A collection class containing a list of <see cref="T:ZedGraph.TextItem"/> objects
            to be displayed on the graph.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.10 $ $Date: 2005/02/02 04:52:05 $ </version>
        </member>
        <member name="M:ZedGraph.GraphItemList.#ctor">
            <summary>
            Default constructor for the <see cref="T:ZedGraph.GraphItemList"/> collection class
            </summary>
        </member>
        <member name="M:ZedGraph.GraphItemList.#ctor(ZedGraph.GraphItemList)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.GraphItemList"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.GraphItemList.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.GraphItemList"/></returns>
        </member>
        <member name="M:ZedGraph.GraphItemList.Add(ZedGraph.GraphItem)">
            <summary>
            Add a <see cref="T:ZedGraph.GraphItem"/> object to the <see cref="T:ZedGraph.GraphItemList"/>
            collection at the end of the list.
            </summary>
            <param name="item">A reference to the <see cref="T:ZedGraph.GraphItem"/> object to
            be added</param>
            <seealso cref="M:System.Collections.IList.Add(System.Object)"/>
        </member>
        <member name="M:ZedGraph.GraphItemList.Insert(System.Int32,ZedGraph.GraphItem)">
            <summary>
            Insert a <see cref="T:ZedGraph.GraphItem"/> object into the collection
            at the specified zero-based index location.
            </summary>
            <param name="index">The zero-based index location for insertion.</param>
            <param name="item">The <see cref="T:ZedGraph.GraphItem"/> object that is to be
            inserted.</param>
            <seealso cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/>
        </member>
        <member name="M:ZedGraph.GraphItemList.IndexOfTag(System.String)">
            <summary>
            Return the zero-based position index of the
            <see cref="T:ZedGraph.GraphItem"/> with the specified <see cref="F:ZedGraph.GraphItem.Tag"/>.
            </summary>
            <remarks>In order for this method to work, the <see cref="F:ZedGraph.GraphItem.Tag"/>
            property must be of type <see cref="T:System.String"/>.</remarks>
            <param name="label">The <see cref="T:System.String"/> label that is in the
            <see cref="F:ZedGraph.GraphItem.Tag"/> attribute of the item to be found.
            </param>
            <returns>The zero-based index of the specified <see cref="T:ZedGraph.GraphItem"/>,
            or -1 if the <see cref="T:ZedGraph.GraphItem"/> is not in the list</returns>
            <seealso cref="M:System.Collections.IList.IndexOf(System.Object)"/>
        </member>
        <member name="M:ZedGraph.GraphItemList.Draw(System.Drawing.Graphics,ZedGraph.PaneBase,System.Single,ZedGraph.ZOrder)">
            <summary>
            Render text to the specified <see cref="T:System.Drawing.Graphics"/> device
            by calling the Draw method of each <see cref="T:ZedGraph.GraphItem"/> object in
            the collection.
            </summary>
            <remarks>This method is normally only called by the Draw method
            of the parent <see cref="T:ZedGraph.GraphPane"/> object.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <param name="zOrder">A <see cref="T:ZedGraph.ZOrder"/> enumeration that controls
            the placement of this <see cref="T:ZedGraph.GraphItem"/> relative to other
            graphic objects.  The order of <see cref="T:ZedGraph.GraphItem"/>'s with the
            same <see cref="T:ZedGraph.ZOrder"/> value is control by their order in
            this <see cref="T:ZedGraph.GraphItemList"/>.</param>
        </member>
        <member name="M:ZedGraph.GraphItemList.FindPoint(System.Drawing.PointF,ZedGraph.PaneBase,System.Drawing.Graphics,System.Single,System.Int32@)">
            <summary>
            Determine if a mouse point is within any <see cref="T:ZedGraph.GraphItem"/>, and if so, 
            return the index number of the the <see cref="T:ZedGraph.GraphItem"/>.
            </summary>
            <param name="mousePt">The screen point, in pixel coordinates.</param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <param name="index">The index number of the <see cref="T:ZedGraph.TextItem"/>
             that is under the mouse point.  The <see cref="T:ZedGraph.TextItem"/> object is
            accessible via <see cref="P:ZedGraph.GraphItemList.Item(System.Int32)"></see>.
            </param>
            <returns>true if the mouse point is within a <see cref="T:ZedGraph.GraphItem"/> bounding
            box, false otherwise.</returns>
            <seealso cref="M:ZedGraph.GraphPane.FindNearestObject(System.Drawing.PointF,System.Drawing.Graphics,System.Object@,System.Int32@)"/>
        </member>
        <member name="P:ZedGraph.GraphItemList.Item(System.Int32)">
            <summary>
            Indexer to access the specified <see cref="T:ZedGraph.GraphItem"/> object by its ordinal
            position in the list.
            </summary>
            <param name="index">The ordinal position (zero-based) of the
            <see cref="T:ZedGraph.GraphItem"/> object to be accessed.</param>
            <value>A <see cref="T:ZedGraph.GraphItem"/> object reference.</value>
        </member>
        <member name="P:ZedGraph.GraphItemList.Item(System.String)">
            <summary>
            Indexer to access the specified <see cref="T:ZedGraph.GraphItem"/> object by its <see cref="F:ZedGraph.GraphItem.Tag"/>.
            Note that the <see cref="F:ZedGraph.GraphItem.Tag"/> must be a <see cref="T:System.String"/> type for this method
            to work.
            </summary>
            <param name="tag">The <see cref="T:System.String"/> type tag to search for.</param>
            <value>A <see cref="T:ZedGraph.GraphItem"/> object reference.</value>
        </member>
        <member name="T:ZedGraph.GraphPane">
            <summary>
            Class <see cref="T:ZedGraph.GraphPane"/> encapsulates the graph pane, which is all display elements
            associated with an individual graph.
            </summary>
            <remarks>This class is the outside "wrapper"
            for the ZedGraph classes, and provides the interface to access the attributes
            of the graph.  You can have multiple graphs in the same document or form,
            just instantiate multiple GraphPane's.
            </remarks>
            
            <author> John Champion modified by Jerry Vos </author>
            <version> $Revision: 3.39 $ $Date: 2005/03/11 17:24:38 $ </version>
        </member>
        <member name="T:ZedGraph.PaneBase">
            <summary>
            An abstract base class that defines basic functionality for handling a pane.  This class is the
            parent class for <see cref="T:ZedGraph.MasterPane"/> and <see cref="T:ZedGraph.GraphPane"/>.
            </summary>
            
            <author>John Champion</author>
            <version> $Revision: 3.7 $ $Date: 2005/03/09 06:42:36 $ </version>
        </member>
        <member name="F:ZedGraph.PaneBase.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.paneRect">
            <summary>
            The rectangle that defines the full area into which the pane is rendered.  Units are pixels.
            Use the public property <see cref="P:ZedGraph.PaneBase.PaneRect"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.title">
            <summary>Private field that holds the main title of the pane.  Use the
            public property <see cref="P:ZedGraph.PaneBase.Title"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.legend">
            <summary>Private field instance of the <see cref="T:ZedGraph.Legend"/> class.  Use the
            public property <see cref="P:ZedGraph.PaneBase.Legend"/> to access this class.</summary>
        </member>
        <member name="F:ZedGraph.PaneBase.tag">
            <summary>
            Private field that stores the user-defined tag for this <see cref="T:ZedGraph.PaneBase"/>.  This tag
            can be any user-defined value.  If it is a <see cref="T:System.String"/> type, it can be used as
            a parameter to the <see cref="M:ZedGraph.PaneList.IndexOfTag(System.String)"/> method.  Use the public property
            <see cref="P:ZedGraph.PaneBase.Tag"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.isShowTitle">
            <summary>Private field that determines whether or not the title
            will be drawn.  Use the public property <see cref="P:ZedGraph.PaneBase.IsShowTitle"/> to
            access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.isFontsScaled">
            <summary>Private field that determines whether or not the fonts, tics, gaps, etc.
            will be scaled according to the actual graph size.  true for font and feature scaling
            with graph size, false for fixed font sizes (scaleFactor = 1.0 constant).
            Use the public property <see cref="P:ZedGraph.PaneBase.IsFontsScaled"/> to access this value. </summary>
            <seealso cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>
            <seealso cref="P:ZedGraph.PaneBase.IsPenWidthScaled"/>
        </member>
        <member name="F:ZedGraph.PaneBase.isPenWidthScaled">
            <summary>
            Private field that controls whether or not pen widths are scaled according to the
            size of the graph.  This value is only applicable if <see cref="P:ZedGraph.PaneBase.IsFontsScaled"/>
            is true.  If <see cref="P:ZedGraph.PaneBase.IsFontsScaled"/> is false, then no scaling will be done,
            regardless of the value of <see cref="P:ZedGraph.PaneBase.IsPenWidthScaled"/>.
            </summary>
            <value>true to scale the pen widths according to the size of the graph,
            false otherwise.</value>
            <seealso cref="P:ZedGraph.PaneBase.IsFontsScaled"/>
            <seealso cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>
        </member>
        <member name="F:ZedGraph.PaneBase.fontSpec">
            <summary>
            Private field instance of the <see cref="P:ZedGraph.PaneBase.FontSpec"/> class, which maintains the font attributes
            for the <see cref="P:ZedGraph.PaneBase.Title"/>. Use the public property <see cref="P:ZedGraph.PaneBase.FontSpec"/> to access this class.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.paneFill">
            <summary>
            Private field that stores the <see cref="T:ZedGraph.Fill"/> data for the
            <see cref="P:ZedGraph.PaneBase.PaneRect"/> background.  Use the public property <see cref="P:ZedGraph.PaneBase.PaneFill"/> to
            access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.paneBorder">
            <summary>
            Private field that stores the <see cref="T:ZedGraph.Border"/> data for the
            <see cref="P:ZedGraph.PaneBase.PaneRect"/> border.  Use the public property <see cref="P:ZedGraph.PaneBase.PaneBorder"/> to
            access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.graphItemList">
            <summary>Private field instance of the <see cref="T:ZedGraph.GraphItemList"/> class.  Use the
            public property <see cref="P:ZedGraph.PaneBase.GraphItemList"/> to access this class.</summary>
        </member>
        <member name="F:ZedGraph.PaneBase.baseDimension">
            <summary>Private field that determines the base size of the pane, in inches.
            Fonts, tics, gaps, etc. are scaled according to this base size.
            Use the public property <see cref="P:ZedGraph.PaneBase.BaseDimension"/> to access this value. </summary>
            <seealso cref="F:ZedGraph.PaneBase.isFontsScaled"/>
            <seealso cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>
        </member>
        <member name="F:ZedGraph.PaneBase.marginLeft">
            <summary>
            Private fields that store the size of the margin around the edge of the pane which will be
            kept blank.  Use the public properties <see cref="P:ZedGraph.PaneBase.MarginLeft"/>, <see cref="P:ZedGraph.PaneBase.MarginRight"/>,
            <see cref="P:ZedGraph.PaneBase.MarginTop"/>, <see cref="P:ZedGraph.PaneBase.MarginBottom"/> to access these values.
            </summary>
            <value>Units are points (1/72 inch)</value>
        </member>
        <member name="F:ZedGraph.PaneBase.marginRight">
            <summary>
            Private fields that store the size of the margin around the edge of the pane which will be
            kept blank.  Use the public properties <see cref="P:ZedGraph.PaneBase.MarginLeft"/>, <see cref="P:ZedGraph.PaneBase.MarginRight"/>,
            <see cref="P:ZedGraph.PaneBase.MarginTop"/>, <see cref="P:ZedGraph.PaneBase.MarginBottom"/> to access these values.
            </summary>
            <value>Units are points (1/72 inch)</value>
        </member>
        <member name="F:ZedGraph.PaneBase.marginTop">
            <summary>
            Private fields that store the size of the margin around the edge of the pane which will be
            kept blank.  Use the public properties <see cref="P:ZedGraph.PaneBase.MarginLeft"/>, <see cref="P:ZedGraph.PaneBase.MarginRight"/>,
            <see cref="P:ZedGraph.PaneBase.MarginTop"/>, <see cref="P:ZedGraph.PaneBase.MarginBottom"/> to access these values.
            </summary>
            <value>Units are points (1/72 inch)</value>
        </member>
        <member name="F:ZedGraph.PaneBase.marginBottom">
            <summary>
            Private fields that store the size of the margin around the edge of the pane which will be
            kept blank.  Use the public properties <see cref="P:ZedGraph.PaneBase.MarginLeft"/>, <see cref="P:ZedGraph.PaneBase.MarginRight"/>,
            <see cref="P:ZedGraph.PaneBase.MarginTop"/>, <see cref="P:ZedGraph.PaneBase.MarginBottom"/> to access these values.
            </summary>
            <value>Units are points (1/72 inch)</value>
        </member>
        <member name="M:ZedGraph.PaneBase.#ctor">
            <summary>
            Default constructor for the <see cref="T:ZedGraph.PaneBase"/> class.  Leaves the <see cref="P:ZedGraph.PaneBase.PaneRect"/> empty.
            </summary>
        </member>
        <member name="M:ZedGraph.PaneBase.#ctor(System.String,System.Drawing.RectangleF)">
            <summary>
            Default constructor for the <see cref="T:ZedGraph.PaneBase"/> class.  Specifies the <see cref="P:ZedGraph.PaneBase.Title"/> of
            the <see cref="T:ZedGraph.PaneBase"/>, and the size of the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.
            </summary>
        </member>
        <member name="M:ZedGraph.PaneBase.#ctor(ZedGraph.PaneBase)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.PaneBase"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.PaneBase.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.PaneBase"/></returns>
        </member>
        <member name="M:ZedGraph.PaneBase.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.PaneBase.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.PaneBase.Draw(System.Drawing.Graphics)">
            <summary>
            Do all rendering associated with this <see cref="T:ZedGraph.PaneBase"/> to the specified
            <see cref="T:System.Drawing.Graphics"/> device.  This abstract method is implemented by the child
            classes.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
        </member>
        <member name="M:ZedGraph.PaneBase.CalcClientRect(System.Drawing.Graphics,System.Single)">
            <summary>
            Calculate the client area rectangle based on the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.
            </summary>
            <remarks>The client rectangle is the actual area available for <see cref="T:ZedGraph.GraphPane"/>
            or <see cref="T:ZedGraph.MasterPane"/> items after taking out space for the margins and the title.
            This method does not take out the area required for the <see cref="P:ZedGraph.PaneBase.Legend"/>.
            To do so, you must separately call <see cref="M:ZedGraph.Legend.CalcRect(System.Drawing.Graphics,ZedGraph.PaneBase,System.Single,System.Drawing.RectangleF@)"/>.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="F:ZedGraph.PaneBase.Default.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.
            </param>
            <returns>The calculated axis rect, in pixel coordinates.</returns>
        </member>
        <member name="M:ZedGraph.PaneBase.DrawPaneFrame(System.Drawing.Graphics,System.Single)">
            <summary>
            Draw the border border around the <see cref="P:ZedGraph.PaneBase.PaneRect"/> area.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.
            </param>		
        </member>
        <member name="M:ZedGraph.PaneBase.DrawTitle(System.Drawing.Graphics,System.Single)">
            <summary>
            Draw the <see cref="P:ZedGraph.PaneBase.Title"/> on the graph, centered at the top of the pane.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.
            </param>		
        </member>
        <member name="M:ZedGraph.PaneBase.ReSize(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Change the size of the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.  Override this method to handle resizing the contents
            as required.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="paneRect">The new size for the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.</param>
        </member>
        <member name="M:ZedGraph.PaneBase.CalcScaleFactor">
            <summary>
            Calculate the scaling factor based on the ratio of the current <see cref="P:ZedGraph.PaneBase.PaneRect"/> dimensions and
            the <see cref="F:ZedGraph.PaneBase.Default.BaseDimension"/>.
            </summary>
            <remarks>This scaling factor is used to proportionally scale the
            features of the <see cref="T:ZedGraph.MasterPane"/> so that small graphs don't have huge fonts, and vice versa.
            The scale factor represents a linear multiple to be applied to font sizes, symbol sizes, tic sizes,
            gap sizes, pen widths, etc.  The units of the scale factor are "World Pixels" per "Standard Point".
            If any object size, in points, is multiplied by this scale factor, the result is the size, in pixels,
            that the object should be drawn using the standard GDI+ drawing instructions.  A "Standard Point"
            is a dimension based on points (1/72nd inch) assuming that the <see cref="P:ZedGraph.PaneBase.PaneRect"/> size
            matches the <see cref="F:ZedGraph.PaneBase.Default.BaseDimension"/>.
            Note that "World Pixels" will still be transformed by the GDI+ transform matrices to result
            in "Output Device Pixels", but "World Pixels" are the reference basis for the drawing commands.
            </remarks>
            <returns>
            A <see cref="T:System.Single"/> value representing the scaling factor to use for the rendering calculations.
            </returns>
            <seealso cref="P:ZedGraph.PaneBase.BaseDimension"/>
        </member>
        <member name="M:ZedGraph.PaneBase.ScaledPenWidth(System.Single,System.Single)">
            <summary>
            Calculate the scaled pen width, taking into account the scaleFactor and the
            setting of the <see cref="P:ZedGraph.PaneBase.IsPenWidthScaled"/> property of the pane.
            </summary>
            <param name="penWidth">The pen width, in points (1/72 inch)</param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.
            </param>
            <returns>The scaled pen width, in world pixels</returns>
        </member>
        <member name="M:ZedGraph.PaneBase.ScaledImage(System.Int32,System.Int32,System.Single)">
            <summary>
            Gets an image for the current GraphPane, scaled to the specified size and resolution.
            </summary>
            <param name="width">The scaled width of the bitmap in pixels</param>
            <param name="height">The scaled height of the bitmap in pixels</param>
            <param name="dpi">The resolution of the bitmap, in dots per inch</param>
            <seealso cref="P:ZedGraph.PaneBase.Image"/>
            <seealso cref="T:System.Drawing.Bitmap"/>
        </member>
        <member name="P:ZedGraph.PaneBase.PaneRect">
            <summary>
            The rectangle that defines the full area into which all graphics
            will be rendered.
            </summary>
            <remarks>Note that this rectangle has x, y, width, and height.  Most of the
            GDI+ graphic primitive actually draw one pixel beyond those dimensions.  For
            example, for a rectangle of ( X=0, Y=0, Width=100, Height=100 ), GDI+ would
            draw into pixels 0 through 100, which is actually 101 pixels.  For the
            ZedGraph PaneRect, a Width of 100 pixels means that pixels 0 through 99 are used</remarks>
            <value>Units are pixels.</value>
            <seealso cref="M:ZedGraph.PaneBase.ReSize(System.Drawing.Graphics,System.Drawing.RectangleF)"/>
        </member>
        <member name="P:ZedGraph.PaneBase.Legend">
            <summary>
            Accesses the <see cref="P:ZedGraph.PaneBase.Legend"/> for this <see cref="T:ZedGraph.PaneBase"/>
            </summary>
            <value>A reference to a <see cref="P:ZedGraph.PaneBase.Legend"/> object</value>
        </member>
        <member name="P:ZedGraph.PaneBase.IsShowTitle">
            <summary>
            IsShowTitle is a boolean value that determines whether or not the
            <see cref="P:ZedGraph.PaneBase.Title"/> is displayed on the graph.
            </summary>
            <remarks>If true, the title is displayed.  If false, the title is omitted, and the
            display space that would be occupied by the title is made available for other graphics.
            </remarks>
            <seealso cref="F:ZedGraph.PaneBase.Default.IsShowTitle"/>
        </member>
        <member name="P:ZedGraph.PaneBase.FontSpec">
            <summary>
            Gets a reference to the <see cref="P:ZedGraph.PaneBase.FontSpec"/> class used to render
            the <see cref="P:ZedGraph.PaneBase.Title"/>
            </summary>
            <seealso cref="F:ZedGraph.PaneBase.Default.FontColor"/>
            <seealso cref="F:ZedGraph.PaneBase.Default.FontBold"/>
            <seealso cref="F:ZedGraph.PaneBase.Default.FontItalic"/>
            <seealso cref="F:ZedGraph.PaneBase.Default.FontUnderline"/>
            <seealso cref="F:ZedGraph.PaneBase.Default.FontFamily"/>
            <seealso cref="F:ZedGraph.PaneBase.Default.FontSize"/>
        </member>
        <member name="P:ZedGraph.PaneBase.Title">
            <summary>
            Title is a string representing the title text.  This text can be multiple lines,
            separated by newline characters ('\n').
            </summary>
            <seealso cref="P:ZedGraph.PaneBase.FontSpec"/>
        </member>
        <member name="P:ZedGraph.PaneBase.Tag">
            <summary>
            Gets or sets the user-defined tag for this <see cref="T:ZedGraph.PaneBase"/>.  This tag
            can be any user-defined value.  If it is a <see cref="T:System.String"/> type, it can be used as
            a parameter to the <see cref="M:ZedGraph.PaneList.IndexOfTag(System.String)"/> method.
            </summary>
            <remarks>
            Note that, if you are going to Serialize ZedGraph data, then any type
            that you store in <see cref="P:ZedGraph.PaneBase.Tag"/> must be a serializable type (or
            it will cause an exception).
            </remarks>
        </member>
        <member name="P:ZedGraph.PaneBase.PaneBorder">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.Border"/> class for drawing the border
            border around the <see cref="P:ZedGraph.PaneBase.PaneRect"/>
            </summary>
            <seealso cref="F:ZedGraph.PaneBase.Default.BorderColor"/>
            <seealso cref="F:ZedGraph.PaneBase.Default.BorderPenWidth"/>
        </member>
        <member name="P:ZedGraph.PaneBase.PaneFill">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.Fill"/> data for the
            filling the background of the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.PaneBase.MarginLeft">
            <summary>
            Gets or sets a float value that determines the margin area between the left edge of the
            <see cref="P:ZedGraph.PaneBase.PaneRect"/> rectangle and the features of the graph.
            </summary>
            <value>This value is in units of points (1/72 inch), and is scaled
            linearly with the graph size.</value>
            <seealso cref="F:ZedGraph.PaneBase.Default.MarginLeft"/>
            <seealso cref="P:ZedGraph.PaneBase.IsFontsScaled"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginRight"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginTop"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginBottom"/>
        </member>
        <member name="P:ZedGraph.PaneBase.MarginRight">
            <summary>
            Gets or sets a float value that determines the margin area between the right edge of the
            <see cref="P:ZedGraph.PaneBase.PaneRect"/> rectangle and the features of the graph.
            </summary>
            <value>This value is in units of points (1/72 inch), and is scaled
            linearly with the graph size.</value>
            <seealso cref="F:ZedGraph.PaneBase.Default.MarginRight"/>
            <seealso cref="P:ZedGraph.PaneBase.IsFontsScaled"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginLeft"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginTop"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginBottom"/>
        </member>
        <member name="P:ZedGraph.PaneBase.MarginTop">
            <summary>
            Gets or sets a float value that determines the margin area between the top edge of the
            <see cref="P:ZedGraph.PaneBase.PaneRect"/> rectangle and the features of the graph.
            </summary>
            <value>This value is in units of points (1/72 inch), and is scaled
            linearly with the graph size.</value>
            <seealso cref="F:ZedGraph.PaneBase.Default.MarginTop"/>
            <seealso cref="P:ZedGraph.PaneBase.IsFontsScaled"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginLeft"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginRight"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginBottom"/>
        </member>
        <member name="P:ZedGraph.PaneBase.MarginBottom">
            <summary>
            Gets or sets a float value that determines the margin area between the bottom edge of the
            <see cref="P:ZedGraph.PaneBase.PaneRect"/> rectangle and the features of the graph.
            </summary>
            <value>This value is in units of points (1/72 inch), and is scaled
            linearly with the graph size.</value>
            <seealso cref="F:ZedGraph.PaneBase.Default.MarginBottom"/>
            <seealso cref="P:ZedGraph.PaneBase.IsFontsScaled"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginLeft"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginRight"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginTop"/>
        </member>
        <member name="P:ZedGraph.PaneBase.MarginAll">
            <summary>
            Concurrently sets all outer margin values to a single value.
            </summary>
            <value>This value is in units of points (1/72 inch), and is scaled
            linearly with the graph size.</value>
            <seealso cref="P:ZedGraph.PaneBase.IsFontsScaled"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginBottom"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginLeft"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginRight"/>
            <seealso cref="P:ZedGraph.PaneBase.MarginTop"/>
        </member>
        <member name="P:ZedGraph.PaneBase.GraphItemList">
            <summary>
            Gets or sets the list of <see cref="T:ZedGraph.GraphItem"/> items for this <see cref="T:ZedGraph.GraphPane"/>
            </summary>
            <value>A reference to a <see cref="P:ZedGraph.PaneBase.GraphItemList"/> collection object</value>
        </member>
        <member name="P:ZedGraph.PaneBase.BaseDimension">
            <summary>
            BaseDimension is a double precision value that sets "normal" pane size on
            which all the settings are based.  The BaseDimension is in inches.  For
            example, if the BaseDimension is 8.0 inches and the
            <see cref="P:ZedGraph.PaneBase.Title"/> size is 14 points.  Then the pane title font
            will be 14 points high when the <see cref="P:ZedGraph.PaneBase.PaneRect"/> is approximately 8.0
            inches wide.  If the PaneRect is 4.0 inches wide, the pane title font will be
            7 points high.  Most features of the graph are scaled in this manner.
            </summary>
            <value>The base dimension reference for the <see cref="P:ZedGraph.PaneBase.PaneRect"/>, in inches</value>
            <seealso cref="F:ZedGraph.PaneBase.Default.BaseDimension"/>
            <seealso cref="P:ZedGraph.PaneBase.IsFontsScaled"/>
            <seealso cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>
        </member>
        <member name="P:ZedGraph.PaneBase.IsFontsScaled">
            <summary>
            Determines if the font sizes, tic sizes, gap sizes, etc. will be scaled according to
            the size of the <see cref="P:ZedGraph.PaneBase.PaneRect"/> and the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  If this
            value is set to false, then the font sizes and tic sizes will always be exactly as
            specified, without any scaling.
            </summary>
            <value>True to have the fonts and tics scaled, false to have them constant</value>
            <seealso cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>
        </member>
        <member name="P:ZedGraph.PaneBase.IsPenWidthScaled">
            <summary>
            Gets or sets the property that controls whether or not pen widths are scaled for this
            <see cref="T:ZedGraph.PaneBase"/>.
            </summary>
            <remarks>This value is only applicable if <see cref="P:ZedGraph.PaneBase.IsFontsScaled"/>
            is true.  If <see cref="P:ZedGraph.PaneBase.IsFontsScaled"/> is false, then no scaling will be done,
            regardless of the value of <see cref="P:ZedGraph.PaneBase.IsPenWidthScaled"/>.  Note that scaling the pen
            widths can cause "artifacts" to appear at typical screen resolutions.  This occurs
            because of roundoff differences; in some cases the pen width may round to 1 pixel wide
            and in another it may round to 2 pixels wide.  The result is typically undesirable.
            Therefore, this option defaults to false.  This option is primarily useful for high
            resolution output, such as printer output or high resolution bitmaps (from
            <see cref="M:ZedGraph.PaneBase.ScaledImage(System.Int32,System.Int32,System.Single)"/>) where it is desirable to have the pen width
            be consistent with the screen image.
            </remarks>
            <value>true to scale the pen widths according to the size of the graph,
            false otherwise.</value>
            <seealso cref="P:ZedGraph.PaneBase.IsFontsScaled"/>
            <seealso cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>
        </member>
        <member name="P:ZedGraph.PaneBase.Image">
            <summary>
            Build a <see cref="T:System.Drawing.Bitmap"/> object containing the graphical rendering of
            all the <see cref="T:ZedGraph.GraphPane"/> objects in this list.
            </summary>
            <value>A <see cref="T:System.Drawing.Bitmap"/> object rendered with the current graph.</value>
        </member>
        <member name="T:ZedGraph.PaneBase.Default">
            <summary>
            A simple struct that defines the default property values for the <see cref="T:ZedGraph.PaneBase"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.IsShowTitle">
            <summary>
            The default display mode for the title at the top of the pane
            (<see cref="P:ZedGraph.PaneBase.IsShowTitle"/> property).  true to
            display a title, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.FontFamily">
            <summary>
            The default font family for the title
            (<see cref="P:ZedGraph.PaneBase.Title"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.FontSize">
            <summary>
            The default font size (points) for the
            <see cref="P:ZedGraph.PaneBase.Title"/> (<see cref="P:ZedGraph.FontSpec.Size"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.FontColor">
            <summary>
            The default font color for the
            <see cref="P:ZedGraph.PaneBase.Title"/>
            (<see cref="P:ZedGraph.FontSpec.FontColor"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.FontBold">
            <summary>
            The default font bold mode for the
            <see cref="P:ZedGraph.PaneBase.Title"/>
            (<see cref="P:ZedGraph.FontSpec.IsBold"/> property). true
            for a bold typeface, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.FontItalic">
            <summary>
            The default font italic mode for the
            <see cref="P:ZedGraph.PaneBase.Title"/>
            (<see cref="P:ZedGraph.FontSpec.IsItalic"/> property). true
            for an italic typeface, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.FontUnderline">
            <summary>
            The default font underline mode for the
            <see cref="P:ZedGraph.PaneBase.Title"/>
            (<see cref="P:ZedGraph.FontSpec.IsUnderline"/> property). true
            for an underlined typeface, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.IsBorderVisible">
            <summary>
            The default border mode for the <see cref="T:ZedGraph.PaneBase"/>.
            (<see cref="P:ZedGraph.PaneBase.PaneBorder"/> property). true
            to draw a border around the <see cref="P:ZedGraph.PaneBase.PaneRect"/>,
            false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.BorderColor">
            <summary>
            The default color for the <see cref="T:ZedGraph.PaneBase"/> border.
            (<see cref="P:ZedGraph.PaneBase.PaneBorder"/> property). 
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.FillColor">
            <summary>
            The default color for the <see cref="P:ZedGraph.PaneBase.PaneRect"/> background.
            (<see cref="P:ZedGraph.PaneBase.PaneFill"/> property). 
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.BorderPenWidth">
            <summary>
            The default pen width for the <see cref="T:ZedGraph.PaneBase"/> border.
            (<see cref="P:ZedGraph.PaneBase.PaneBorder"/> property).  Units are in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.BaseDimension">
            <summary>
            The default dimension of the <see cref="P:ZedGraph.PaneBase.PaneRect"/>, which
            defines a normal sized plot.  This dimension is used to scale the
            fonts, symbols, etc. according to the actual size of the
            <see cref="P:ZedGraph.PaneBase.PaneRect"/>.
            </summary>
            <seealso cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.MarginLeft">
            <summary>
            The default value for the <see cref="P:ZedGraph.PaneBase.MarginLeft"/> property, which is
            the size of the space on the left side of the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.
            </summary>
            <value>Units are points (1/72 inch)</value>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.MarginRight">
            <summary>
            The default value for the <see cref="P:ZedGraph.PaneBase.MarginRight"/> property, which is
            the size of the space on the right side of the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.
            </summary>
            <value>Units are points (1/72 inch)</value>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.MarginTop">
            <summary>
            The default value for the <see cref="P:ZedGraph.PaneBase.MarginTop"/> property, which is
            the size of the space on the top side of the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.
            </summary>
            <value>Units are points (1/72 inch)</value>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.MarginBottom">
            <summary>
            The default value for the <see cref="P:ZedGraph.PaneBase.MarginBottom"/> property, which is
            the size of the space on the bottom side of the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.
            </summary>
            <value>Units are points (1/72 inch)</value>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.IsPenWidthScaled">
            <summary>
            The default setting for the <see cref="P:ZedGraph.PaneBase.IsPenWidthScaled"/> option.
            true to have all pen widths scaled according to <see cref="P:ZedGraph.PaneBase.BaseDimension"/>,
            false otherwise.
            </summary>
            <seealso cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>
        </member>
        <member name="F:ZedGraph.PaneBase.Default.IsFontsScaled">
            <summary>
            The default setting for the <see cref="P:ZedGraph.PaneBase.IsFontsScaled"/> option.
            true to have all fonts scaled according to <see cref="P:ZedGraph.PaneBase.BaseDimension"/>,
            false otherwise.
            </summary>
            <seealso cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>
        </member>
        <member name="F:ZedGraph.GraphPane.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.xAxis">
            <summary>Private field instance of the <see cref="T:ZedGraph.XAxis"/> class.  Use the
            public property <see cref="P:ZedGraph.GraphPane.XAxis"/> to access this class.</summary>
        </member>
        <member name="F:ZedGraph.GraphPane.yAxis">
            <summary>Private field instance of the <see cref="T:ZedGraph.YAxis"/> class.  Use the
            public property <see cref="P:ZedGraph.GraphPane.YAxis"/> to access this class.</summary>
        </member>
        <member name="F:ZedGraph.GraphPane.y2Axis">
            <summary>Private field instance of the <see cref="T:ZedGraph.Y2Axis"/> class.  Use the
            public property <see cref="P:ZedGraph.GraphPane.Y2Axis"/> to access this class.</summary>
        </member>
        <member name="F:ZedGraph.GraphPane.curveList">
            <summary>Private field instance of the <see cref="T:ZedGraph.CurveList"/> class.  Use the
            public property <see cref="P:ZedGraph.GraphPane.CurveList"/> to access this class.</summary>
        </member>
        <member name="F:ZedGraph.GraphPane.zoomStack">
            <summary>
            private value that contains a <see cref="T:ZedGraph.ZoomStateStack"/>, which stores prior
            <see cref="T:ZedGraph.ZoomState"/> objects containing scale range information.  This enables
            zooming and panning functionality for the <see cref="T:ZedGraph.ZedGraphControl"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.isAxisRectAuto">
            <summary>Private field that determines if the <see cref="P:ZedGraph.GraphPane.AxisRect"/> will be
            sized automatically.  Use the public property <see cref="P:ZedGraph.GraphPane.IsAxisRectAuto"/> to access
            this value. </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.axisFill">
            <summary>
            Private field that stores the <see cref="T:ZedGraph.Fill"/> data for this
            <see cref="P:ZedGraph.GraphPane.AxisRect"/>.  Use the public property <see cref="P:ZedGraph.GraphPane.AxisFill"/> to
            access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.axisBorder">
            <summary>
            Private field that stores the <see cref="T:ZedGraph.Border"/> data for this
            <see cref="P:ZedGraph.GraphPane.AxisRect"/>.  Use the public property <see cref="P:ZedGraph.GraphPane.AxisBorder"/> to
            access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.isIgnoreInitial">
            <summary>Private field that determines whether or not initial zero values will
            be included or excluded when determining the Y or Y2 axis scale range.
            Use the public property <see cref="P:ZedGraph.GraphPane.IsIgnoreInitial"/> to access
            this value. </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.isIgnoreMissing">
            <summary>Private field that determines whether or not initial
            <see cref="F:ZedGraph.PointPair.Missing"/> values will cause the line segments of
            a curve to be discontinuous.  If this field is true, then the curves
            will be plotted as continuous lines as if the Missing values did not
            exist.
            Use the public property <see cref="P:ZedGraph.GraphPane.IsIgnoreMissing"/> to access
            this value. </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.isBoundedRanges">
            <summary> private field that determines if the auto-scaled axis ranges will subset the
            data points based on any manually set scale range values.  Use the public property
            <see cref="P:ZedGraph.GraphPane.IsBoundedRanges"/> to access this value.</summary>
            <remarks>The bounds provide a means to subset the data.  For example, if all the axes are set to
            autoscale, then the full range of data are used.  But, if the XAxis.Min and XAxis.Max values
            are manually set, then the Y data range will reflect the Y values within the bounds of
            XAxis.Min and XAxis.Max.</remarks>
        </member>
        <member name="F:ZedGraph.GraphPane.minClusterGap">
            <summary>Private field that determines the size of the gap between bar clusters
            for bar charts.  This gap is expressed as a fraction of the bar size (1.0 means
            leave a 1-barwidth gap between clusters).
            Use the public property <see cref="P:ZedGraph.GraphPane.MinClusterGap"/> to access this value. </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.minBarGap">
            <summary>Private field that determines the size of the gap between individual bars
            within a bar cluster for bar charts.  This gap is expressed as a fraction of the
            bar size (1.0 means leave a 1-barwidth gap between each bar).
            Use the public property <see cref="P:ZedGraph.GraphPane.MinBarGap"/> to access this value. </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.barBase">
            <summary>Private field that determines the base axis from which <see cref="T:ZedGraph.Bar"/>
            graphs will be displayed.  The base axis is the axis from which the bars grow with
            increasing value. The value is of the enumeration type <see cref="T:ZedGraph.BarBase"/>.
            To access this value, use the public property <see cref="P:ZedGraph.GraphPane.BarBase"/>.
            </summary>
            <seealso cref="F:ZedGraph.GraphPane.Default.BarBase"/>
        </member>
        <member name="F:ZedGraph.GraphPane.barType">
            <summary>Private field that determines how the <see cref="T:ZedGraph.BarItem"/>
            graphs will be displayed. See the <see cref="T:ZedGraph.BarType"/> enum
            for the individual types available.
            To access this value, use the public property <see cref="P:ZedGraph.GraphPane.BarType"/>.
            </summary>
            <seealso cref="F:ZedGraph.GraphPane.Default.BarType"/>
        </member>
        <member name="F:ZedGraph.GraphPane.clusterScaleWidth">
            <summary>Private field that determines the width of a bar cluster (for bar charts)
            in user scale units.  Normally, this value is 1.0 because bar charts are typically
            <see cref="F:ZedGraph.AxisType.Ordinal"/> or <see cref="F:ZedGraph.AxisType.Text"/>, and the bars are
            defined at ordinal values (1.0 scale units apart).  For <see cref="F:ZedGraph.AxisType.Linear"/>
            or other scale types, you can use this value to scale the bars to an arbitrary
            user scale. Use the public property <see cref="P:ZedGraph.GraphPane.ClusterScaleWidth"/> to access this
            value. </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.lineType">
            <summary>Private field that determines how the <see cref="T:ZedGraph.LineItem"/>
            graphs will be displayed. See the <see cref="T:ZedGraph.LineType"/> enum
            for the individual types available.
            To access this value, use the public property <see cref="P:ZedGraph.GraphPane.LineType"/>.
            </summary>
            <seealso cref="F:ZedGraph.GraphPane.Default.LineType"/>
        </member>
        <member name="F:ZedGraph.GraphPane.axisRect">
            <summary>
            The rectangle that contains the area bounded by the axes, in
            pixel units
            </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.pieRect">
            <summary>
            The largest square contained in <see cref="F:ZedGraph.GraphPane.axisRect"/>, in
            pixel units, used for drawing <see cref="T:ZedGraph.PieItem"/> object.
            Use the public property <see cref="P:ZedGraph.GraphPane.PieRect"/> to access this value.
            </summary>
        </member>
        <member name="M:ZedGraph.GraphPane.#ctor">
            <summary>
            Default Constructor.  Sets the <see cref="P:ZedGraph.PaneBase.PaneRect"/> to (0, 0, 500, 375), and
            sets the <see cref="P:ZedGraph.PaneBase.Title"/> and <see cref="P:ZedGraph.Axis.Title"/> values to empty
            strings.
            </summary>
        </member>
        <member name="M:ZedGraph.GraphPane.#ctor(System.Drawing.RectangleF,System.String,System.String,System.String)">
            <summary>
            Constructor for the <see cref="T:ZedGraph.GraphPane"/> object.  This routine will
            initialize all member variables and classes, setting appropriate default
            values as defined in the <see cref="T:ZedGraph.GraphPane.Default"/> class.
            </summary>
            <param name="paneRect"> A rectangular screen area where the graph is to be displayed.
            This area can be any size, and can be resize at any time using the
            <see cref="P:ZedGraph.PaneBase.PaneRect"/> property.
            </param>
            <param name="paneTitle">The <see cref="P:ZedGraph.PaneBase.Title"/> for this <see cref="T:ZedGraph.GraphPane"/></param>
            <param name="xTitle">The <see cref="P:ZedGraph.Axis.Title"/> for the <see cref="P:ZedGraph.GraphPane.XAxis"/></param>
            <param name="yTitle">The <see cref="P:ZedGraph.Axis.Title"/> for the <see cref="P:ZedGraph.GraphPane.YAxis"/></param>
        </member>
        <member name="M:ZedGraph.GraphPane.#ctor(ZedGraph.GraphPane)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The GraphPane object from which to copy</param>
        </member>
        <member name="M:ZedGraph.GraphPane.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the GraphPane</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.GraphPane.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.GraphPane.AxisChange(System.Drawing.Graphics)">
            <summary>
            AxisChange causes the axes scale ranges to be recalculated based on the current data range.
            </summary>
            <remarks>
            There is no obligation to call AxisChange() for manually scaled axes.  AxisChange() is only
            intended to handle auto scaling operations.  Call this function anytime you change, add, or
            remove curve data to insure that the scale range of the axes are appropriate for the data range.
            This method calculates
            a scale minimum, maximum, and step size for each axis based on the current curve data.
            Only the axis attributes (min, max, step) that are set to auto-range (<see cref="P:ZedGraph.Axis.MinAuto"/>,
            <see cref="P:ZedGraph.Axis.MaxAuto"/>, <see cref="P:ZedGraph.Axis.StepAuto"/>) will be modified.  You must call
            <see cref="M:System.Windows.Forms.Control.Invalidate"/> after calling AxisChange to make sure the display gets updated.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
        </member>
        <member name="M:ZedGraph.GraphPane.Draw(System.Drawing.Graphics)">
            <summary>
            Draw all elements in the <see cref="T:ZedGraph.GraphPane"/> to the specified graphics device.
            </summary>
            <remarks>This method
            should be part of the Paint() update process.  Calling this routine will redraw all
            features of the graph.  No preparation is required other than an instantiated
            <see cref="T:ZedGraph.GraphPane"/> object.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
        </member>
        <member name="M:ZedGraph.GraphPane.CalcAxisRect(System.Drawing.Graphics)">
            <summary>
            Calculate the <see cref="P:ZedGraph.GraphPane.AxisRect"/> based on the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.
            </summary>
            <remarks>The axisRect
            is the plot area bounded by the axes, and the paneRect is the total area as
            specified by the client application.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <returns>The calculated axis rect, in pixel coordinates.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.CalcAxisRect(System.Drawing.Graphics,System.Single)">
            <summary>
            Calculate the <see cref="P:ZedGraph.GraphPane.AxisRect"/> based on the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.
            </summary>
            <remarks>The axisRect
            is the plot area bounded by the axes, and the paneRect is the total area as
            specified by the client application.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.
            </param>
            <returns>The calculated axis rect, in pixel coordinates.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.SetMinSpaceBuffer(System.Drawing.Graphics,System.Single,System.Boolean)">
            <summary>
            This method will set the <see cref="P:ZedGraph.Axis.MinSpace"/> property for all three axes;
            <see cref="P:ZedGraph.GraphPane.XAxis"/>, <see cref="P:ZedGraph.GraphPane.YAxis"/>, and <see cref="P:ZedGraph.GraphPane.Y2Axis"/>.
            </summary>
            <remarks>The <see cref="P:ZedGraph.Axis.MinSpace"/>
            is calculated using the currently required space multiplied by a fraction
            (<paramref>bufferFraction</paramref>).
            The currently required space is calculated using <see cref="M:ZedGraph.Axis.CalcSpace(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)"/>, and is
            based on current data ranges, font sizes, etc.  The "space" is actually the amount of space
            required to fit the tic marks, scale labels, and axis title.
            The calculation is done by calling the <see cref="M:ZedGraph.Axis.SetMinSpaceBuffer(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single,System.Boolean)"/> method for
            each <see cref="T:ZedGraph.Axis"/>.
            </remarks>
            <param name="g">A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.</param>
            <param name="bufferFraction">The amount of space to allocate for the axis, expressed
            as a fraction of the currently required space.  For example, a value of 1.2 would
            allow for 20% extra above the currently required space.</param>
            <param name="isGrowOnly">If true, then this method will only modify the <see cref="P:ZedGraph.Axis.MinSpace"/>
            property if the calculated result is more than the current value.</param>
        </member>
        <member name="M:ZedGraph.GraphPane.AddCurve(System.String,System.Double[],System.Double[],System.Drawing.Color)">
            <summary>
            Add a curve (<see cref="T:ZedGraph.CurveItem"/> object) to the plot with
            the given data points (double arrays) and properties.
            This is simplified way to add curves without knowledge of the
            <see cref="P:ZedGraph.GraphPane.CurveList"/> class.  An alternative is to use
            the <see cref="M:ZedGraph.CurveList.Add(ZedGraph.CurveItem)"/> method.
            </summary>
            <param name="label">The text label (string) for the curve that will be
            used as a <see cref="T:ZedGraph.Legend"/> entry.</param>
            <param name="x">An array of double precision X values (the
            independent values) that define the curve.</param>
            <param name="y">An array of double precision Y values (the
            dependent values) that define the curve.</param>
            <param name="color">The color to used for the curve line,
            symbols, etc.</param>
            <returns>A <see cref="T:ZedGraph.CurveItem"/> class for the newly created curve.
            This can then be used to access all of the curve properties that
            are not defined as arguments to the
            <see cref="M:ZedGraph.GraphPane.AddCurve(System.String,System.Double[],System.Double[],System.Drawing.Color)"/> method.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.AddCurve(System.String,ZedGraph.PointPairList,System.Drawing.Color)">
            <summary>
            Add a curve (<see cref="T:ZedGraph.CurveItem"/> object) to the plot with
            the given data points (<see cref="T:ZedGraph.PointPairList"/>) and properties.
            This is simplified way to add curves without knowledge of the
            <see cref="P:ZedGraph.GraphPane.CurveList"/> class.  An alternative is to use
            the <see cref="M:ZedGraph.CurveList.Add(ZedGraph.CurveItem)"/> method.
            </summary>
            <param name="label">The text label (string) for the curve that will be
            used as a <see cref="T:ZedGraph.Legend"/> entry.</param>
            <param name="points">A <see cref="T:ZedGraph.PointPairList"/> of double precision value pairs that define
            the X and Y values for this curve</param>
            <param name="color">The color to used for the curve line,
            symbols, etc.</param>
            <returns>A <see cref="T:ZedGraph.CurveItem"/> class for the newly created curve.
            This can then be used to access all of the curve properties that
            are not defined as arguments to the
            <see cref="M:ZedGraph.GraphPane.AddCurve(System.String,ZedGraph.PointPairList,System.Drawing.Color)"/> method.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.AddCurve(System.String,System.Double[],System.Double[],System.Drawing.Color,ZedGraph.SymbolType)">
            <summary>
            Add a curve (<see cref="T:ZedGraph.CurveItem"/> object) to the plot with
            the given data points (double arrays) and properties.
            This is simplified way to add curves without knowledge of the
            <see cref="P:ZedGraph.GraphPane.CurveList"/> class.  An alternative is to use
            the <see cref="M:ZedGraph.CurveList.Add(ZedGraph.CurveItem)"/> method.
            </summary>
            <param name="label">The text label (string) for the curve that will be
            used as a <see cref="T:ZedGraph.Legend"/> entry.</param>
            <param name="x">An array of double precision X values (the
            independent values) that define the curve.</param>
            <param name="y">An array of double precision Y values (the
            dependent values) that define the curve.</param>
            <param name="color">The color to used for the curve line,
            symbols, etc.</param>
            <param name="symbolType">A symbol type (<see cref="T:ZedGraph.SymbolType"/>)
            that will be used for this curve.</param>
            <returns>A <see cref="T:ZedGraph.CurveItem"/> class for the newly created curve.
            This can then be used to access all of the curve properties that
            are not defined as arguments to the
            <see cref="M:ZedGraph.GraphPane.AddCurve(System.String,System.Double[],System.Double[],System.Drawing.Color,ZedGraph.SymbolType)"/> method.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.AddCurve(System.String,ZedGraph.PointPairList,System.Drawing.Color,ZedGraph.SymbolType)">
            <summary>
            Add a curve (<see cref="T:ZedGraph.CurveItem"/> object) to the plot with
            the given data points (<see cref="T:ZedGraph.PointPairList"/>) and properties.
            This is simplified way to add curves without knowledge of the
            <see cref="P:ZedGraph.GraphPane.CurveList"/> class.  An alternative is to use
            the <see cref="M:ZedGraph.CurveList.Add(ZedGraph.CurveItem)"/> method.
            </summary>
            <param name="label">The text label (string) for the curve that will be
            used as a <see cref="T:ZedGraph.Legend"/> entry.</param>
            <param name="points">A <see cref="T:ZedGraph.PointPairList"/> of double precision value pairs that define
            the X and Y values for this curve</param>
            <param name="color">The color to used for the curve line,
            symbols, etc.</param>
            <param name="symbolType">A symbol type (<see cref="T:ZedGraph.SymbolType"/>)
            that will be used for this curve.</param>
            <returns>A <see cref="T:ZedGraph.CurveItem"/> class for the newly created curve.
            This can then be used to access all of the curve properties that
            are not defined as arguments to the
            <see cref="M:ZedGraph.GraphPane.AddCurve(System.String,ZedGraph.PointPairList,System.Drawing.Color,ZedGraph.SymbolType)"/> method.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.AddErrorBar(System.String,System.Double[],System.Double[],System.Double[],System.Drawing.Color)">
            <summary>
            Add an error bar set (<see cref="T:ZedGraph.ErrorBarItem"/> object) to the plot with
            the given data points (<see cref="T:ZedGraph.PointPairList"/>) and properties.
            This is simplified way to add curves without knowledge of the
            <see cref="P:ZedGraph.GraphPane.CurveList"/> class.  An alternative is to use
            the <see cref="M:ZedGraph.CurveList.Add(ZedGraph.CurveItem)"/> method.
            </summary>
            <param name="label">The text label (string) for the curve that will be
            used as a <see cref="T:ZedGraph.Legend"/> entry.</param>
            <param name="x">An array of double precision X values (the
            independent values) that define the curve.</param>
            <param name="y">An array of double precision Y values (the
            dependent values) that define the curve.</param>
            <param name="baseValue">An array of double precision values that define the
            base value (the bottom) of the bars for this curve.
            </param>
            <param name="color">The color to used for the curve line,
            symbols, etc.</param>
            <returns>An <see cref="T:ZedGraph.ErrorBarItem"/> class for the newly created curve.
            This can then be used to access all of the curve properties that
            are not defined as arguments to the
            <see cref="M:ZedGraph.GraphPane.AddErrorBar(System.String,ZedGraph.PointPairList,System.Drawing.Color)"/> method.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.AddErrorBar(System.String,ZedGraph.PointPairList,System.Drawing.Color)">
            <summary>
            Add an error bar set (<see cref="T:ZedGraph.ErrorBarItem"/> object) to the plot with
            the given data points (<see cref="T:ZedGraph.PointPairList"/>) and properties.
            This is simplified way to add curves without knowledge of the
            <see cref="P:ZedGraph.GraphPane.CurveList"/> class.  An alternative is to use
            the <see cref="M:ZedGraph.CurveList.Add(ZedGraph.CurveItem)"/> method.
            </summary>
            <param name="label">The text label (string) for the curve that will be
            used as a <see cref="T:ZedGraph.Legend"/> entry.</param>
            <param name="points">A <see cref="T:ZedGraph.PointPairList"/> of double precision value pairs that define
            the X and Y values for this curve</param>
            <param name="color">The color to used for the curve line,
            symbols, etc.</param>
            <returns>An <see cref="T:ZedGraph.ErrorBarItem"/> class for the newly created curve.
            This can then be used to access all of the curve properties that
            are not defined as arguments to the
            <see cref="M:ZedGraph.GraphPane.AddErrorBar(System.String,ZedGraph.PointPairList,System.Drawing.Color)"/> method.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.AddBar(System.String,ZedGraph.PointPairList,System.Drawing.Color)">
            <summary>
            Add a bar type curve (<see cref="T:ZedGraph.CurveItem"/> object) to the plot with
            the given data points (<see cref="T:ZedGraph.PointPairList"/>) and properties.
            This is simplified way to add curves without knowledge of the
            <see cref="P:ZedGraph.GraphPane.CurveList"/> class.  An alternative is to use
            the <see cref="M:ZedGraph.CurveList.Add(ZedGraph.CurveItem)"/> method.
            </summary>
            <param name="label">The text label (string) for the curve that will be
            used as a <see cref="T:ZedGraph.Legend"/> entry.</param>
            <param name="points">A <see cref="T:ZedGraph.PointPairList"/> of double precision value pairs that define
            the X and Y values for this curve</param>
            <param name="color">The color to used to fill the bars</param>
            <returns>A <see cref="T:ZedGraph.CurveItem"/> class for the newly created bar curve.
            This can then be used to access all of the curve properties that
            are not defined as arguments to the
            <see cref="M:ZedGraph.GraphPane.AddBar(System.String,ZedGraph.PointPairList,System.Drawing.Color)"/> method.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.AddBar(System.String,System.Double[],System.Double[],System.Drawing.Color)">
            <summary>
            Add a bar type curve (<see cref="T:ZedGraph.CurveItem"/> object) to the plot with
            the given data points (double arrays) and properties.
            This is simplified way to add curves without knowledge of the
            <see cref="P:ZedGraph.GraphPane.CurveList"/> class.  An alternative is to use
            the <see cref="M:ZedGraph.CurveList.Add(ZedGraph.CurveItem)"/> method.
            </summary>
            <param name="label">The text label (string) for the curve that will be
            used as a <see cref="T:ZedGraph.Legend"/> entry.</param>
            <param name="x">An array of double precision X values (the
            independent values) that define the curve.</param>
            <param name="y">An array of double precision Y values (the
            dependent values) that define the curve.</param>
            <param name="color">The color to used for the bars</param>
            <returns>A <see cref="T:ZedGraph.CurveItem"/> class for the newly created bar curve.
            This can then be used to access all of the curve properties that
            are not defined as arguments to the
            <see cref="M:ZedGraph.GraphPane.AddBar(System.String,System.Double[],System.Double[],System.Drawing.Color)"/> method.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.AddHiLowBar(System.String,System.Double[],System.Double[],System.Double[],System.Drawing.Color)">
            <summary>
            Add a "High-Low" bar type curve (<see cref="T:ZedGraph.HiLowBarItem"/> object) to the plot with
            the given data points (double arrays) and properties.
            This is simplified way to add curves without knowledge of the
            <see cref="P:ZedGraph.GraphPane.CurveList"/> class.  An alternative is to use
            the <see cref="M:ZedGraph.CurveList.Add(ZedGraph.CurveItem)"/> method.
            </summary>
            <param name="label">The text label (string) for the curve that will be
            used as a <see cref="T:ZedGraph.Legend"/> entry.</param>
            <param name="x">An array of double precision X values (the
            independent values) that define the curve.</param>
            <param name="y">An array of double precision Y values (the
            dependent values) that define the curve.</param>
            <param name="baseVal">An array of double precision values that define the
            base value (the bottom) of the bars for this curve.
            </param>
            <param name="color">The color to used for the bars</param>
            <returns>A <see cref="T:ZedGraph.HiLowBarItem"/> class for the newly created bar curve.
            This can then be used to access all of the curve properties that
            are not defined as arguments to the
            <see cref="M:ZedGraph.GraphPane.AddHiLowBar(System.String,System.Double[],System.Double[],System.Double[],System.Drawing.Color)"/> method.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.AddHiLowBar(System.String,ZedGraph.PointPairList,System.Drawing.Color)">
            <summary>
            Add a hi-low bar type curve (<see cref="T:ZedGraph.CurveItem"/> object) to the plot with
            the given data points (<see cref="T:ZedGraph.PointPairList"/>) and properties.
            This is simplified way to add curves without knowledge of the
            <see cref="P:ZedGraph.GraphPane.CurveList"/> class.  An alternative is to use
            the <see cref="M:ZedGraph.CurveList.Add(ZedGraph.CurveItem)"/> method.
            </summary>
            <param name="label">The text label (string) for the curve that will be
            used as a <see cref="T:ZedGraph.Legend"/> entry.</param>
            <param name="points">A <see cref="T:ZedGraph.PointPairList"/> of double precision value Trio's that define
            the X, Y, and lower dependent values for this curve</param>
            <param name="color">The color to used to fill the bars</param>
            <returns>A <see cref="T:ZedGraph.HiLowBarItem"/> class for the newly created bar curve.
            This can then be used to access all of the curve properties that
            are not defined as arguments to the
            <see cref="M:ZedGraph.GraphPane.AddHiLowBar(System.String,ZedGraph.PointPairList,System.Drawing.Color)"/> method.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.AddPieSlice(System.Double,System.Drawing.Color,System.Double,System.String)">
            <summary>
            Add a <see cref="T:ZedGraph.PieItem"/> to the display.
            </summary>
            <param name="value">The value associated with this <see cref="T:ZedGraph.PieItem"/>item.</param>
            <param name="color">The display color for this <see cref="T:ZedGraph.PieItem"/>item.</param>
            <param name="displacement">The amount this <see cref="T:ZedGraph.PieItem"/>item will be 
            displaced from the center of the <see cref="T:ZedGraph.PieItem"/>.</param>
            <param name="label">Text label for this <see cref="T:ZedGraph.PieItem"/></param>
            <returns>a reference to the <see cref="T:ZedGraph.PieItem"/> constructed</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.AddPieSlice(System.Double,System.Drawing.Color,System.Drawing.Color,System.Single,System.Double,System.String)">
            <summary>
            Add a <see cref="T:ZedGraph.PieItem"/> to the display, providing a gradient fill for the pie color.
            </summary>
            <param name="value">The value associated with this <see cref="T:ZedGraph.PieItem"/> instance.</param>
            <param name="color1">The starting display color for the gradient <see cref="T:ZedGraph.Fill"/> for this
            <see cref="T:ZedGraph.PieItem"/> instance.</param>
            <param name="color2">The ending display color for the gradient <see cref="T:ZedGraph.Fill"/> for this
            <see cref="T:ZedGraph.PieItem"/> instance.</param>
            <param name="fillAngle">The angle for the gradient <see cref="T:ZedGraph.Fill"/>.</param>
            <param name="displacement">The amount this <see cref="T:ZedGraph.PieItem"/>  instance will be 
            displaced from the center point.</param>
            <param name="label">Text label for this <see cref="T:ZedGraph.PieItem"/> instance.</param>
        </member>
        <member name="M:ZedGraph.GraphPane.AddPieSlices(System.Double[],System.String[])">
             <summary>
            Creates all the <see cref="T:ZedGraph.PieItem"/>s for a single Pie Chart. 
             </summary>
             <param name="values">double array containing all <see cref="P:ZedGraph.PieItem.Value"/>s
             for a single PieChart.
             </param>
             <param name="labels"> string array containing all <see cref="P:ZedGraph.CurveItem.Label"/>s
             for a single PieChart.
             </param>
             <returns>an array containing references to all <see cref="T:ZedGraph.PieItem"/>s comprising
             the Pie Chart.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.GeneralTransform(System.Drawing.PointF,ZedGraph.CoordType)">
            <summary>
            Transform a data point from the specified coordinate type
            (<see cref="T:ZedGraph.CoordType"/>) to screen coordinates (pixels).
            </summary>
            <remarks>This method implicitly assumes that <see cref="P:ZedGraph.GraphPane.AxisRect"/>
            has already been calculated via <see cref="M:ZedGraph.GraphPane.AxisChange(System.Drawing.Graphics)"/> or
            <see cref="M:ZedGraph.GraphPane.Draw(System.Drawing.Graphics)"/> methods, or the <see cref="P:ZedGraph.GraphPane.AxisRect"/> is
            set manually (see <see cref="P:ZedGraph.GraphPane.IsAxisRectAuto"/>).</remarks>
            <param name="ptF">The X,Y pair that defines the point in user
            coordinates.</param>
            <param name="coord">A <see cref="T:ZedGraph.CoordType"/> type that defines the
            coordinate system in which the X,Y pair is defined.</param>
            <returns>A point in screen coordinates that corresponds to the
            specified user point.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.ReverseTransform(System.Drawing.PointF,System.Double@,System.Double@,System.Double@)">
            <summary>
            Return the user scale values that correspond to the specified screen
            coordinate position (pixels).
            </summary>
            <remarks>This method implicitly assumes that <see cref="P:ZedGraph.GraphPane.AxisRect"/>
            has already been calculated via <see cref="M:ZedGraph.GraphPane.AxisChange(System.Drawing.Graphics)"/> or
            <see cref="M:ZedGraph.GraphPane.Draw(System.Drawing.Graphics)"/> methods, or the <see cref="P:ZedGraph.GraphPane.AxisRect"/> is
            set manually (see <see cref="P:ZedGraph.GraphPane.IsAxisRectAuto"/>).</remarks>
            <param name="ptF">The X,Y pair that defines the screen coordinate
            point of interest</param>
            <param name="x">The resultant value in user coordinates from the
            <see cref="P:ZedGraph.GraphPane.XAxis"/></param>
            <param name="y">The resultant value in user coordinates from the
            <see cref="P:ZedGraph.GraphPane.YAxis"/></param>
            <param name="y2">The resultant value in user coordinates from the
            <see cref="P:ZedGraph.GraphPane.Y2Axis"/></param>
        </member>
        <member name="M:ZedGraph.GraphPane.FindNearestObject(System.Drawing.PointF,System.Drawing.Graphics,System.Object@,System.Int32@)">
            <summary>
            Find the object that lies closest to the specified mouse (screen) point.
            </summary>
            <remarks>
            This method will search through all of the graph objects, such as
            <see cref="T:ZedGraph.Axis"/>, <see cref="T:ZedGraph.Legend"/>, <see cref="P:ZedGraph.PaneBase.Title"/>,
            <see cref="T:ZedGraph.GraphItem"/>, and <see cref="T:ZedGraph.CurveItem"/>.
            If the mouse point is within the bounding box of the items (or in the case
            of <see cref="T:ZedGraph.ArrowItem"/> and <see cref="T:ZedGraph.CurveItem"/>, within
            <see cref="F:ZedGraph.GraphPane.Default.NearestTol"/> pixels), then the object will be returned.
            You must check the type of the object to determine what object was
            selected (for example, "if ( object is Legend ) ...").  The
            <see paramref="index"/> parameter returns the index number of the item
            within the selected object (such as the point number within a
            <see cref="T:ZedGraph.CurveItem"/> object.
            </remarks>
            <param name="mousePt">The screen point, in pixel coordinates.</param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="nearestObj">A reference to the nearest object to the
            specified screen point.  This can be any of <see cref="T:ZedGraph.Axis"/>,
            <see cref="T:ZedGraph.Legend"/>, <see cref="P:ZedGraph.PaneBase.Title"/>,
            <see cref="T:ZedGraph.TextItem"/>, <see cref="T:ZedGraph.ArrowItem"/>, or <see cref="T:ZedGraph.CurveItem"/>.
            Note: If the pane title is selected, then the <see cref="T:ZedGraph.GraphPane"/> object
            will be returned.
            </param>
            <param name="index">The index number of the item within the selected object
            (where applicable).  For example, for a <see cref="T:ZedGraph.CurveItem"/> object,
            <see paramref="index"/> will be the index number of the nearest data point,
            accessible via <see cref="P:ZedGraph.CurveItem.Points">CurveItem.Points[index]</see>.
            index will be -1 if no data points are available.</param>
            <returns>true if an object was found, false otherwise.</returns>
            <seealso cref="M:ZedGraph.GraphPane.FindNearestObject(System.Drawing.PointF,System.Drawing.Graphics,System.Object@,System.Int32@)"/>
        </member>
        <member name="M:ZedGraph.GraphPane.FindNearestPoint(System.Drawing.PointF,ZedGraph.CurveItem,ZedGraph.CurveItem@,System.Int32@)">
            <summary>
            Find the data point that lies closest to the specified mouse (screen)
            point.
            </summary>
            <remarks>
            This method will search only through the points for the specified
            curve to determine which point is
            nearest the mouse point.  It will only consider points that are within
            <see cref="F:ZedGraph.GraphPane.Default.NearestTol"/> pixels of the screen point.
            </remarks>
            <param name="mousePt">The screen point, in pixel coordinates.</param>
            <param name="targetCurve">A <see cref="T:ZedGraph.CurveItem"/> object containing
            the data points to be searched.</param>
            <param name="nearestCurve">A reference to the <see cref="T:ZedGraph.CurveItem"/>
            instance that contains the closest point.  nearestCurve will be null if
            no data points are available.</param>
            <param name="iNearest">The index number of the closest point.  The
            actual data vpoint will then be <see cref="P:ZedGraph.CurveItem.Points">CurveItem.Points[iNearest]</see>
            .  iNearest will
            be -1 if no data points are available.</param>
            <returns>true if a point was found and that point lies within
            <see cref="F:ZedGraph.GraphPane.Default.NearestTol"/> pixels
            of the screen point, false otherwise.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.FindNearestPoint(System.Drawing.PointF,ZedGraph.CurveItem@,System.Int32@)">
            <summary>
            Find the data point that lies closest to the specified mouse (screen)
            point.
            </summary>
            <remarks>
            This method will search through all curves in
            <see cref="P:ZedGraph.GraphPane.CurveList"/> to find which point is
            nearest.  It will only consider points that are within
            <see cref="F:ZedGraph.GraphPane.Default.NearestTol"/> pixels of the screen point.
            </remarks>
            <param name="mousePt">The screen point, in pixel coordinates.</param>
            <param name="nearestCurve">A reference to the <see cref="T:ZedGraph.CurveItem"/>
            instance that contains the closest point.  nearestCurve will be null if
            no data points are available.</param>
            <param name="iNearest">The index number of the closest point.  The
            actual data vpoint will then be <see cref="P:ZedGraph.CurveItem.Points">CurveItem.Points[iNearest]</see>
            .  iNearest will
            be -1 if no data points are available.</param>
            <returns>true if a point was found and that point lies within
            <see cref="F:ZedGraph.GraphPane.Default.NearestTol"/> pixels
            of the screen point, false otherwise.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.FindNearestPoint(System.Drawing.PointF,ZedGraph.CurveList,ZedGraph.CurveItem@,System.Int32@)">
            <summary>
            Find the data point that lies closest to the specified mouse (screen)
            point.
            </summary>
            <remarks>
            This method will search through the specified list of curves to find which point is
            nearest.  It will only consider points that are within
            <see cref="F:ZedGraph.GraphPane.Default.NearestTol"/> pixels of the screen point, and it will
            only consider <see cref="T:ZedGraph.CurveItem"/>'s that are in 
            <paramref name="targetCurveList"/>.
            </remarks>
            <param name="mousePt">The screen point, in pixel coordinates.</param>
            <param name="targetCurveList">A <see cref="P:ZedGraph.GraphPane.CurveList"/> object containing
            a subset of <see cref="T:ZedGraph.CurveItem"/>'s to be searched.</param>
            <param name="nearestCurve">A reference to the <see cref="T:ZedGraph.CurveItem"/>
            instance that contains the closest point.  nearestCurve will be null if
            no data points are available.</param>
            <param name="iNearest">The index number of the closest point.  The
            actual data vpoint will then be <see cref="P:ZedGraph.CurveItem.Points">CurveItem.Points[iNearest]</see>
            .  iNearest will
            be -1 if no data points are available.</param>
            <returns>true if a point was found and that point lies within
            <see cref="F:ZedGraph.GraphPane.Default.NearestTol"/> pixels
            of the screen point, false otherwise.</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.GetClusterWidth">
            <summary>
            Determine the width, in screen pixel units, of each bar cluster including
            the cluster gaps and bar gaps.
            </summary>
            <remarks>This method calls the <see cref="M:ZedGraph.Axis.GetClusterWidth(ZedGraph.GraphPane)"/>
            method for the base <see cref="T:ZedGraph.Axis"/> for <see cref="T:ZedGraph.Bar"/> graphs
            (the base <see cref="T:ZedGraph.Axis"/> is assigned by the <see cref="P:ZedGraph.GraphPane.BarBase"/>
            property).
            </remarks>
            <seealso cref="T:ZedGraph.BarBase"/>
            <seealso cref="P:ZedGraph.GraphPane.BarBase"/>
            <seealso cref="M:ZedGraph.Axis.GetClusterWidth(ZedGraph.GraphPane)"/>
            <seealso cref="P:ZedGraph.GraphPane.BarType"/>
            <returns>The width of each bar cluster, in pixel units</returns>
        </member>
        <member name="M:ZedGraph.GraphPane.BarBaseAxis">
            <summary>
            Determine the <see cref="T:ZedGraph.Axis"/> from which the <see cref="T:ZedGraph.Bar"/> charts are based.
            </summary>
            <seealso cref="T:ZedGraph.BarBase"/>
            <seealso cref="P:ZedGraph.GraphPane.BarBase"/>
            <seealso cref="M:ZedGraph.Axis.GetClusterWidth(ZedGraph.GraphPane)"/>
            <returns>The <see cref="T:ZedGraph.Axis"/> class for the axis from which the bars are based</returns>
        </member>
        <member name="P:ZedGraph.GraphPane.CurveList">
            <summary>
            Gets or sets the list of <see cref="T:ZedGraph.CurveItem"/> items for this <see cref="T:ZedGraph.GraphPane"/>
            </summary>
            <value>A reference to a <see cref="P:ZedGraph.GraphPane.CurveList"/> collection object</value>
        </member>
        <member name="P:ZedGraph.GraphPane.XAxis">
            <summary>
            Accesses the <see cref="P:ZedGraph.GraphPane.XAxis"/> for this graph
            </summary>
            <value>A reference to a <see cref="P:ZedGraph.GraphPane.XAxis"/> object</value>
        </member>
        <member name="P:ZedGraph.GraphPane.YAxis">
            <summary>
            Accesses the <see cref="P:ZedGraph.GraphPane.YAxis"/> for this graph
            </summary>
            <value>A reference to a <see cref="P:ZedGraph.GraphPane.YAxis"/> object</value>
        </member>
        <member name="P:ZedGraph.GraphPane.Y2Axis">
            <summary>
            Accesses the <see cref="P:ZedGraph.GraphPane.Y2Axis"/> for this graph
            </summary>
            <value>A reference to a <see cref="P:ZedGraph.GraphPane.Y2Axis"/> object</value>
        </member>
        <member name="P:ZedGraph.GraphPane.IsIgnoreInitial">
            <summary>
            Gets or sets a boolean value that affects the data range that is considered
            for the automatic scale ranging.
            </summary>
            <remarks>If true, then initial data points where the Y value
            is zero are not included when automatically determining the scale <see cref="P:ZedGraph.Axis.Min"/>,
            <see cref="P:ZedGraph.Axis.Max"/>, and <see cref="P:ZedGraph.Axis.Step"/> size.
            All data after the first non-zero Y value are included.
            </remarks>
            <seealso cref="F:ZedGraph.GraphPane.Default.IsIgnoreInitial"/>
        </member>
        <member name="P:ZedGraph.GraphPane.IsBoundedRanges">
            <summary> Gets or sets a boolean value that determines if the auto-scaled axis ranges will
            subset the data points based on any manually set scale range values.</summary>
            <remarks>The bounds provide a means to subset the data.  For example, if all the axes are set to
            autoscale, then the full range of data are used.  But, if the XAxis.Min and XAxis.Max values
            are manually set, then the Y data range will reflect the Y values within the bounds of
            XAxis.Min and XAxis.Max.  Set to true to subset the data, or false to always include
            all data points when calculating scale ranges.</remarks>
        </member>
        <member name="P:ZedGraph.GraphPane.IsIgnoreMissing">
            <summary>Gets or sets a value that determines whether or not initial
            <see cref="F:ZedGraph.PointPair.Missing"/> values will cause the line segments of
            a curve to be discontinuous.
            </summary>
            <remarks>If this field is true, then the curves
            will be plotted as continuous lines as if the Missing values did not exist.
            Use the public property <see cref="P:ZedGraph.GraphPane.IsIgnoreMissing"/> to access
            this value. </remarks>
        </member>
        <member name="P:ZedGraph.GraphPane.LineType">
            <summary>Determines how the <see cref="T:ZedGraph.LineItem"/>
            graphs will be displayed. See the <see cref="T:ZedGraph.LineType"/> enum
            for the individual types available.
            </summary>
            <seealso cref="F:ZedGraph.GraphPane.Default.LineType"/>
        </member>
        <member name="P:ZedGraph.GraphPane.AxisRect">
            <summary>
            Gets or sets the rectangle that contains the area bounded by the axes
            (<see cref="P:ZedGraph.GraphPane.XAxis"/>, <see cref="P:ZedGraph.GraphPane.YAxis"/>, and <see cref="P:ZedGraph.GraphPane.Y2Axis"/>).
            If you set this value manually, then the <see cref="P:ZedGraph.GraphPane.IsAxisRectAuto"/>
            value will automatically be set to false.
            </summary>
            <value>The rectangle units are in screen pixels</value>
        </member>
        <member name="P:ZedGraph.GraphPane.IsAxisRectAuto">
            <summary>
            IsAxisRectAuto is a boolean value that determines whether or not the 
            <see cref="P:ZedGraph.GraphPane.AxisRect"/> will be calculated automatically (almost always true).
            </summary>
            <remarks>
            If you have a need to set the axisRect manually, such as you have multiple graphs
            on a page and you want to line up the edges perfectly, you can set this value
            to false.  If you set this value to false, you must also manually set
            the <see cref="P:ZedGraph.GraphPane.AxisRect"/> property.  Note that the <see cref="P:ZedGraph.GraphPane.PieRect"/> (for Pie
            charts) is a function of the <see cref="P:ZedGraph.GraphPane.AxisRect"/>.  Therefore, <see cref="P:ZedGraph.GraphPane.PieRect"/>
            will also have to be manually calculated if <see cref="P:ZedGraph.GraphPane.IsAxisRectAuto"/> is false.
            You can easily determine the axisRect that ZedGraph would have
            calculated by calling the <see cref="M:ZedGraph.GraphPane.CalcAxisRect(System.Drawing.Graphics)"/> method, which returns
            an axis rect sized for the current data range, scale sizes, etc.
            </remarks>
            <value>true to have ZedGraph calculate the axisRect, false to do it yourself</value>
            <seealso cref="M:ZedGraph.PieItem.CalcPieRect(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single,System.Drawing.RectangleF)"/>
        </member>
        <member name="P:ZedGraph.GraphPane.PieRect">
            <summary>
            Gets or sets a <see cref="T:System.Drawing.RectangleF"/> that determines the size of the Pie.
            </summary>
            <remarks>This rectangle is normally square, and slightly smaller than the <see cref="P:ZedGraph.GraphPane.AxisRect"/>.
            If you want to set this rectangle manually, you will need to set <see cref="P:ZedGraph.GraphPane.IsAxisRectAuto"/> to
            false as well.
            </remarks>
            <value>The rectangle units are in screen pixels</value>
        </member>
        <member name="P:ZedGraph.GraphPane.AxisBorder">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.Border"/> class for drawing the border
            border around the <see cref="P:ZedGraph.GraphPane.AxisRect"/>
            </summary>
            <seealso cref="F:ZedGraph.GraphPane.Default.AxisBorderColor"/>
            <seealso cref="F:ZedGraph.GraphPane.Default.AxisBorderPenWidth"/>
        </member>
        <member name="P:ZedGraph.GraphPane.AxisFill">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.Fill"/> data for this
            <see cref="P:ZedGraph.GraphPane.AxisRect"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.GraphPane.MinClusterGap">
            <summary>
            The minimum space between <see cref="T:ZedGraph.Bar"/> clusters, expressed as a
            fraction of the bar size.
            </summary>
            <seealso cref="F:ZedGraph.GraphPane.Default.MinClusterGap"/>
            <seealso cref="P:ZedGraph.GraphPane.MinBarGap"/>
            <seealso cref="P:ZedGraph.GraphPane.ClusterScaleWidth"/>
        </member>
        <member name="P:ZedGraph.GraphPane.MinBarGap">
            <summary>
            The minimum space between individual <see cref="T:ZedGraph.Bar">Bars</see>
            within a cluster, expressed as a
            fraction of the bar size.
            </summary>
            <seealso cref="F:ZedGraph.GraphPane.Default.MinBarGap"/>
            <seealso cref="P:ZedGraph.GraphPane.MinClusterGap"/>
            <seealso cref="P:ZedGraph.GraphPane.ClusterScaleWidth"/>
        </member>
        <member name="P:ZedGraph.GraphPane.BarBase">
            <summary>Determines the base axis from which <see cref="T:ZedGraph.Bar"/>
            graphs will be displayed.  The base axis is the axis from which the bars grow with
            increasing value. The value is of the enumeration type <see cref="T:ZedGraph.BarBase"/>.
            </summary>
            <seealso cref="F:ZedGraph.GraphPane.Default.BarBase"/>
        </member>
        <member name="P:ZedGraph.GraphPane.BarType">
            <summary>Determines how the <see cref="T:ZedGraph.BarItem"/>
            graphs will be displayed. See the <see cref="T:ZedGraph.BarType"/> enum
            for the individual types available.
            </summary>
            <seealso cref="F:ZedGraph.GraphPane.Default.BarType"/>
        </member>
        <member name="P:ZedGraph.GraphPane.ClusterScaleWidth">
            <summary>
            The width of an individual bar cluster on a <see cref="T:ZedGraph.Bar"/> graph.
            This value only applies to bar graphs plotted on non-ordinal X axis
            types (<see cref="F:ZedGraph.AxisType.Linear"/>, <see cref="F:ZedGraph.AxisType.Log"/>, and
            <see cref="F:ZedGraph.AxisType.Date"/>.
            </summary>
            <seealso cref="F:ZedGraph.GraphPane.Default.ClusterScaleWidth"/>
            <seealso cref="P:ZedGraph.GraphPane.MinBarGap"/>
            <seealso cref="P:ZedGraph.GraphPane.MinClusterGap"/>
        </member>
        <member name="T:ZedGraph.GraphPane.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.GraphPane"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.AxisBorderColor">
            <summary>
            The default color for the <see cref="T:ZedGraph.Axis"/> border border.
            (<see cref="P:ZedGraph.GraphPane.AxisBorder"/> property). 
            </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.AxisBackColor">
            <summary>
            The default color for the <see cref="P:ZedGraph.GraphPane.AxisRect"/> background.
            (<see cref="P:ZedGraph.GraphPane.AxisFill"/> property). 
            </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.AxisBackBrush">
            <summary>
            The default brush for the <see cref="P:ZedGraph.GraphPane.AxisRect"/> background.
            (<see cref="P:ZedGraph.Fill.Brush"/> property of <see cref="P:ZedGraph.GraphPane.AxisFill"/>). 
            </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.AxisBackType">
            <summary>
            The default <see cref="T:ZedGraph.FillType"/> for the <see cref="P:ZedGraph.GraphPane.AxisRect"/> background.
            (<see cref="P:ZedGraph.Fill.Type"/> property of <see cref="P:ZedGraph.GraphPane.AxisFill"/>). 
            </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.AxisBorderPenWidth">
            <summary>
            The default pen width for drawing the 
            <see cref="P:ZedGraph.GraphPane.AxisRect"/> border border
            (<see cref="P:ZedGraph.GraphPane.AxisBorder"/> property).
            Units are in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.IsAxisBorderVisible">
            <summary>
            The default display mode for the <see cref="T:ZedGraph.Axis"/> border border
            (<see cref="P:ZedGraph.GraphPane.AxisBorder"/> property). true
            to show the border border, false to omit the border
            </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.IsIgnoreInitial">
            <summary>
            The default settings for the <see cref="T:ZedGraph.Axis"/> scale ignore initial
            zero values option (<see cref="P:ZedGraph.GraphPane.IsIgnoreInitial"/> property).
            true to have the auto-scale-range code ignore the initial data points
            until the first non-zero Y value, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.IsBoundedRanges">
            <summary>
            The default settings for the <see cref="T:ZedGraph.Axis"/> scale bounded ranges option
            (<see cref="P:ZedGraph.GraphPane.IsBoundedRanges"/> property).
            true to have the auto-scale-range code subset the data according to any
            manually set scale values, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.MinClusterGap">
            <summary>
            The default dimension gap between clusters of bars on a
            <see cref="T:ZedGraph.Bar"/> graph.
            This dimension is expressed in terms of the normal bar width.
            </summary>
            <seealso cref="F:ZedGraph.GraphPane.Default.MinBarGap"/>
            <seealso cref="P:ZedGraph.GraphPane.MinClusterGap"/>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.MinBarGap">
            <summary>
            The default dimension gap between each individual bar within a bar cluster
            on a <see cref="T:ZedGraph.Bar"/> graph.
            This dimension is expressed in terms of the normal bar width.
            </summary>
            <seealso cref="F:ZedGraph.GraphPane.Default.MinClusterGap"/>
            <seealso cref="P:ZedGraph.GraphPane.MinBarGap"/>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.BarBase">
            <summary>The default value for the <see cref="F:ZedGraph.GraphPane.Default.BarBase"/>, which determines the base
            <see cref="T:ZedGraph.Axis"/> from which the <see cref="T:ZedGraph.Bar"/> graphs will be displayed.
            </summary>
            <seealso cref="P:ZedGraph.GraphPane.BarBase"/>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.BarType">
            <summary>The default value for the <see cref="P:ZedGraph.GraphPane.BarType"/> property, which
            determines if the bars are drawn overlapping eachother in a "stacked" format,
            or side-by-side in a "cluster" format.  See the <see cref="T:ZedGraph.BarType"/>
            for more information.
            </summary>
            <seealso cref="P:ZedGraph.GraphPane.BarType"/>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.LineType">
            <summary>The default value for the <see cref="P:ZedGraph.GraphPane.LineType"/> property, which
            determines if the lines are drawn in normal or "stacked" mode.  See the
            <see cref="T:ZedGraph.LineType"/> for more information.
            </summary>
            <seealso cref="P:ZedGraph.GraphPane.LineType"/>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.ClusterScaleWidth">
            <summary>
            The default width of a bar cluster 
            on a <see cref="T:ZedGraph.Bar"/> graph.  This value only applies to
            <see cref="T:ZedGraph.Bar"/> graphs, and only when the
            <see cref="P:ZedGraph.Axis.Type"/> is <see cref="F:ZedGraph.AxisType.Linear"/>,
            <see cref="F:ZedGraph.AxisType.Log"/> or <see cref="F:ZedGraph.AxisType.Date"/>.
            This dimension is expressed in terms of X scale user units.
            </summary>
            <seealso cref="F:ZedGraph.GraphPane.Default.MinClusterGap"/>
            <seealso cref="P:ZedGraph.GraphPane.MinBarGap"/>
        </member>
        <member name="F:ZedGraph.GraphPane.Default.NearestTol">
            <summary>
            The tolerance that is applied to the
            <see cref="M:ZedGraph.GraphPane.FindNearestPoint(System.Drawing.PointF,ZedGraph.CurveItem@,System.Int32@)"/> routine.
            If a given curve point is within this many pixels of the mousePt, the curve
            point is considered to be close enough for selection as a nearest point
            candidate.
            </summary>
        </member>
        <member name="T:ZedGraph.HiLowBar">
            <summary>
            This class handles the drawing of the curve <see cref="T:ZedGraph.HiLowBar"/> objects.
            The Hi-Low Bars are the "floating" bars that have a lower and upper value and
            appear at each defined point.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.6 $ $Date: 2005/03/05 07:24:10 $ </version>
        </member>
        <member name="F:ZedGraph.HiLowBar.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.HiLowBar.size">
            <summary>
            Private field that stores the size (width) of this
            <see cref="T:ZedGraph.HiLowBar"/> in points (1/72 inch).  Use the public
            property <see cref="P:ZedGraph.HiLowBar.Size"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.HiLowBar.isMaximumWidth">
            <summary>
            Private field that determines whether the bar width will be based on
            the <see cref="P:ZedGraph.HiLowBar.Size"/> value, or it will be based on available
            space similar to <see cref="T:ZedGraph.BarItem"/> objects.  Use the public property
            <see cref="P:ZedGraph.HiLowBar.IsMaximumWidth"/> to access this value.
            </summary>
        </member>
        <member name="M:ZedGraph.HiLowBar.#ctor">
            <summary>
            Default constructor that sets all <see cref="T:ZedGraph.HiLowBar"/> properties to default
            values as defined in the <see cref="T:ZedGraph.Bar.Default"/> class.
            </summary>
        </member>
        <member name="M:ZedGraph.HiLowBar.#ctor(System.Drawing.Color)">
            <summary>
            Default constructor that sets the 
            <see cref="T:System.Drawing.Color"/> as specified, and the remaining
            <see cref="T:ZedGraph.HiLowBar"/> properties to default
            values as defined in the <see cref="T:ZedGraph.Bar.Default"/> class.
            The specified color is only applied to the
            <see cref="P:ZedGraph.Fill.Color"/>, and the <see cref="P:ZedGraph.Border.Color"/>
            will be defaulted.
            </summary>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value indicating
            the <see cref="P:ZedGraph.Fill.Color"/>
            of the Bar.
            </param>
        </member>
        <member name="M:ZedGraph.HiLowBar.#ctor(System.Drawing.Color,System.Single)">
            <summary>
            Default constructor that sets the 
            <see cref="T:System.Drawing.Color"/> and <see cref="P:ZedGraph.HiLowBar.Size"/> as specified, and the remaining
            <see cref="T:ZedGraph.HiLowBar"/> properties to default
            values as defined in the <see cref="T:ZedGraph.Bar.Default"/> class.
            The specified color is only applied to the
            <see cref="P:ZedGraph.Fill.Color"/>, and the <see cref="P:ZedGraph.Border.Color"/>
            will be defaulted.
            </summary>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value indicating
            the <see cref="P:ZedGraph.Fill.Color"/>
            of the Bar.
            </param>
            <param name="size">The size (width) of the <see cref="T:ZedGraph.HiLowBar"/>'s, in points
            (1/72nd inch)</param>
        </member>
        <member name="M:ZedGraph.HiLowBar.#ctor(ZedGraph.HiLowBar)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.HiLowBar"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.HiLowBar.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.HiLowBar"/></returns>
        </member>
        <member name="M:ZedGraph.HiLowBar.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.HiLowBar.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.HiLowBar.DrawSingleBar(System.Drawing.Graphics,ZedGraph.GraphPane,ZedGraph.CurveItem,System.Int32,System.Int32,ZedGraph.Axis,ZedGraph.Axis,System.Single)">
            <summary>
            Protected internal routine that draws the specified single bar (an individual "point")
            of this series to the specified <see cref="T:System.Drawing.Graphics"/> device.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="curve">A <see cref="T:ZedGraph.CurveItem"/> object representing the
            <see cref="T:ZedGraph.Bar"/>'s to be drawn.</param>
            <param name="index">
            The zero-based index number for the single bar to be drawn.
            </param>
            <param name="pos">
            The ordinal position of the this bar series (0=first bar, 1=second bar, etc.)
            in the cluster of bars.
            </param>
            <param name="baseAxis">The <see cref="T:ZedGraph.Axis"/> class instance that defines the base (independent)
            axis for the <see cref="T:ZedGraph.Bar"/></param>
            <param name="valueAxis">The <see cref="T:ZedGraph.Axis"/> class instance that defines the value (dependent)
            axis for the <see cref="T:ZedGraph.Bar"/></param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.HiLowBar.GetBarWidth(ZedGraph.GraphPane,ZedGraph.Axis,System.Single)">
            <summary>
            Returns the width of the bar, in pixels, based on the settings for
            <see cref="P:ZedGraph.HiLowBar.Size"/> and <see cref="P:ZedGraph.HiLowBar.IsMaximumWidth"/>.
            </summary>
            <param name="pane">The parent <see cref="T:ZedGraph.GraphPane"/> object.</param>
            <param name="baseAxis">The <see cref="T:ZedGraph.Axis"/> object that
            represents the bar base (independent axis).</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>The width of each bar, in pixel units</returns>
        </member>
        <member name="P:ZedGraph.HiLowBar.Size">
            <summary>
            Gets or sets the size of the <see cref="T:ZedGraph.HiLowBar"/>
            </summary>
            <remarks>The size of the bars can be set by this value, which
            is then scaled according to the scaleFactor (see
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>).  Alternatively,
            if <see cref="P:ZedGraph.HiLowBar.IsMaximumWidth"/> is true, the bar width will
            be set according to the maximum available cluster width less
            the cluster gap (see <see cref="M:ZedGraph.GraphPane.GetClusterWidth"/>
            and <see cref="P:ZedGraph.GraphPane.MinClusterGap"/>).  That is, if
            <see cref="P:ZedGraph.HiLowBar.IsMaximumWidth"/> is true, then the value of
            <see cref="P:ZedGraph.HiLowBar.Size"/> will be ignored.
            </remarks>
            <value>Size in points (1/72 inch)</value>
            <seealso cref="F:ZedGraph.HiLowBar.Default.Size"/>
        </member>
        <member name="P:ZedGraph.HiLowBar.IsMaximumWidth">
            <summary>
            Determines whether the bar width will be based on
            the <see cref="P:ZedGraph.HiLowBar.Size"/> value, or it will be based on available
            space similar to <see cref="T:ZedGraph.BarItem"/> objects.
            </summary>
            <remarks>If true, then the value
            of <see cref="P:ZedGraph.HiLowBar.Size"/> is ignored.  If this value is true, then
            <see cref="P:ZedGraph.GraphPane.MinClusterGap"/> will be used to determine the total space between each bar.
            </remarks>
        </member>
        <member name="T:ZedGraph.HiLowBar.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.HiLowBar"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.HiLowBar.Default.Size">
            <summary>
            The default size (width) for the bars (<see cref="P:ZedGraph.HiLowBar.Size"/> property),
            in units of points.
            </summary>
        </member>
        <member name="T:ZedGraph.HiLowBarItem">
            <summary>
            Encapsulates an "High-Low" Bar curve type that displays a bar in which both
            the bottom and the top of the bar are set by data valuesfrom the
            <see cref="T:ZedGraph.PointPair"/> struct.
            </summary>
            <remarks>The <see cref="T:ZedGraph.HiLowBarItem"/> type is intended for displaying
            bars that cover a band of data, such as a confidence interval, "waterfall"
            chart, etc.  The width of the bar can be set in two ways.  First,
            <see cref="P:ZedGraph.HiLowBar.Size"/> can be used to set a width in points (1/72nd inch),
            that is scaled using the regular scalefactor method (see
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>).  In this manner, the bar widths
            are set similar to symbol sizes.  The other method is to set
            <see cref="P:ZedGraph.HiLowBar.IsMaximumWidth"/> to true, which will cause the bars
            to be scaled just like a <see cref="T:ZedGraph.BarItem"/> in which only one
            bar series is present.  That is, the bars width will be the width of
            a cluster less the clustergap (see <see cref="M:ZedGraph.GraphPane.GetClusterWidth"/>
            and <see cref="P:ZedGraph.GraphPane.MinClusterGap"/>). The position of each bar is set
            according to the <see cref="T:ZedGraph.PointPair"/> values.  The independent axis
            is assigned with <see cref="P:ZedGraph.HiLowBarItem.BarBase"/>, and is a
            <see cref="P:ZedGraph.HiLowBarItem.BarBase"/> enum type.  If <see cref="P:ZedGraph.HiLowBarItem.BarBase"/>
            is set to <see cref="F:ZedGraph.BarBase.Y"/> or <see cref="F:ZedGraph.BarBase.Y2"/>, then
            the bars will actually be horizontal, since the X axis becomes the
            value axis and the Y or Y2 axis becomes the independent axis.</remarks>
            <author> John Champion </author>
            <version> $Revision: 3.6 $ $Date: 2005/03/11 17:24:38 $ </version>
        </member>
        <member name="F:ZedGraph.HiLowBarItem.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.HiLowBarItem.bar">
            <summary>
            Private field that stores a reference to the <see cref="T:ZedGraph.HiLowBar"/>
            class defined for this <see cref="T:ZedGraph.HiLowBarItem"/>.  Use the public
            property <see cref="P:ZedGraph.HiLowBarItem.Bar"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.HiLowBarItem.barBase">
            <summary>
            Private field that determines which <see cref="T:ZedGraph.Axis"/> is the independent axis
            for this <see cref="T:ZedGraph.HiLowBarItem"/>.
            </summary>
        </member>
        <member name="M:ZedGraph.HiLowBarItem.#ctor(System.String,System.Double[],System.Double[],System.Double[],System.Drawing.Color)">
            <summary>
            Create a new <see cref="T:ZedGraph.HiLowBarItem"/> using the specified properties.
            </summary>
            <param name="label">The label that will appear in the legend.</param>
            <param name="x">An array of double precision values that define
            the independent (X axis) values for this curve</param>
            <param name="y">An array of double precision values that define
            the dependent (Y axis) values for this curve</param>
            <param name="baseVal">An array of double precision values that define the
            base value (the bottom) of the bars for this curve.
            </param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value that will be applied to
            the <see cref="P:ZedGraph.Bar.Fill"/> and <see cref="P:ZedGraph.Bar.Border"/> properties.
            </param>
        </member>
        <member name="M:ZedGraph.HiLowBarItem.#ctor(System.String,ZedGraph.PointPairList,System.Drawing.Color)">
            <summary>
            Create a new <see cref="T:ZedGraph.HiLowBarItem"/> using the specified properties.
            </summary>
            <param name="label">The label that will appear in the legend.</param>
            <param name="points">A <see cref="T:ZedGraph.PointPairList"/> of double precision value trio's that define
            the X, Y, and lower dependent values for this curve</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value that will be applied to
            the <see cref="P:ZedGraph.Bar.Fill"/> and <see cref="P:ZedGraph.Bar.Border"/> properties.
            </param>
        </member>
        <member name="M:ZedGraph.HiLowBarItem.#ctor(ZedGraph.HiLowBarItem)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.HiLowBarItem"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.HiLowBarItem.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.HiLowBarItem"/></returns>
        </member>
        <member name="M:ZedGraph.HiLowBarItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.HiLowBarItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.HiLowBarItem.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,System.Int32,System.Single)">
            <summary>
            Do all rendering associated with this <see cref="T:ZedGraph.HiLowBarItem"/> to the specified
            <see cref="T:System.Drawing.Graphics"/> device.  This method is normally only
            called by the Draw method of the parent <see cref="T:ZedGraph.CurveList"/>
            collection object.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="pos">The ordinal position of the current <see cref="T:ZedGraph.ErrorBarItem"/>
            curve.</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.HiLowBarItem.DrawLegendKey(System.Drawing.Graphics,ZedGraph.GraphPane,System.Drawing.RectangleF,System.Single)">
            <summary>
            Draw a legend key entry for this <see cref="T:ZedGraph.HiLowBarItem"/> at the specified location
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> struct that specifies the
            location for the legend key</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.HiLowBarItem.GetRange(System.Double@,System.Double@,System.Double@,System.Double@,System.Boolean,System.Double,System.Double,System.Double,System.Double,ZedGraph.GraphPane)">
            <summary>
            Go through the list of <see cref="T:ZedGraph.PointPair"/> data values for this
            <see cref="T:ZedGraph.HiLowBarItem"/> and determine the minimum and maximum values in the data.
            </summary>
            <param name="xMin">The minimum X value in the range of data</param>
            <param name="xMax">The maximum X value in the range of data</param>
            <param name="yMin">The minimum Y value in the range of data</param>
            <param name="yMax">The maximum Y value in the range of data</param>
            <param name="bIgnoreInitial">ignoreInitial is a boolean value that
            affects the data range that is considered for the automatic scale
            ranging (see <see cref="P:ZedGraph.GraphPane.IsIgnoreInitial"/>).  If true, then initial
            data points where the Y value is zero are not included when
            automatically determining the scale <see cref="P:ZedGraph.Axis.Min"/>,
            <see cref="P:ZedGraph.Axis.Max"/>, and <see cref="P:ZedGraph.Axis.Step"/> size.  All data after
            the first non-zero Y value are included.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="xLBound">The lower bound of allowable data for the X values.  This
            value allows you to subset the data values.  If the X range is bounded, then
            the resulting range for Y will reflect the Y values for the points within the X
            bounds.  Use <see cref="F:System.Double.MinValue"/> to have no bound.</param>
            <param name="xUBound">The upper bound of allowable data for the X values.  This
            value allows you to subset the data values.  If the X range is bounded, then
            the resulting range for Y will reflect the Y values for the points within the X
            bounds.  Use <see cref="F:System.Double.MaxValue"/> to have no bound.</param>
            <param name="yLBound">The lower bound of allowable data for the Y values.  This
            value allows you to subset the data values.  If the Y range is bounded, then
            the resulting range for X will reflect the X values for the points within the Y
            bounds.  Use <see cref="F:System.Double.MinValue"/> to have no bound.</param>
            <param name="yUBound">The upper bound of allowable data for the Y values.  This
            value allows you to subset the data values.  If the Y range is bounded, then
            the resulting range for X will reflect the X values for the points within the Y
            bounds.  Use <see cref="F:System.Double.MaxValue"/> to have no bound.</param>
            <seealso cref="P:ZedGraph.GraphPane.IsBoundedRanges"/>
        </member>
        <member name="P:ZedGraph.HiLowBarItem.Bar">
            <summary>
            Gets a reference to the <see cref="T:ZedGraph.HiLowBar"/> class defined
            for this <see cref="T:ZedGraph.HiLowBarItem"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.HiLowBarItem.BarBase">
            <summary>
            Determines which <see cref="T:ZedGraph.Axis"/> is the independent axis
            for this <see cref="T:ZedGraph.HiLowBarItem"/>.
            </summary>
            <remarks>Typically this is set to <see cref="F:ZedGraph.BarBase.X"/> for
            vertical bars.  If it is set to <see cref="F:ZedGraph.BarBase.Y"/> or
            <see cref="F:ZedGraph.BarBase.Y2"/>, then the bars will be horizontal.
            Note that for <see cref="T:ZedGraph.HiLowBarItem"/>'s, the <see cref="P:ZedGraph.HiLowBarItem.BarBase"/>
            is set individually for each curve.  You can have one
            <see cref="T:ZedGraph.HiLowBarItem"/> aligned vertically, and the next
            horizontally.  This is in contrast to <see cref="T:ZedGraph.BarItem"/>'s, in
            which the <see cref="T:ZedGraph.BarBase"/> is set according to
            the global <see cref="P:ZedGraph.GraphPane.BarBase"/>, so all
            <see cref="T:ZedGraph.BarItem"/>'s on a <see cref="T:ZedGraph.GraphPane"/> will have the
            same alignment.
            </remarks>
        </member>
        <member name="T:ZedGraph.ImageItem">
            <summary>
            A class that represents an image object on the graph.  A list of
            <see cref="T:ZedGraph.GraphItem"/> objects is maintained by the <see cref="T:ZedGraph.GraphItemList"/>
            collection class.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.8 $ $Date: 2005/02/13 17:31:41 $ </version>
        </member>
        <member name="F:ZedGraph.ImageItem.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.ImageItem.image">
            <summary>
            Private field that stores the image.  Use the public property <see cref="P:ZedGraph.ImageItem.Image"/>
            to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.ImageItem.isScaled">
            <summary>
            Private field that determines if the image will be scaled to the output rectangle.
            </summary>
            <value>true to scale the image, false to draw the image unscaled, but clipped
            to the destination rectangle</value>
        </member>
        <member name="M:ZedGraph.ImageItem.#ctor">
            <overloads>Constructors for the <see cref="T:ZedGraph.ImageItem"/> object</overloads>
            <summary>
            A default constructor that places a null <see cref="T:System.Drawing.Image"/> at a
            default <see cref="T:System.Drawing.RectangleF"/> of (0,0,1,1)
            </summary>
        </member>
        <member name="M:ZedGraph.ImageItem.#ctor(System.Drawing.Image,System.Drawing.RectangleF)">
            <summary>
            A constructor that allows the <see cref="T:System.Drawing.Image"/> and
            <see cref="T:System.Drawing.RectangleF"/> location for the
            <see cref="T:ZedGraph.ImageItem"/> to be pre-specified.
            </summary>
            <param name="image">A <see cref="T:System.Drawing.Image"/> class that defines
            the image</param>
            <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> struct that defines the
            image location, specifed in units based on the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.</param>
        </member>
        <member name="M:ZedGraph.ImageItem.#ctor(System.Drawing.Image,System.Drawing.RectangleF,ZedGraph.CoordType,ZedGraph.AlignH,ZedGraph.AlignV)">
            <overloads>Constructors for the <see cref="T:ZedGraph.ImageItem"/> object</overloads>
            <summary>
            A constructor that allows the <see cref="T:System.Drawing.Image"/> and
            <see cref="T:System.Drawing.RectangleF"/> location for the
            <see cref="T:ZedGraph.ImageItem"/> to be pre-specified.
            </summary>
            <param name="image">A <see cref="T:System.Drawing.Image"/> class that defines
            the image</param>
            <param name="rect">A <see cref="T:System.Drawing.RectangleF"/> struct that defines the
            image location, specifed in units based on the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.</param>
            <param name="coordType">The <see cref="T:ZedGraph.CoordType"/> enum value that
            indicates what type of coordinate system the x and y parameters are
            referenced to.</param>
            <param name="alignH">The <see cref="T:ZedGraph.AlignH"/> enum that specifies
            the horizontal alignment of the object with respect to the (x,y) location</param>
            <param name="alignV">The <see cref="T:ZedGraph.AlignV"/> enum that specifies
            the vertical alignment of the object with respect to the (x,y) location</param>
        </member>
        <member name="M:ZedGraph.ImageItem.#ctor(System.Drawing.Image,System.Single,System.Single,System.Single,System.Single)">
            <overloads>Constructors for the <see cref="T:ZedGraph.ImageItem"/> object</overloads>
            <summary>
            A constructor that allows the <see cref="T:System.Drawing.Image"/> and
            individual <see cref="T:System.Single"/> coordinate locations for the
            <see cref="T:ZedGraph.ImageItem"/> to be pre-specified.
            </summary>
            <param name="image">A <see cref="T:System.Drawing.Image"/> class that defines
            the image</param>
            <param name="left">The position of the left side of the rectangle that defines the
            <see cref="T:ZedGraph.ImageItem"/> location.  The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.</param>
            <param name="top">The position of the top side of the rectangle that defines the
            <see cref="T:ZedGraph.ImageItem"/> location.  The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.</param>
            <param name="width">The width of the rectangle that defines the
            <see cref="T:ZedGraph.ImageItem"/> location.  The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.</param>
            <param name="height">The height of the rectangle that defines the
            <see cref="T:ZedGraph.ImageItem"/> location.  The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.</param>
        </member>
        <member name="M:ZedGraph.ImageItem.#ctor(ZedGraph.ImageItem)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.ImageItem"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.ImageItem.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.ImageItem"/></returns>
        </member>
        <member name="M:ZedGraph.ImageItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.ImageItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.ImageItem.Draw(System.Drawing.Graphics,ZedGraph.PaneBase,System.Single)">
            <summary>
            Render this object to the specified <see cref="T:System.Drawing.Graphics"/> device
            This method is normally only called by the Draw method
            of the parent <see cref="T:ZedGraph.GraphItemList"/> collection object.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.ImageItem.PointInBox(System.Drawing.PointF,ZedGraph.PaneBase,System.Drawing.Graphics,System.Single)">
            <summary>
            Determine if the specified screen point lies inside the bounding box of this
            <see cref="T:ZedGraph.ArrowItem"/>.  The bounding box is calculated assuming a distance
            of <see cref="F:ZedGraph.GraphPane.Default.NearestTol"/> pixels around the arrow segment.
            </summary>
            <param name="pt">The screen point, in pixels</param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>true if the point lies in the bounding box, false otherwise</returns>
        </member>
        <member name="P:ZedGraph.ImageItem.Image">
            <summary>
            The <see cref="T:System.Drawing.Image"/> object.
            </summary>
            <value> A <see cref="T:System.Drawing.Image"/> class reference. </value>
        </member>
        <member name="P:ZedGraph.ImageItem.IsScaled">
            <summary>
            Gets or sets a property that determines if the image will be scaled to the
            output rectangle (see <see cref="T:ZedGraph.Location"/>).
            </summary>
            <value>true to scale the image, false to draw the image unscaled, but clipped
            to the destination rectangle</value>
        </member>
        <member name="T:ZedGraph.ImageItem.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.ImageItem"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.ImageItem.Default.IsScaled">
            <summary>
            Default value for the <see cref="T:ZedGraph.ImageItem"/>
            <see cref="P:ZedGraph.ImageItem.IsScaled"/> property.
            </summary>
        </member>
        <member name="T:ZedGraph.Legend">
            <summary>
            This class encapsulates the chart <see cref="T:ZedGraph.Legend"/> that is displayed
            in the <see cref="T:ZedGraph.GraphPane"/>
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.23 $ $Date: 2005/03/01 01:27:27 $ </version>
        </member>
        <member name="F:ZedGraph.Legend.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.rect">
            <summary> Private field to hold the bounding rectangle around the legend.
            This bounding rectangle varies with the number of legend entries, font sizes,
            etc., and is re-calculated by <see cref="M:ZedGraph.Legend.CalcRect(System.Drawing.Graphics,ZedGraph.PaneBase,System.Single,System.Drawing.RectangleF@)"/> at each redraw.
            Use the public readonly property <see cref="P:ZedGraph.Legend.Rect"/> to access this
            rectangle.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.position">
            <summary>Private field to hold the legend location setting.  This field
            contains the <see cref="T:ZedGraph.LegendPos"/> enum type to specify the area of
            the graph where the legend will be positioned.  Use the public property
            <see cref="T:ZedGraph.LegendPos"/> to access this value.
            </summary>
            <seealso cref="F:ZedGraph.Legend.Default.Position"/>
        </member>
        <member name="F:ZedGraph.Legend.isHStack">
            <summary>
            Private field to enable/disable horizontal stacking of the legend entries.
            If this value is false, then the legend entries will always be a single column.
            Use the public property <see cref="P:ZedGraph.Legend.IsHStack"/> to access this value.
            </summary>
            <seealso cref="F:ZedGraph.Legend.Default.IsHStack"/>
        </member>
        <member name="F:ZedGraph.Legend.isVisible">
            <summary>
            Private field to enable/disable drawing of the entire legend.
            If this value is false, then the legend will not be drawn.
            Use the public property <see cref="P:ZedGraph.Legend.IsVisible"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.fill">
            <summary>
            Private field that stores the <see cref="T:ZedGraph.Fill"/> data for this
            <see cref="T:ZedGraph.Legend"/>.  Use the public property <see cref="P:ZedGraph.Legend.Fill"/> to
            access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.border">
            <summary>
            Private field that stores the <see cref="T:ZedGraph.Border"/> data for this
            <see cref="T:ZedGraph.Legend"/>.  Use the public property <see cref="P:ZedGraph.Legend.Border"/> to
            access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.fontSpec">
            <summary>
            Private field to maintain the <see cref="P:ZedGraph.Legend.FontSpec"/> class that
            maintains font attributes for the entries in this legend.  Use
            the <see cref="P:ZedGraph.Legend.FontSpec"/> property to access this class.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.location">
            <summary>
            Private field to maintain the <see cref="T:ZedGraph.Legend"/> location.  This object
            is only applicable if the <see cref="P:ZedGraph.Legend.Position"/> property is set to
            <see cref="F:ZedGraph.LegendPos.Float"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.hStack">
            <summary>
            Private temporary field to maintain the number of columns (horizontal stacking) to be used
            for drawing the <see cref="T:ZedGraph.Legend"/>.  This value is only valid during a draw operation.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.legendItemWidth">
            <summary>
            Private temporary field to maintain the width of each column in the
            <see cref="T:ZedGraph.Legend"/>.  This value is only valid during a draw operation.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.legendItemHeight">
            <summary>
            Private temporary field to maintain the height of each row in the
            <see cref="T:ZedGraph.Legend"/>.  This value is only valid during a draw operation.
            </summary>
        </member>
        <member name="M:ZedGraph.Legend.#ctor">
            <summary>
            Default constructor that sets all <see cref="T:ZedGraph.Legend"/> properties to default
            values as defined in the <see cref="T:ZedGraph.Legend.Default"/> class.
            </summary>
        </member>
        <member name="M:ZedGraph.Legend.#ctor(ZedGraph.Legend)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The XAxis object from which to copy</param>
        </member>
        <member name="M:ZedGraph.Legend.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the Legend</returns>
        </member>
        <member name="M:ZedGraph.Legend.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.Legend.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.Legend.Draw(System.Drawing.Graphics,ZedGraph.PaneBase,System.Single)">
            <summary>
            Render the <see cref="T:ZedGraph.Legend"/> to the specified <see cref="T:System.Drawing.Graphics"/> device.
            </summary>
            <remarks>
            This method is normally only called by the Draw method
            of the parent <see cref="T:ZedGraph.GraphPane"/> object.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.Legend.FindPoint(System.Drawing.PointF,ZedGraph.PaneBase,System.Single,System.Int32@)">
            <summary>
            Determine if a mouse point is within the legend, and if so, which legend
            entry (<see cref="T:ZedGraph.CurveItem"/>) is nearest.
            </summary>
            <param name="mousePt">The screen point, in pixel coordinates.</param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <param name="index">The index number of the <see cref="T:ZedGraph.CurveItem"/> legend
            entry that is under the mouse point.  The <see cref="T:ZedGraph.CurveItem"/> object is
            accessible via <see cref="P:ZedGraph.GraphPane.CurveList">CurveList[index]</see>.
            </param>
            <returns>true if the mouse point is within the <see cref="T:ZedGraph.Legend"/> bounding
            box, false otherwise.</returns>
            <seealso cref="M:ZedGraph.GraphPane.FindNearestObject(System.Drawing.PointF,System.Drawing.Graphics,System.Object@,System.Int32@)"/>
        </member>
        <member name="M:ZedGraph.Legend.CalcRect(System.Drawing.Graphics,ZedGraph.PaneBase,System.Single,System.Drawing.RectangleF@)">
            <summary>
            Calculate the <see cref="T:ZedGraph.Legend"/> rectangle (<see cref="P:ZedGraph.Legend.Rect"/>),
            taking into account the number of required legend
            entries, and the legend drawing preferences.
            </summary>
            <remarks>Adjust the size of the
            <see cref="P:ZedGraph.GraphPane.AxisRect"/> for the parent <see cref="T:ZedGraph.GraphPane"/> to accomodate the
            space required by the legend.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <param name="tAxisRect">
            The rectangle that contains the area bounded by the axes, in pixel units.
            <seealso cref="P:ZedGraph.GraphPane.AxisRect">AxisRect</seealso>
            </param>
        </member>
        <member name="P:ZedGraph.Legend.Rect">
            <summary>
            Get the bounding rectangle for the <see cref="T:ZedGraph.Legend"/> in screen coordinates
            </summary>
            <value>A screen rectangle in pixel units</value>
        </member>
        <member name="P:ZedGraph.Legend.FontSpec">
            <summary>
            Access to the <see cref="T:ZedGraph.FontSpec"/> class used to render
            the <see cref="T:ZedGraph.Legend"/> entries
            </summary>
            <value>A reference to a <see cref="T:ZedGraph.Legend"/> object</value>
            <seealso cref="F:ZedGraph.Legend.Default.FontColor"/>
            <seealso cref="F:ZedGraph.Legend.Default.FontBold"/>
            <seealso cref="F:ZedGraph.Legend.Default.FontItalic"/>
            <seealso cref="F:ZedGraph.Legend.Default.FontUnderline"/>
            <seealso cref="F:ZedGraph.Legend.Default.FontFamily"/>
            <seealso cref="F:ZedGraph.Legend.Default.FontSize"/>
        </member>
        <member name="P:ZedGraph.Legend.IsVisible">
            <summary>
            Gets or sets a property that shows or hides the <see cref="T:ZedGraph.Legend"/> entirely
            </summary>
            <value> true to show the <see cref="T:ZedGraph.Legend"/>, false to hide it </value>
            <seealso cref="F:ZedGraph.Legend.Default.IsVisible"/>
        </member>
        <member name="P:ZedGraph.Legend.Border">
            <summary>
            The <see cref="P:ZedGraph.Legend.Border"/> class used to draw the border border around this <see cref="T:ZedGraph.Legend"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.Legend.Fill">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.Fill"/> data for this
            <see cref="T:ZedGraph.Legend"/> background.
            </summary>
        </member>
        <member name="P:ZedGraph.Legend.IsHStack">
            <summary>
            Sets or gets a property that allows the <see cref="T:ZedGraph.Legend"/> items to
            stack horizontally in addition to the vertical stacking
            </summary>
            <value>true to allow horizontal stacking, false otherwise
            </value>
            <seealso cref="F:ZedGraph.Legend.Default.IsHStack"/>
        </member>
        <member name="P:ZedGraph.Legend.Position">
            <summary>
            Sets or gets the location of the <see cref="T:ZedGraph.Legend"/> on the
            <see cref="T:ZedGraph.GraphPane"/> using the <see cref="T:ZedGraph.LegendPos"/> enum type
            </summary>
            <seealso cref="F:ZedGraph.Legend.Default.Position"/>
        </member>
        <member name="P:ZedGraph.Legend.Location">
            <summary>
            Gets or sets the <see cref="P:ZedGraph.Legend.Location"/> data for the <see cref="T:ZedGraph.Legend"/>.
            This property is only applicable if <see cref="P:ZedGraph.Legend.Position"/> is set
            to <see cref="F:ZedGraph.LegendPos.Float"/>.
            </summary>
        </member>
        <member name="T:ZedGraph.Legend.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.Legend"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.BorderWidth">
            <summary>
            The default pen width for the <see cref="T:ZedGraph.Legend"/> border border.
            (<see cref="P:ZedGraph.Border.PenWidth"/> property).  Units are in pixels.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.BorderColor">
            <summary>
            The default color for the <see cref="T:ZedGraph.Legend"/> border border.
            (<see cref="P:ZedGraph.Border.Color"/> property). 
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.FillColor">
            <summary>
            The default color for the <see cref="T:ZedGraph.Legend"/> background.
            (<see cref="P:ZedGraph.Fill.Color"/> property).  Use of this
            color depends on the status of the <see cref="P:ZedGraph.Fill.Type"/>
            property.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.FillBrush">
            <summary>
            The default custom brush for filling in this <see cref="T:ZedGraph.Legend"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.FillType">
            <summary>
            The default fill mode for the <see cref="T:ZedGraph.Legend"/> background.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.Position">
            <summary>
            The default location for the <see cref="T:ZedGraph.Legend"/> on the graph
            (<see cref="P:ZedGraph.Legend.Location"/> property).  This property is
            defined as a <see cref="T:ZedGraph.LegendPos"/> enumeration.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.IsBorderVisible">
            <summary>
            The default border mode for the <see cref="T:ZedGraph.Legend"/>.
            (<see cref="P:ZedGraph.Border.IsVisible"/> property). true
            to draw a border around the <see cref="P:ZedGraph.Legend.Rect"/>,
            false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.IsVisible">
            <summary>
            The default display mode for the <see cref="T:ZedGraph.Legend"/>.
            (<see cref="P:ZedGraph.Legend.IsVisible"/> property). true
            to show the legend,
            false to hide it.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.IsFilled">
            <summary>
            The default fill mode for the <see cref="T:ZedGraph.Legend"/> background
            (<see cref="P:ZedGraph.Fill.Type"/> property).
            true to fill-in the background with color,
            false to leave the background transparent.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.IsHStack">
            <summary>
            The default horizontal stacking mode for the <see cref="T:ZedGraph.Legend"/>
            (<see cref="P:ZedGraph.Legend.IsHStack"/> property).
            true to allow horizontal legend item stacking, false to allow
            only vertical legend orientation.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.FontFamily">
            <summary>
            The default font family for the <see cref="T:ZedGraph.Legend"/> entries
            (<see cref="P:ZedGraph.FontSpec.Family"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.FontSize">
            <summary>
            The default font size for the <see cref="T:ZedGraph.Legend"/> entries
            (<see cref="P:ZedGraph.FontSpec.Size"/> property).  Units are
            in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.FontColor">
            <summary>
            The default font color for the <see cref="T:ZedGraph.Legend"/> entries
            (<see cref="P:ZedGraph.FontSpec.FontColor"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.FontBold">
            <summary>
            The default font bold mode for the <see cref="T:ZedGraph.Legend"/> entries
            (<see cref="P:ZedGraph.FontSpec.IsBold"/> property). true
            for a bold typeface, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.FontItalic">
            <summary>
            The default font italic mode for the <see cref="T:ZedGraph.Legend"/> entries
            (<see cref="P:ZedGraph.FontSpec.IsItalic"/> property). true
            for an italic typeface, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.FontUnderline">
            <summary>
            The default font underline mode for the <see cref="T:ZedGraph.Legend"/> entries
            (<see cref="P:ZedGraph.FontSpec.IsUnderline"/> property). true
            for an underlined typeface, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.FontFillColor">
            <summary>
            The default color for filling in the scale text background
            (see <see cref="P:ZedGraph.Fill.Color"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.FontFillBrush">
            <summary>
            The default custom brush for filling in the scale text background
            (see <see cref="P:ZedGraph.Fill.Brush"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Legend.Default.FontFillType">
            <summary>
            The default fill mode for filling in the scale text background
            (see <see cref="P:ZedGraph.Fill.Type"/> property).
            </summary>
        </member>
        <member name="T:ZedGraph.Line">
            <summary>
            A class representing all the characteristics of the Line
            segments that make up a curve on the graph.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.13 $ $Date: 2005/03/09 06:42:36 $ </version>
        </member>
        <member name="F:ZedGraph.Line.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.Line.width">
            <summary>
            Private field that stores the pen width for this
            <see cref="T:ZedGraph.Line"/>.  Use the public
            property <see cref="P:ZedGraph.Line.Width"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Line.style">
            <summary>
            Private field that stores the <see cref="T:System.Drawing.Drawing2D.DashStyle"/> for this
            <see cref="T:ZedGraph.Line"/>.  Use the public
            property <see cref="P:ZedGraph.Line.Style"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Line.isVisible">
            <summary>
            Private field that stores the visibility of this
            <see cref="T:ZedGraph.Line"/>.  Use the public
            property <see cref="P:ZedGraph.Line.IsVisible"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Line.isSmooth">
            <summary>
            Private field that stores the smoothing flag for this
            <see cref="T:ZedGraph.Line"/>.  Use the public
            property <see cref="P:ZedGraph.Line.IsSmooth"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Line.smoothTension">
            <summary>
            Private field that stores the smoothing tension
            for this <see cref="T:ZedGraph.Line"/>.  Use the public property
            <see cref="P:ZedGraph.Line.SmoothTension"/> to access this value.
            </summary>
            <value>A floating point value indicating the level of smoothing.
            0.0F for no smoothing, 1.0F for lots of smoothing, &gt;1.0 for odd
            smoothing.</value>
            <seealso cref="P:ZedGraph.Line.IsSmooth"/>
            <seealso cref="F:ZedGraph.Line.Default.IsSmooth"/>
            <seealso cref="F:ZedGraph.Line.Default.SmoothTension"/>
        </member>
        <member name="F:ZedGraph.Line.color">
            <summary>
            Private field that stores the color of this
            <see cref="T:ZedGraph.Line"/>.  Use the public
            property <see cref="P:ZedGraph.Line.Color"/> to access this value.  If this value is
            false, the line will not be shown (but the <see cref="T:ZedGraph.Symbol"/> may
            still be shown).
            </summary>
        </member>
        <member name="F:ZedGraph.Line.stepType">
            <summary>
            Private field that stores the <see cref="T:ZedGraph.StepType"/> for this
            <see cref="T:ZedGraph.CurveItem"/>.  Use the public
            property <see cref="P:ZedGraph.Line.StepType"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Line.fill">
            <summary>
            Private field that stores the <see cref="T:ZedGraph.Fill"/> data for this
            <see cref="T:ZedGraph.Line"/>.  Use the public property <see cref="P:ZedGraph.Line.Fill"/> to
            access this value.
            </summary>
        </member>
        <member name="M:ZedGraph.Line.#ctor">
            <summary>
            Default constructor that sets all <see cref="T:ZedGraph.Line"/> properties to default
            values as defined in the <see cref="T:ZedGraph.Line.Default"/> class.
            </summary>
        </member>
        <member name="M:ZedGraph.Line.#ctor(System.Drawing.Color)">
            <summary>
            Constructor that sets the color property to the specified value, and sets
            the remaining <see cref="T:ZedGraph.Line"/> properties to default
            values as defined in the <see cref="T:ZedGraph.Line.Default"/> class.
            </summary>
            <param name="color">The color to assign to this new Line object</param>
        </member>
        <member name="M:ZedGraph.Line.#ctor(ZedGraph.Line)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The Line object from which to copy</param>
        </member>
        <member name="M:ZedGraph.Line.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the Line</returns>
        </member>
        <member name="M:ZedGraph.Line.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.Line.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.Line.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,ZedGraph.LineItem,System.Boolean,System.Single)">
            <summary>
            Do all rendering associated with this <see cref="T:ZedGraph.Line"/> to the specified
            <see cref="T:System.Drawing.Graphics"/> device.  This method is normally only
            called by the Draw method of the parent <see cref="T:ZedGraph.LineItem"/> object.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="curve">A <see cref="T:ZedGraph.LineItem"/> representing this
            curve.</param>
            <param name="isY2Axis">A value indicating to which Y axis this curve is assigned.
            true for the "Y2" axis, false for the "Y" axis.</param>
        </member>
        <member name="M:ZedGraph.Line.DrawSegment(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Render a single <see cref="T:ZedGraph.Line"/> segment to the specified
            <see cref="T:System.Drawing.Graphics"/> device.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <param name="x1">The x position of the starting point that defines the
            line segment in screen pixel units</param>
            <param name="y1">The y position of the starting point that defines the
            line segment in screen pixel units</param>
            <param name="x2">The x position of the ending point that defines the
            line segment in screen pixel units</param>
            <param name="y2">The y position of the ending point that defines the
            line segment in screen pixel units</param>
        </member>
        <member name="M:ZedGraph.Line.DrawSmoothFilledCurve(System.Drawing.Graphics,ZedGraph.GraphPane,ZedGraph.LineItem,System.Boolean,System.Single)">
            <summary>
            Draw the this <see cref="T:ZedGraph.CurveItem"/> to the specified <see cref="T:System.Drawing.Graphics"/>
            device using the specified smoothing property (<see cref="P:ZedGraph.Line.SmoothTension"/>).
            The routine draws the line segments and the area fill (if any, see <see cref="T:ZedGraph.FillType"/>;
            the symbols are drawn by the <see cref="M:ZedGraph.Symbol.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,ZedGraph.LineItem,System.Boolean,System.Single)"/> method.  This method
            is normally only called by the Draw method of the
            <see cref="T:ZedGraph.CurveItem"/> object.  Note that the <see cref="P:ZedGraph.Line.StepType"/> property
            is ignored for smooth lines (e.g., when <see cref="P:ZedGraph.Line.IsSmooth"/> is true).
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="curve">A <see cref="T:ZedGraph.LineItem"/> representing this
            curve.</param>
            <param name="isY2Axis">A value indicating to which Y axis this curve is assigned.
            true for the "Y2" axis, false for the "Y" axis.</param>
        </member>
        <member name="M:ZedGraph.Line.DrawCurve(System.Drawing.Graphics,ZedGraph.GraphPane,ZedGraph.LineItem,System.Boolean,System.Single)">
            <summary>
            Draw the this <see cref="T:ZedGraph.CurveItem"/> to the specified <see cref="T:System.Drawing.Graphics"/>
            device.  The format (stair-step or line) of the curve is
            defined by the <see cref="P:ZedGraph.Line.StepType"/> property.  The routine
            only draws the line segments; the symbols are drawn by the
            <see cref="M:ZedGraph.Symbol.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,ZedGraph.LineItem,System.Boolean,System.Single)"/> method.  This method
            is normally only called by the Draw method of the
            <see cref="T:ZedGraph.CurveItem"/> object
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="curve">A <see cref="T:ZedGraph.LineItem"/> representing this
            curve.</param>
            <param name="isY2Axis">A value indicating to which Y axis this curve is assigned.
            true for the "Y2" axis, false for the "Y" axis.</param>
        </member>
        <member name="M:ZedGraph.Line.BuildPointsArray(ZedGraph.GraphPane,ZedGraph.LineItem,System.Boolean,System.Drawing.PointF[]@,System.Int32@)">
            <summary>
            Build an array of <see cref="T:System.Drawing.PointF"/> values (pixel coordinates) that represents
            the current curve.  Note that this drawing routine ignores <see cref="F:ZedGraph.PointPair.Missing"/>
            values, but it does not "break" the line to indicate values are missing.
            </summary>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.</param>
            <param name="curve">A <see cref="T:ZedGraph.LineItem"/> representing this
            curve.</param>
            <param name="isY2Axis">A value indicating to which Y axis this curve is assigned.
            true for the "Y2" axis, false for the "Y" axis.</param>
            <param name="arrPoints">An array of <see cref="T:System.Drawing.PointF"/> values in pixel
            coordinates representing the current curve.</param>
            <param name="count">The number of points contained in the "arrPoints"
            parameter.</param>
            <returns>true for a successful points array build, false for data problems</returns>
        </member>
        <member name="M:ZedGraph.Line.BuildLowPointsArray(ZedGraph.GraphPane,ZedGraph.LineItem,System.Boolean,System.Drawing.PointF[]@,System.Int32@)">
            <summary>
            Build an array of <see cref="T:System.Drawing.PointF"/> values (pixel coordinates) that represents
            the low values for the current curve.
            </summary>
            <remarks>Note that this drawing routine ignores <see cref="F:ZedGraph.PointPair.Missing"/>
            values, but it does not "break" the line to indicate values are missing.
            </remarks>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.</param>
            <param name="curve">A <see cref="T:ZedGraph.LineItem"/> representing this
            curve.</param>
            <param name="isY2Axis">A value indicating to which Y axis this curve is assigned.
            true for the "Y2" axis, false for the "Y" axis.</param>
            <param name="arrPoints">An array of <see cref="T:System.Drawing.PointF"/> values in pixel
            coordinates representing the current curve.</param>
            <param name="count">The number of points contained in the "arrPoints"
            parameter.</param>
            <returns>true for a successful points array build, false for data problems</returns>
        </member>
        <member name="M:ZedGraph.Line.CloseCurve(ZedGraph.GraphPane,ZedGraph.LineItem,System.Drawing.PointF[],System.Boolean,System.Int32,System.Double,System.Drawing.Drawing2D.GraphicsPath)">
            <summary>
            Close off a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> that defines a curve
            </summary>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.</param>
            <param name="curve">A <see cref="T:ZedGraph.LineItem"/> representing this
            curve.</param>
            <param name="arrPoints">An array of <see cref="T:System.Drawing.PointF"/> values in screen pixel
            coordinates representing the current curve.</param>
            <param name="isY2Axis">A value indicating to which Y axis this curve is assigned.
            true for the "Y2" axis, false for the "Y" axis.</param>
            <param name="count">The number of points contained in the "arrPoints"
            parameter.</param>
            <param name="yMin">The Y axis value location where the X axis crosses.</param>
            <param name="path">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> class that represents the curve.</param>
        </member>
        <member name="P:ZedGraph.Line.Color">
            <summary>
            The color of the <see cref="T:ZedGraph.Line"/>
            </summary>
            <seealso cref="F:ZedGraph.Line.Default.Color"/>
        </member>
        <member name="P:ZedGraph.Line.Style">
            <summary>
            The style of the <see cref="T:ZedGraph.Line"/>, defined as a <see cref="T:System.Drawing.Drawing2D.DashStyle"/> enum.
            This allows the line to be solid, dashed, or dotted.
            </summary>
            <seealso cref="F:ZedGraph.Line.Default.Style"/>
        </member>
        <member name="P:ZedGraph.Line.Width">
            <summary>
            The pen width used to draw the <see cref="T:ZedGraph.Line"/>, in points (1/72 inch)
            </summary>
            <seealso cref="F:ZedGraph.Line.Default.Width"/>
        </member>
        <member name="P:ZedGraph.Line.IsVisible">
            <summary>
            Gets or sets a property that shows or hides the <see cref="T:ZedGraph.Line"/>.
            </summary>
            <value>true to show the line, false to hide it</value>
            <seealso cref="F:ZedGraph.Line.Default.IsVisible"/>
        </member>
        <member name="P:ZedGraph.Line.IsSmooth">
            <summary>
            Gets or sets a property that determines if this <see cref="T:ZedGraph.Line"/>
            will be drawn smooth.  The "smoothness" is controlled by
            the <see cref="P:ZedGraph.Line.SmoothTension"/> property.
            </summary>
            <value>true to smooth the line, false to just connect the dots
            with linear segments</value>
            <seealso cref="P:ZedGraph.Line.SmoothTension"/>
            <seealso cref="F:ZedGraph.Line.Default.IsSmooth"/>
            <seealso cref="F:ZedGraph.Line.Default.SmoothTension"/>
        </member>
        <member name="P:ZedGraph.Line.SmoothTension">
            <summary>
            Gets or sets a property that determines the smoothing tension
            for this <see cref="T:ZedGraph.Line"/>.  This property is only used if
            <see cref="P:ZedGraph.Line.IsSmooth"/> is true.  A tension value 0.0 will just
            draw ordinary line segments like an unsmoothed line.  A tension
            value of 1.0 will be smooth.  Values greater than 1.0 will generally
            give odd results.
            </summary>
            <value>A floating point value indicating the level of smoothing.
            0.0F for no smoothing, 1.0F for lots of smoothing, &gt;1.0 for odd
            smoothing.</value>
            <seealso cref="P:ZedGraph.Line.IsSmooth"/>
            <seealso cref="F:ZedGraph.Line.Default.IsSmooth"/>
            <seealso cref="F:ZedGraph.Line.Default.SmoothTension"/>
        </member>
        <member name="P:ZedGraph.Line.StepType">
            <summary>
            Determines if the <see cref="T:ZedGraph.CurveItem"/> will be drawn by directly connecting the
            points from the <see cref="P:ZedGraph.CurveItem.Points"/> data collection,
            or if the curve will be a "stair-step" in which the points are
            connected by a series of horizontal and vertical lines that
            represent discrete, constant values.  Note that the values can
            be forward oriented <c>ForwardStep</c> (<see cref="T:ZedGraph.StepType"/>) or
            rearward oriented <c>RearwardStep</c>.
            That is, the points are defined at the beginning or end
            of the constant value for which they apply, respectively.
            The <see cref="P:ZedGraph.Line.StepType"/> property is ignored for lines
            that have <see cref="P:ZedGraph.Line.IsSmooth"/> set to true.
            </summary>
            <value><see cref="T:ZedGraph.StepType"/> enum value</value>
            <seealso cref="F:ZedGraph.Line.Default.StepType"/>
        </member>
        <member name="P:ZedGraph.Line.Fill">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.Fill"/> data for this
            <see cref="T:ZedGraph.Line"/>.
            </summary>
        </member>
        <member name="T:ZedGraph.Line.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.Line"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.Line.Default.Color">
            <summary>
            The default color for curves (line segments connecting the points).
            This is the default value for the <see cref="P:ZedGraph.Line.Color"/> property.
            </summary>
        </member>
        <member name="F:ZedGraph.Line.Default.FillColor">
            <summary>
            The default color for filling in the area under the curve
            (<see cref="P:ZedGraph.Fill.Color"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Line.Default.FillBrush">
            <summary>
            The default custom brush for filling in the area under the curve
            (<see cref="P:ZedGraph.Fill.Brush"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Line.Default.FillType">
            <summary>
            The default fill mode for the curve (<see cref="P:ZedGraph.Fill.Type"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Line.Default.IsVisible">
            <summary>
            The default mode for displaying line segments (<see cref="P:ZedGraph.Line.IsVisible"/>
            property).  True to show the line segments, false to hide them.
            </summary>
        </member>
        <member name="F:ZedGraph.Line.Default.Width">
            <summary>
            The default width for line segments (<see cref="P:ZedGraph.Line.Width"/> property).
            Units are points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.Line.Default.IsSmooth">
            <summary>
            The default value for the <see cref="P:ZedGraph.Line.IsSmooth"/>
            property.
            </summary>
        </member>
        <member name="F:ZedGraph.Line.Default.SmoothTension">
            <summary>
            The default value for the <see cref="P:ZedGraph.Line.SmoothTension"/> property.
            </summary>
        </member>
        <member name="F:ZedGraph.Line.Default.Style">
            <summary>
            The default drawing style for line segments (<see cref="P:ZedGraph.Line.Style"/> property).
            This is defined with the <see cref="T:System.Drawing.Drawing2D.DashStyle"/> enumeration.
            </summary>
        </member>
        <member name="F:ZedGraph.Line.Default.StepType">
            <summary>
            Default value for the curve type property
            (<see cref="P:ZedGraph.Line.StepType"/>).  This determines if the curve
            will be drawn by directly connecting the points from the
            <see cref="P:ZedGraph.CurveItem.Points"/> data collection,
            or if the curve will be a "stair-step" in which the points are
            connected by a series of horizontal and vertical lines that
            represent discrete, staticant values.  Note that the values can
            be forward oriented <code>ForwardStep</code> (<see cref="F:ZedGraph.Line.Default.StepType"/>) or
            rearward oriented <code>RearwardStep</code>.
            That is, the points are defined at the beginning or end
            of the staticant value for which they apply, respectively.
            </summary>
            <value><see cref="F:ZedGraph.Line.Default.StepType"/> enum value</value>
        </member>
        <member name="T:ZedGraph.LineItem">
            <summary>
            Encapsulates a curve type that is displayed as a line and/or a set of
            symbols at each point.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.8 $ $Date: 2005/02/11 05:20:43 $ </version>
        </member>
        <member name="F:ZedGraph.LineItem.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.LineItem.symbol">
            <summary>
            Private field that stores a reference to the <see cref="T:ZedGraph.Symbol"/>
            class defined for this <see cref="T:ZedGraph.LineItem"/>.  Use the public
            property <see cref="P:ZedGraph.LineItem.Symbol"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.LineItem.line">
            <summary>
            Private field that stores a reference to the <see cref="T:ZedGraph.Line"/>
            class defined for this <see cref="T:ZedGraph.LineItem"/>.  Use the public
            property <see cref="P:ZedGraph.LineItem.Line"/> to access this value.
            </summary>
        </member>
        <member name="M:ZedGraph.LineItem.#ctor(System.String)">
            <summary>
            Create a new <see cref="T:ZedGraph.LineItem"/>, specifying only the legend label for the bar.
            </summary>
            <param name="label">The label that will appear in the legend.</param>
        </member>
        <member name="M:ZedGraph.LineItem.#ctor(System.String,System.Double[],System.Double[],System.Drawing.Color,ZedGraph.SymbolType)">
            <summary>
            Create a new <see cref="T:ZedGraph.LineItem"/> using the specified properties.
            </summary>
            <param name="label">The label that will appear in the legend.</param>
            <param name="x">An array of double precision values that define
            the independent (X axis) values for this curve</param>
            <param name="y">An array of double precision values that define
            the dependent (Y axis) values for this curve</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value that will be applied to
            the <see cref="P:ZedGraph.LineItem.Line"/> and <see cref="P:ZedGraph.LineItem.Symbol"/> properties.
            </param>
            <param name="symbolType">A <see cref="T:ZedGraph.SymbolType"/> enum specifying the
            type of symbol to use for this <see cref="T:ZedGraph.LineItem"/> </param>
        </member>
        <member name="M:ZedGraph.LineItem.#ctor(System.String,ZedGraph.PointPairList,System.Drawing.Color,ZedGraph.SymbolType)">
            <summary>
            Create a new <see cref="T:ZedGraph.LineItem"/> using the specified properties.
            </summary>
            <param name="label">The label that will appear in the legend.</param>
            <param name="points">A <see cref="T:ZedGraph.PointPairList"/> of double precision value pairs that define
            the X and Y values for this curve</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value that will be applied to
            the <see cref="P:ZedGraph.LineItem.Line"/> and <see cref="P:ZedGraph.LineItem.Symbol"/> properties.
            </param>
            <param name="symbolType">A <see cref="T:ZedGraph.SymbolType"/> enum specifying the
            type of symbol to use for this <see cref="T:ZedGraph.LineItem"/> </param>
        </member>
        <member name="M:ZedGraph.LineItem.#ctor(ZedGraph.LineItem)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.LineItem"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.LineItem.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the LineItem</returns>
        </member>
        <member name="M:ZedGraph.LineItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.LineItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.LineItem.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,System.Int32,System.Single)">
            <summary>
            Do all rendering associated with this <see cref="T:ZedGraph.LineItem"/> to the specified
            <see cref="T:System.Drawing.Graphics"/> device.  This method is normally only
            called by the Draw method of the parent <see cref="T:ZedGraph.CurveList"/>
            collection object.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="pos">The ordinal position of the current <see cref="T:ZedGraph.Bar"/>
            curve.</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.LineItem.DrawLegendKey(System.Drawing.Graphics,ZedGraph.GraphPane,System.Drawing.RectangleF,System.Single)">
            <summary>
            Draw a legend key entry for this <see cref="T:ZedGraph.LineItem"/> at the specified location
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> struct that specifies the
            location for the legend key</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.LineItem.MakeUnique(ZedGraph.ColorSymbolRotator)">
            <summary>
            Loads some pseudo unique colors/symbols into this LineItem.  This
            is mainly useful for differentiating a set of new LineItems without
            having to pick your own colors/symbols.
            <seealso cref="M:ZedGraph.CurveItem.MakeUnique(ZedGraph.ColorSymbolRotator)"/>
            </summary>
            <param name="rotator">
            The <see cref="T:ZedGraph.ColorSymbolRotator"/> that is used to pick the color
             and symbol for this method call.
            </param>
        </member>
        <member name="P:ZedGraph.LineItem.Symbol">
            <summary>
            Gets a reference to the <see cref="T:ZedGraph.Symbol"/> class defined
            for this <see cref="T:ZedGraph.LineItem"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.LineItem.Line">
            <summary>
            Gets a reference to the <see cref="T:ZedGraph.Line"/> class defined
            for this <see cref="T:ZedGraph.LineItem"/>.
            </summary>
        </member>
        <member name="T:ZedGraph.Location">
            <summary>
            A class than contains information about the position of an object on the graph.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.9 $ $Date: 2005/01/22 06:20:50 $ </version>
        </member>
        <member name="F:ZedGraph.Location.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.Location.alignV">
            <summary> Private field to store the vertical alignment property for
            this object.  Use the public property <see cref="P:ZedGraph.Location.AlignV"/>
            to access this value.  The value of this field is a <see cref="P:ZedGraph.Location.AlignV"/> enum.
            </summary>
        </member>
        <member name="F:ZedGraph.Location.alignH">
            <summary> Private field to store the horizontal alignment property for
            this object.  Use the public property <see cref="P:ZedGraph.Location.AlignH"/>
            to access this value.  The value of this field is a <see cref="P:ZedGraph.Location.AlignH"/> enum.
            </summary>
        </member>
        <member name="F:ZedGraph.Location.x">
            <summary> Private fields to store the X and Y coordinate positions for
            this object.  Use the public properties <see cref="P:ZedGraph.Location.X"/> and
            <see cref="P:ZedGraph.Location.Y"/> to access these values.  The coordinate type stored here is
            dependent upon the setting of <see cref="P:ZedGraph.Location.CoordinateFrame"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.Location.y">
            <summary> Private fields to store the X and Y coordinate positions for
            this object.  Use the public properties <see cref="P:ZedGraph.Location.X"/> and
            <see cref="P:ZedGraph.Location.Y"/> to access these values.  The coordinate type stored here is
            dependent upon the setting of <see cref="P:ZedGraph.Location.CoordinateFrame"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.Location.width">
            <summary> Private fields to store the X and Y coordinate positions for
            this object.  Use the public properties <see cref="P:ZedGraph.Location.X"/> and
            <see cref="P:ZedGraph.Location.Y"/> to access these values.  The coordinate type stored here is
            dependent upon the setting of <see cref="P:ZedGraph.Location.CoordinateFrame"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.Location.height">
            <summary> Private fields to store the X and Y coordinate positions for
            this object.  Use the public properties <see cref="P:ZedGraph.Location.X"/> and
            <see cref="P:ZedGraph.Location.Y"/> to access these values.  The coordinate type stored here is
            dependent upon the setting of <see cref="P:ZedGraph.Location.CoordinateFrame"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.Location.coordinateFrame">
            <summary>
            Private field to store the coordinate system to be used for defining the
            object position.  Use the public property
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> to access this value. The coordinate system
            is defined with the <see cref="T:ZedGraph.CoordType"/> enum.
            </summary>
        </member>
        <member name="M:ZedGraph.Location.#ctor">
            <summary>
            Default constructor for the <see cref="T:ZedGraph.Location"/> class.
            </summary>
        </member>
        <member name="M:ZedGraph.Location.#ctor(System.Single,System.Single,ZedGraph.CoordType)">
            <summary>
            Constructor for the <see cref="T:ZedGraph.Location"/> class that specifies the
            x, y position and the <see cref="T:ZedGraph.CoordType"/>.
            </summary>
            <remarks>
            The (x,y) position corresponds to the top-left corner;
            </remarks>
            <param name="x">The x position, specified in units of <see paramref="coordType"/>.
            </param>
            <param name="y">The y position, specified in units of <see paramref="coordType"/>.
            </param>
            <param name="coordType">The <see cref="T:ZedGraph.CoordType"/> enum that specifies the
            units for <see paramref="x"/> and <see paramref="y"/></param>
        </member>
        <member name="M:ZedGraph.Location.#ctor(System.Single,System.Single,ZedGraph.CoordType,ZedGraph.AlignH,ZedGraph.AlignV)">
            <summary>
            Constructor for the <see cref="T:ZedGraph.Location"/> class that specifies the
            x, y position and the <see cref="T:ZedGraph.CoordType"/>.
            </summary>
            <remarks>
            The (x,y) position corresponds to the top-left corner;
            </remarks>
            <param name="x">The x position, specified in units of <see paramref="coordType"/>.
            </param>
            <param name="y">The y position, specified in units of <see paramref="coordType"/>.
            </param>
            <param name="coordType">The <see cref="T:ZedGraph.CoordType"/> enum that specifies the
            units for <see paramref="x"/> and <see paramref="y"/></param>
            <param name="alignH">The <see cref="T:ZedGraph.AlignH"/> enum that specifies
            the horizontal alignment of the object with respect to the (x,y) location</param>
            <param name="alignV">The <see cref="T:ZedGraph.AlignV"/> enum that specifies
            the vertical alignment of the object with respect to the (x,y) location</param>
        </member>
        <member name="M:ZedGraph.Location.#ctor(System.Single,System.Single,System.Single,System.Single,ZedGraph.CoordType,ZedGraph.AlignH,ZedGraph.AlignV)">
            <summary>
            Constructor for the <see cref="T:ZedGraph.Location"/> class that specifies the
            (x, y), (width, height), and the <see cref="T:ZedGraph.CoordType"/>.
            </summary>
            <remarks>
            The (x,y) position
            corresponds to the starting position, the (x2, y2) coorresponds to the ending position
            (typically used for <see cref="T:ZedGraph.ArrowItem"/>'s).
            </remarks>
            <param name="x">The x position, specified in units of <see paramref="coordType"/>.
            </param>
            <param name="y">The y position, specified in units of <see paramref="coordType"/>.
            </param>
            <param name="width">The width, specified in units of <see paramref="coordType"/>.
            </param>
            <param name="height">The height, specified in units of <see paramref="coordType"/>.
            </param>
            <param name="coordType">The <see cref="T:ZedGraph.CoordType"/> enum that specifies the
            units for <see paramref="x"/> and <see paramref="y"/></param>
            <param name="alignH">The <see cref="T:ZedGraph.AlignH"/> enum that specifies
            the horizontal alignment of the object with respect to the (x,y) location</param>
            <param name="alignV">The <see cref="T:ZedGraph.AlignV"/> enum that specifies
            the vertical alignment of the object with respect to the (x,y) location</param>
        </member>
        <member name="M:ZedGraph.Location.#ctor(ZedGraph.Location)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.Location"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.Location.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.Location"/> object</returns>
        </member>
        <member name="M:ZedGraph.Location.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.Location.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.Location.Transform(ZedGraph.PaneBase)">
            <summary>
            Transform this <see cref="T:ZedGraph.Location"/> object to display device
            coordinates using the properties of the specified <see cref="T:ZedGraph.GraphPane"/>.
            </summary>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that contains
            the <see cref="T:ZedGraph.Axis"/> classes which will be used for the transform.
            </param>
            <returns>A point in display device coordinates that corresponds to the
            specified user point.</returns>
        </member>
        <member name="M:ZedGraph.Location.Transform(ZedGraph.PaneBase,System.Drawing.PointF,ZedGraph.CoordType)">
            <summary>
            Transform a data point from the specified coordinate type
            (<see cref="T:ZedGraph.CoordType"/>) to display device coordinates (pixels).
            </summary>
            <remarks>
            If <see paramref="pane"/> is not of type <see cref="T:ZedGraph.GraphPane"/>, then
            only the <see cref="F:ZedGraph.CoordType.PaneFraction"/> transformation is available.
            </remarks>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that contains
            the <see cref="T:ZedGraph.Axis"/> classes which will be used for the transform.
            </param>
            <param name="ptF">The X,Y pair that defines the point in user
            coordinates.</param>
            <param name="coord">A <see cref="T:ZedGraph.CoordType"/> type that defines the
            coordinate system in which the X,Y pair is defined.</param>
            <returns>A point in display device coordinates that corresponds to the
            specified user point.</returns>
        </member>
        <member name="M:ZedGraph.Location.TransformTopLeft(ZedGraph.PaneBase,System.Single,System.Single)">
            <summary>
            Transform this <see cref="T:ZedGraph.Location"/> from the coordinate system
            as specified by <see cref="P:ZedGraph.Location.CoordinateFrame"/> to the device coordinates
            of the specified <see cref="T:ZedGraph.PaneBase"/> object.
            </summary>
            <remarks>
            The returned
            <see cref="T:System.Drawing.PointF"/> struct represents the top-left corner of the
            object that honors the <see cref="T:ZedGraph.Location"/> properties.
            The <see cref="P:ZedGraph.Location.AlignH"/> and <see cref="P:ZedGraph.Location.AlignV"/> properties are honored in 
            this transformation.
            </remarks>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that contains
            the <see cref="T:ZedGraph.Axis"/> classes which will be used for the transform.
            </param>
            <param name="width">The width of the object in device pixels</param>
            <param name="height">The height of the object in device pixels</param>
            <returns>The top-left corner of the object</returns>
        </member>
        <member name="M:ZedGraph.Location.TransformTopLeft(ZedGraph.PaneBase)">
            <summary>
            The <see cref="T:System.Drawing.PointF"/> for this object as defined by the
            <see cref="P:ZedGraph.Location.X"/> and <see cref="P:ZedGraph.Location.Y"/>
            properties.
            </summary>
            <remarks>
            This method transforms the location to output device pixel units.
            The <see cref="P:ZedGraph.Location.AlignH"/> and <see cref="P:ZedGraph.Location.AlignV"/> properties are ignored for
            this transformation (see <see cref="M:ZedGraph.Location.TransformTopLeft(ZedGraph.PaneBase,System.Single,System.Single)"/>).
            </remarks>
            <value>A <see cref="T:System.Drawing.PointF"/> in pixel units.</value>
        </member>
        <member name="M:ZedGraph.Location.TransformBottomRight(ZedGraph.PaneBase)">
            <summary>
            The <see cref="T:System.Drawing.PointF"/> for this object as defined by the
            <see cref="P:ZedGraph.Location.X2"/> and <see cref="P:ZedGraph.Location.Y2"/> properties.
            </summary>
            <remarks>
            This method transforms the location to output device pixel units.
            The <see cref="P:ZedGraph.Location.AlignH"/> and <see cref="P:ZedGraph.Location.AlignV"/> properties are ignored for
            this transformation (see <see cref="M:ZedGraph.Location.TransformTopLeft(ZedGraph.PaneBase,System.Single,System.Single)"/>).
            </remarks>
            <value>A <see cref="T:System.Drawing.PointF"/> in pixel units.</value>
        </member>
        <member name="M:ZedGraph.Location.TransformRect(ZedGraph.PaneBase)">
            <summary>
            Transform the <see cref="T:System.Drawing.RectangleF"/> for this object as defined by the
            <see cref="P:ZedGraph.Location.X"/>, <see cref="P:ZedGraph.Location.Y"/>, <see cref="P:ZedGraph.Location.Width"/>, and
            <see cref="P:ZedGraph.Location.Height"/> properties.
            </summary>
            <remarks>
            This method transforms the location to output device pixel units.
            The <see cref="P:ZedGraph.Location.AlignH"/> and <see cref="P:ZedGraph.Location.AlignV"/> properties are honored in 
            this transformation.
            </remarks>
            <value>A <see cref="T:System.Drawing.RectangleF"/> in pixel units.</value>
        </member>
        <member name="P:ZedGraph.Location.AlignH">
            <summary>
            A horizontal alignment parameter for this object specified
            using the <see cref="P:ZedGraph.Location.AlignH"/> enum type.
            </summary>
        </member>
        <member name="P:ZedGraph.Location.AlignV">
            <summary>
            A vertical alignment parameter for this object specified
            using the <see cref="P:ZedGraph.Location.AlignV"/> enum type.
            </summary>
        </member>
        <member name="P:ZedGraph.Location.CoordinateFrame">
            <summary>
            The coordinate system to be used for defining the object position
            </summary>
            <value> The coordinate system is defined with the <see cref="T:ZedGraph.CoordType"/>
            enum</value>
        </member>
        <member name="P:ZedGraph.Location.X">
            <summary>
            The x position of the object.
            </summary>
            <remarks>
            The units of this position
            are specified by the <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.
            The object will be aligned to this position based on the
            <see cref="P:ZedGraph.Location.AlignH"/> property.
            </remarks>
        </member>
        <member name="P:ZedGraph.Location.Y">
            <summary>
            The y position of the object.
            </summary>
            <remarks>
            The units of this position
            are specified by the <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.
            The object will be aligned to this position based on the
            <see cref="P:ZedGraph.Location.AlignV"/> property.
            </remarks>
        </member>
        <member name="P:ZedGraph.Location.X1">
            <summary>
            The x1 position of the object (an alias for the x position).
            </summary>
            <remarks>
            The units of this position
            are specified by the <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.
            The object will be aligned to this position based on the
            <see cref="P:ZedGraph.Location.AlignH"/> property.
            </remarks>
        </member>
        <member name="P:ZedGraph.Location.Y1">
            <summary>
            The y1 position of the object (an alias for the y position).
            </summary>
            <remarks>
            The units of this position
            are specified by the <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.
            The object will be aligned to this position based on the
            <see cref="P:ZedGraph.Location.AlignV"/> property.
            </remarks>
        </member>
        <member name="P:ZedGraph.Location.Width">
            <summary>
            The width of the object.
            </summary>
            <remarks>
            The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.
            </remarks>
        </member>
        <member name="P:ZedGraph.Location.Height">
            <summary>
            The height of the object.
            </summary>
            <remarks>
            The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.
            </remarks>
        </member>
        <member name="P:ZedGraph.Location.X2">
            <summary>
            The x2 position of the object.
            </summary>
            <remarks>
            The units of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.
            The object will be aligned to this position based on the
            <see cref="P:ZedGraph.Location.AlignH"/> property.  This position is only used for
            objects such as <see cref="T:ZedGraph.ArrowItem"/>, where it makes sense
            to have a second coordinate.  Note that the X2 position is stored
            internally as a <see cref="P:ZedGraph.Location.Width"/> offset from <see cref="P:ZedGraph.Location.X"/>.
            </remarks>
        </member>
        <member name="P:ZedGraph.Location.Y2">
            <summary>
            The y2 position of the object.
            </summary>
            <remarks>
            The units of this position
            are specified by the <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.
            The object will be aligned to this position based on the
            <see cref="P:ZedGraph.Location.AlignV"/> property.  This position is only used for
            objects such as <see cref="T:ZedGraph.ArrowItem"/>, where it makes sense
            to have a second coordinate.  Note that the Y2 position is stored
            internally as a <see cref="P:ZedGraph.Location.Height"/> offset from <see cref="P:ZedGraph.Location.Y"/>.
            </remarks>
        </member>
        <member name="P:ZedGraph.Location.Rect">
            <summary>
            The <see cref="T:System.Drawing.RectangleF"/> for this object as defined by the
            <see cref="P:ZedGraph.Location.X"/>, <see cref="P:ZedGraph.Location.Y"/>, <see cref="P:ZedGraph.Location.Width"/>, and
            <see cref="P:ZedGraph.Location.Height"/> properties.
            </summary>
            <value>A <see cref="T:System.Drawing.RectangleF"/> in <see cref="P:ZedGraph.Location.CoordinateFrame"/>
            units.</value>
        </member>
        <member name="P:ZedGraph.Location.TopLeft">
            <summary>
            The top-left <see cref="T:System.Drawing.PointF"/> for this <see cref="T:ZedGraph.Location"/>.
            </summary>
            <value>A <see cref="T:System.Drawing.PointF"/> in <see cref="P:ZedGraph.Location.CoordinateFrame"/> units.</value>
        </member>
        <member name="P:ZedGraph.Location.BottomRight">
            <summary>
            The bottom-right <see cref="T:System.Drawing.PointF"/> for this <see cref="T:ZedGraph.Location"/>.
            </summary>
            <value>A <see cref="T:System.Drawing.PointF"/> in <see cref="P:ZedGraph.Location.CoordinateFrame"/> units.</value>
        </member>
        <member name="T:ZedGraph.MasterPane">
            <summary>
            A collection class containing a list of <see cref="T:ZedGraph.GraphPane"/> objects
            organized together in some form.
            </summary>
            
            <author>John Champion</author>
            <version> $Revision: 3.12 $ $Date: 2005/03/11 17:24:38 $ </version>
        </member>
        <member name="F:ZedGraph.MasterPane.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.MasterPane.paneList">
            <summary>
            Private field that holds a collection of <see cref="T:ZedGraph.GraphPane"/> objects for inclusion
            in this <see cref="T:ZedGraph.MasterPane"/>.  Use the public property <see cref="P:ZedGraph.MasterPane.PaneList"/>
            to access this collection.
            </summary>
        </member>
        <member name="F:ZedGraph.MasterPane.paneLayout">
            <summary>
            private field that saves the paneLayout format specified when
            <see cref="M:ZedGraph.MasterPane.AutoPaneLayout(System.Drawing.Graphics,ZedGraph.PaneLayout)"/> was called. This value will
            default to <see cref="F:ZedGraph.MasterPane.Default.PaneLayout"/> if <see cref="M:ZedGraph.MasterPane.AutoPaneLayout(System.Drawing.Graphics,ZedGraph.PaneLayout)"/>
            was never called.
            </summary>
        </member>
        <member name="F:ZedGraph.MasterPane.innerPaneGap">
            <summary>
            Private field that sets the amount of space between the GraphPanes.  Use the public property
            <see cref="P:ZedGraph.MasterPane.InnerPaneGap"/> to access this value;
            </summary>
        </member>
        <member name="F:ZedGraph.MasterPane.rows">
            <summary>
            private fields that store the number of rows and columns that were specified to the
            <see cref="M:ZedGraph.MasterPane.AutoPaneLayout(System.Drawing.Graphics,System.Int32,System.Int32)"/> method.  These values will both be
            zero if <see cref="M:ZedGraph.MasterPane.AutoPaneLayout(System.Drawing.Graphics,System.Int32,System.Int32)"/> was never called.
            </summary>
        </member>
        <member name="F:ZedGraph.MasterPane.isColumnSpecified">
            <summary>
            Private field that stores the boolean value that determines whether <see cref="F:ZedGraph.MasterPane.countList"/>
            is specifying rows or columns.
            </summary>
        </member>
        <member name="F:ZedGraph.MasterPane.countList">
            <summary>
            private field that stores the row/column item count that was specified to the
            <see cref="M:ZedGraph.MasterPane.AutoPaneLayout(System.Drawing.Graphics,System.Boolean,System.Int32[])"/> method.  This values will be
            null if <see cref="M:ZedGraph.MasterPane.AutoPaneLayout(System.Drawing.Graphics,System.Boolean,System.Int32[])"/> was never called.
            </summary>
        </member>
        <member name="F:ZedGraph.MasterPane.hasUniformLegendEntries">
             <summary>
            Private field that stores a boolean value which signifies whether all 
            <see cref="T:ZedGraph.GraphPane"/>s in the chart use the same entries in their 
            <see cref="T:ZedGraph.Legend"/>  If set to true, only one set of entries will be displayed in 
            this <see cref="T:ZedGraph.Legend"/> instance.  If set to false, this instance will display all 
            entries from all <see cref="T:ZedGraph.GraphPane"/>s.
             </summary>
        </member>
        <member name="M:ZedGraph.MasterPane.#ctor">
            <summary>
            Default constructor for the class.  Sets the <see cref="P:ZedGraph.PaneBase.PaneRect"/> to (0, 0, 500, 375).
            </summary>
        </member>
        <member name="M:ZedGraph.MasterPane.#ctor(System.String,System.Drawing.RectangleF)">
            <summary>
            Default constructor for the class.  Specifies the <see cref="P:ZedGraph.PaneBase.Title"/> of
            the <see cref="T:ZedGraph.MasterPane"/>, and the size of the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.
            </summary>
        </member>
        <member name="M:ZedGraph.MasterPane.#ctor(ZedGraph.MasterPane)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.MasterPane"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.MasterPane.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.MasterPane"/></returns>
        </member>
        <member name="M:ZedGraph.MasterPane.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.MasterPane.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.MasterPane.OnDeserialization(System.Object)">
            <summary>
            Respond to the callback when the MasterPane objects are fully initialized.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="M:ZedGraph.MasterPane.Add(ZedGraph.GraphPane)">
            <summary>
            Add a <see cref="T:ZedGraph.GraphPane"/> object to the <see cref="P:ZedGraph.MasterPane.PaneList"/> collection at the end of the list.
            </summary>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object to
            be added</param>
            <seealso cref="M:System.Collections.IList.Add(System.Object)"/>
        </member>
        <member name="M:ZedGraph.MasterPane.AxisChange(System.Drawing.Graphics)">
            <summary>
            Call <see cref="M:ZedGraph.GraphPane.AxisChange(System.Drawing.Graphics)"/> for all <see cref="T:ZedGraph.GraphPane"/> objects in the
            <see cref="P:ZedGraph.MasterPane.PaneList"/> list.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
        </member>
        <member name="M:ZedGraph.MasterPane.ReSize(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Change the size of the <see cref="P:ZedGraph.PaneBase.PaneRect"/>, and also handle resizing the contents
            by calling <see cref="M:ZedGraph.MasterPane.AutoPaneLayout(System.Drawing.Graphics,ZedGraph.PaneLayout)"/>.
            </summary>
            <remarks>This method will use the same pane layout
            that was specified by the most recent call to <see cref="M:ZedGraph.MasterPane.AutoPaneLayout(System.Drawing.Graphics,ZedGraph.PaneLayout)"/>.  If
            <see cref="M:ZedGraph.MasterPane.AutoPaneLayout(System.Drawing.Graphics,ZedGraph.PaneLayout)"/> has not previously been called, it will default to
            <see cref="F:ZedGraph.MasterPane.Default.PaneLayout"/>.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="paneRect"></param>
        </member>
        <member name="M:ZedGraph.MasterPane.Draw(System.Drawing.Graphics)">
            <summary>
            Render all the <see cref="T:ZedGraph.GraphPane"/> objects in the <see cref="P:ZedGraph.MasterPane.PaneList"/> to the
            specified graphics device.
            </summary>
            <remarks>This method should be part of the Paint() update process.  Calling this routine
            will redraw all
            features of all the <see cref="T:ZedGraph.GraphPane"/> items.  No preparation is required other than
            instantiated <see cref="T:ZedGraph.GraphPane"/> objects that have been added to the list with the
            <see cref="M:ZedGraph.MasterPane.Add(ZedGraph.GraphPane)"/> method.
            </remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
        </member>
        <member name="M:ZedGraph.MasterPane.AutoPaneLayout(System.Drawing.Graphics,ZedGraph.PaneLayout)">
            <summary>
            Automatically set all of the <see cref="T:ZedGraph.GraphPane"/> <see cref="P:ZedGraph.PaneBase.PaneRect"/>'s in
            the list to a reasonable configuration.
            </summary>
            <remarks>This method uses a <see cref="T:ZedGraph.PaneLayout"/> enumeration to describe the type of layout
            to be used.  An explicit (row,column) overload is also available.</remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="paneLayout">A <see cref="T:ZedGraph.PaneLayout"/> enumeration that describes how
            the panes should be laid out within the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.</param>
        </member>
        <member name="M:ZedGraph.MasterPane.AutoPaneLayout(System.Drawing.Graphics,System.Boolean,System.Int32[])">
            <summary>
            Automatically set all of the <see cref="T:ZedGraph.GraphPane"/> <see cref="P:ZedGraph.PaneBase.PaneRect"/>'s in
            the list to the specified configuration.
            </summary>
            <remarks>This method specifies the number of panes in each row or column, allowing for
            irregular layouts.</remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="isColumnSpecified">Specifies whether the number of columns in each row, or
            the number of rows in each column will be specified.  A value of true indicates the
            number of columns in each row are specified in <see paramref="countList"/>.</param>
            <param name="countList">An integer array specifying either the number of columns in
            each row or the number of rows in each column, depending on the value of
            <see paramref="isColumnSpecified"/>.</param>
        </member>
        <member name="M:ZedGraph.MasterPane.AutoPaneLayout(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Automatically set all of the <see cref="T:ZedGraph.GraphPane"/> <see cref="P:ZedGraph.PaneBase.PaneRect"/>'s in
            the list to a reasonable configuration.
            </summary>
            <remarks>This method explicitly specifies the number of rows and columns to use in the layout.
            A more automatic overload, using a <see cref="T:ZedGraph.PaneLayout"/> enumeration, is available.</remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="rows">The number of rows of <see cref="T:ZedGraph.GraphPane"/> objects
            to include in the layout</param>
            <param name="columns">The number of columns of <see cref="T:ZedGraph.GraphPane"/> objects
            to include in the layout</param>
        </member>
        <member name="M:ZedGraph.MasterPane.FindNearestPaneObject(System.Drawing.PointF,System.Drawing.Graphics,ZedGraph.GraphPane@,System.Object@,System.Int32@)">
            <summary>
            Find the pane and the object within that pane that lies closest to the specified
            mouse (screen) point.
            </summary>
            <remarks>
            This method first finds the <see cref="T:ZedGraph.GraphPane"/> within the list that contains
            the specified mouse point.  It then calls the <see cref="M:ZedGraph.GraphPane.FindNearestObject(System.Drawing.PointF,System.Drawing.Graphics,System.Object@,System.Int32@)"/>
            method to determine which object, if any, was clicked.  With the exception of the
            <see paramref="pane"/>, all the parameters in this method are identical to those
            in the <see cref="M:ZedGraph.GraphPane.FindNearestObject(System.Drawing.PointF,System.Drawing.Graphics,System.Object@,System.Int32@)"/> method.
            If the mouse point lies within the <see cref="P:ZedGraph.PaneBase.PaneRect"/> of any 
            <see cref="T:ZedGraph.GraphPane"/> item, then that pane will be returned (otherwise it will be
            null).  Further, within the selected pane, if the mouse point is within the
            bounding box of any of the items (or in the case
            of <see cref="T:ZedGraph.ArrowItem"/> and <see cref="T:ZedGraph.CurveItem"/>, within
            <see cref="F:ZedGraph.GraphPane.Default.NearestTol"/> pixels), then the object will be returned.
            You must check the type of the object to determine what object was
            selected (for example, "if ( object is Legend ) ...").  The
            <see paramref="index"/> parameter returns the index number of the item
            within the selected object (such as the point number within a
            <see cref="T:ZedGraph.CurveItem"/> object.
            </remarks>
            <param name="mousePt">The screen point, in pixel coordinates.</param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object that was clicked.</param>
            <param name="nearestObj">A reference to the nearest object to the
            specified screen point.  This can be any of <see cref="T:ZedGraph.Axis"/>,
            <see cref="T:ZedGraph.Legend"/>, <see cref="P:ZedGraph.PaneBase.Title"/>,
            <see cref="T:ZedGraph.TextItem"/>, <see cref="T:ZedGraph.ArrowItem"/>, or <see cref="T:ZedGraph.CurveItem"/>.
            Note: If the pane title is selected, then the <see cref="T:ZedGraph.GraphPane"/> object
            will be returned.
            </param>
            <param name="index">The index number of the item within the selected object
            (where applicable).  For example, for a <see cref="T:ZedGraph.CurveItem"/> object,
            <see paramref="index"/> will be the index number of the nearest data point,
            accessible via <see cref="P:ZedGraph.CurveItem.Points">CurveItem.Points[index]</see>.
            index will be -1 if no data points are available.</param>
            <returns>true if a <see cref="T:ZedGraph.GraphPane"/> was found, false otherwise.</returns>
            <seealso cref="M:ZedGraph.GraphPane.FindNearestObject(System.Drawing.PointF,System.Drawing.Graphics,System.Object@,System.Int32@)"/>
        </member>
        <member name="M:ZedGraph.MasterPane.FindPane(System.Drawing.PointF)">
            <summary>
            Find the <see cref="T:ZedGraph.GraphPane"/> within the <see cref="P:ZedGraph.MasterPane.PaneList"/> that contains the
            <see paramref="mousePt"/> within its <see cref="P:ZedGraph.PaneBase.PaneRect"/>.
            </summary>
            <param name="mousePt">The mouse point location where you want to search</param>
            <returns>A <see cref="T:ZedGraph.GraphPane"/> object that contains the mouse point, or
            null if no <see cref="T:ZedGraph.GraphPane"/> was found.</returns>
        </member>
        <member name="M:ZedGraph.MasterPane.FindAxisRect(System.Drawing.PointF)">
            <summary>
            Find the <see cref="T:ZedGraph.GraphPane"/> within the <see cref="P:ZedGraph.MasterPane.PaneList"/> that contains the
            <see paramref="mousePt"/> within its <see cref="P:ZedGraph.GraphPane.AxisRect"/>.
            </summary>
            <param name="mousePt">The mouse point location where you want to search</param>
            <returns>A <see cref="T:ZedGraph.GraphPane"/> object that contains the mouse point, or
            null if no <see cref="T:ZedGraph.GraphPane"/> was found.</returns>
        </member>
        <member name="P:ZedGraph.MasterPane.PaneList">
            <summary>
            Gets or sets the <see cref="P:ZedGraph.MasterPane.PaneList"/> collection instance that holds the list of
            <see cref="T:ZedGraph.GraphPane"/> objects that are included in this <see cref="T:ZedGraph.MasterPane"/>.
            </summary>
            <seealso cref="M:ZedGraph.MasterPane.Add(ZedGraph.GraphPane)"/>
            <seealso cref="P:ZedGraph.MasterPane.Item(System.Int32)"/>
        </member>
        <member name="P:ZedGraph.MasterPane.InnerPaneGap">
            <summary>
            Gets or sets the size of the margin between adjacent <see cref="T:ZedGraph.GraphPane"/>
            objects.
            </summary>
            <remarks>This property is scaled according to <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>,
            based on <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  The default value comes from
            <see cref="F:ZedGraph.MasterPane.Default.InnerPaneGap"/>.
            </remarks>
            <value>The value is in points (1/72nd inch).</value>
        </member>
        <member name="P:ZedGraph.MasterPane.HasUniformLegendEntries">
            <summary>
            Gets or set the value of the	 <see cref="F:ZedGraph.MasterPane.hasUniformLegendEntries"/>
            </summary>
        </member>
        <member name="P:ZedGraph.MasterPane.Item(System.Int32)">
            <summary>
            Indexer to access the specified <see cref="T:ZedGraph.GraphPane"/> object from <see cref="P:ZedGraph.MasterPane.PaneList"/>
            by its ordinal position in the list.
            </summary>
            <param name="index">The ordinal position (zero-based) of the
            <see cref="T:ZedGraph.GraphPane"/> object to be accessed.</param>
            <value>A <see cref="T:ZedGraph.GraphPane"/> object reference.</value>
        </member>
        <member name="P:ZedGraph.MasterPane.Item(System.String)">
            <summary>
            Indexer to access the specified <see cref="T:ZedGraph.GraphPane"/> object from <see cref="P:ZedGraph.MasterPane.PaneList"/>
            by its <see cref="P:ZedGraph.PaneBase.Title"/> string.
            </summary>
            <param name="title">The string title of the
            <see cref="T:ZedGraph.GraphPane"/> object to be accessed.</param>
            <value>A <see cref="T:ZedGraph.GraphPane"/> object reference.</value>
        </member>
        <member name="T:ZedGraph.MasterPane.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.MasterPane"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.MasterPane.Default.PaneLayout">
            <summary>
            The default pane layout for <see cref="M:ZedGraph.MasterPane.AutoPaneLayout(System.Drawing.Graphics,ZedGraph.PaneLayout)"/> method calls.
            </summary>
        </member>
        <member name="F:ZedGraph.MasterPane.Default.InnerPaneGap">
            <summary>
            The default value for the <see cref="F:ZedGraph.MasterPane.Default.InnerPaneGap"/> property.
            This is the size of the margin between adjacent <see cref="T:ZedGraph.GraphPane"/>
            objects, in units of points (1/72 inch).
            </summary>
            <seealso cref="P:ZedGraph.MasterPane.InnerPaneGap"/>
        </member>
        <member name="F:ZedGraph.MasterPane.Default.IsShowLegend">
            <summary>
            The default value for the <see cref="P:ZedGraph.Legend.IsVisible"/> property for
            the <see cref="T:ZedGraph.MasterPane"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.MasterPane.Default.hasUniformLegendEntries">
            <summary>
            The default value for the <see cref="F:ZedGraph.MasterPane.hasUniformLegendEntries"/> property.
            </summary>
        </member>
        <member name="T:ZedGraph.PaneList">
            <summary>
            A collection class containing a list of <see cref="T:ZedGraph.GraphPane"/> objects.
            </summary>
            
            <author>John Champion</author>
            <version> $Revision: 3.2 $ $Date: 2005/02/02 04:52:05 $ </version>
        </member>
        <member name="F:ZedGraph.PaneList.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="M:ZedGraph.PaneList.#ctor">
            <summary>
            Default constructor for the collection class.
            </summary>
        </member>
        <member name="M:ZedGraph.PaneList.#ctor(ZedGraph.PaneList)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.PaneList"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.PaneList.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.PaneList"/>.</returns>
        </member>
        <member name="M:ZedGraph.PaneList.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.PaneList.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.PaneList.Add(ZedGraph.GraphPane)">
            <summary>
            Add a <see cref="T:ZedGraph.GraphPane"/> object to the collection at the end of the list.
            </summary>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object to
            be added</param>
            <seealso cref="M:System.Collections.IList.Add(System.Object)"/>
        </member>
        <member name="M:ZedGraph.PaneList.Remove(ZedGraph.GraphPane)">
            <summary>
            Remove a <see cref="T:ZedGraph.GraphPane"/> object from the collection based on an object reference.
            </summary>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is to be
            removed.</param>
            <seealso cref="M:System.Collections.IList.Remove(System.Object)"/>
        </member>
        <member name="M:ZedGraph.PaneList.Insert(System.Int32,ZedGraph.GraphPane)">
            <summary>
            Insert a <see cref="T:ZedGraph.GraphPane"/> object into the collection at the specified
            zero-based index location.
            </summary>
            <param name="index">The zero-based index location for insertion.</param>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is to be
            inserted.</param>
            <seealso cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/>
        </member>
        <member name="M:ZedGraph.PaneList.IndexOf(System.String)">
            <summary>
            Return the zero-based position index of the
            <see cref="T:ZedGraph.GraphPane"/> with the specified <see cref="P:ZedGraph.PaneBase.Title"/>.
            </summary>
            <remarks>The comparison of titles is not case sensitive, but it must include
            all characters including punctuation, spaces, etc.</remarks>
            <param name="title">The <see cref="T:System.String"/> label that is in the
            <see cref="P:ZedGraph.PaneBase.Title"/> attribute of the item to be found.
            </param>
            <returns>The zero-based index of the specified <see cref="T:ZedGraph.GraphPane"/>,
            or -1 if the <see cref="P:ZedGraph.PaneBase.Title"/> was not found in the list</returns>
            <seealso cref="M:System.Collections.IList.IndexOf(System.Object)"/>
            <seealso cref="M:ZedGraph.PaneList.IndexOfTag(System.String)"/>
        </member>
        <member name="M:ZedGraph.PaneList.IndexOfTag(System.String)">
            <summary>
            Return the zero-based position index of the
            <see cref="T:ZedGraph.GraphPane"/> with the specified <see cref="P:ZedGraph.PaneBase.Tag"/>.
            </summary>
            <remarks>In order for this method to work, the <see cref="P:ZedGraph.PaneBase.Tag"/>
            property must be of type <see cref="T:System.String"/>.</remarks>
            <param name="tagStr">The <see cref="T:System.String"/> tag that is in the
            <see cref="P:ZedGraph.PaneBase.Tag"/> attribute of the item to be found.
            </param>
            <returns>The zero-based index of the specified <see cref="T:ZedGraph.GraphPane"/>,
            or -1 if the <see cref="P:ZedGraph.PaneBase.Tag"/> string is not in the list</returns>
            <seealso cref="M:System.Collections.IList.IndexOf(System.Object)"/>
            <seealso cref="M:ZedGraph.PaneList.IndexOf(System.String)"/>
        </member>
        <member name="P:ZedGraph.PaneList.Item(System.Int32)">
            <summary>
            Indexer to access the specified <see cref="T:ZedGraph.GraphPane"/> object by
            its ordinal position in the list.
            </summary>
            <param name="index">The ordinal position (zero-based) of the
            <see cref="T:ZedGraph.GraphPane"/> object to be accessed.</param>
            <value>A <see cref="T:ZedGraph.GraphPane"/> object reference.</value>
        </member>
        <member name="P:ZedGraph.PaneList.Item(System.String)">
            <summary>
            Indexer to access the specified <see cref="T:ZedGraph.GraphPane"/> object by
            its <see cref="P:ZedGraph.PaneBase.Title"/> string.
            </summary>
            <param name="title">The string title of the
            <see cref="T:ZedGraph.GraphPane"/> object to be accessed.</param>
            <value>A <see cref="T:ZedGraph.GraphPane"/> object reference.</value>
        </member>
        <member name="T:ZedGraph.PieItem">
            <summary>
            A class representing a pie chart object comprised of one or more
            <see cref="T:ZedGraph.PieItem"/>s.
            </summary>
            <author> Bob Kaye </author>
            <version> $Revision: 1.15 $ $Date: 2005/03/01 06:41:32 $ </version>
        </member>
        <member name="F:ZedGraph.PieItem.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.displacement">
            <summary>
            Percentage (expressed as #.##) of <see cref="T:ZedGraph.PieItem"/>	radius  to
            which this <see cref="T:ZedGraph.PieItem"/> is to be displaced from the center.
              Displacement is done outward  along the radius
            bisecting the chord of this <see cref="T:ZedGraph.PieItem"/>.  Maximum allowable value
            is 0.5.
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.labelDetail">
            <summary>
            A <see cref="T:ZedGraph.TextItem"/> which will customize the label display of this
            <see cref="T:ZedGraph.PieItem"/>
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.fill">
            <summary>
            Private	field	that stores the	<see cref="T:ZedGraph.Fill"/> data for this
            <see cref="T:ZedGraph.PieItem"/>.	 Use	the public property <see cref="T:ZedGraph.Fill"/> to
            access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.border">
            <summary>
            Private	field	that stores the	<see cref="P:ZedGraph.PieItem.Border"/> class that defines	the
            properties of the	border around	this <see cref="T:ZedGraph.PieItem"/>. Use the public
            property	<see cref="P:ZedGraph.PieItem.Border"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.pieValue">
            <summary>
            Private field that stores the absolute value of this <see cref="T:ZedGraph.PieItem"/> instance.
            Value will be set to zero if submitted value is less than zero. 
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.labelType">
            <summary>
            An enum that specifies how each <see cref="P:ZedGraph.CurveItem.Label"/> for this <see cref="T:ZedGraph.PieItem"/> object 
            will be displayed.  Use the public property <see cref="P:ZedGraph.PieItem.LabelType"/> to access this data.  
            Use enum <see cref="T:ZedGraph.PieLabelType"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.intersectionPoint">
            <summary>
            The point on the arc of this <see cref="T:ZedGraph.PieItem"/> representing the intersection of
            the arc and the explosion radius.
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.boundingRectangle">
            <summary>
            The bounding rectangle for this <see cref="T:ZedGraph.PieItem"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.labelStr">
            <summary>
            The formatted string for this <see cref="T:ZedGraph.PieItem"/>'s label.  Formatting is
            done based on  the <see cref="T:ZedGraph.PieLabelType"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.pivotPoint">
            <summary>
            The point at which the line between this <see cref="T:ZedGraph.PieItem"/> and its
            label bends to the horizontal.
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.endPoint">
            <summary>
            The point at the end of the line between	this <see cref="T:ZedGraph.PieItem"/> and 
            it's label (i.e. the beginning of the label display)
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.slicePath">
            <summary>
            Private field to hold the GraphicsPath of this <see cref="T:ZedGraph.PieItem"/> to be
            used for 'hit testing'.
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.startAngle">
            <summary>
            Private field which holds the angle (in degrees) at which the display of this <see cref="T:ZedGraph.PieItem"/>
            object will begin.
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.sweepAngle">
             <summary>
            Private field which holds the length (in degrees) of the arc representing this <see cref="T:ZedGraph.PieItem"/> 
            object.
             </summary>
        </member>
        <member name="F:ZedGraph.PieItem.midAngle">
             <summary>
            Private field which represents the angle (in degrees) of the radius along which this <see cref="T:ZedGraph.PieItem"/>
            object will be displaced, if desired.
             </summary>
        </member>
        <member name="F:ZedGraph.PieItem.valueDecimalDigits">
             <summary>
            Private field which determines the number of decimal digits displayed to 
            in a <see cref="T:ZedGraph.PieItem"/> label containing a value. 
             </summary>
        </member>
        <member name="F:ZedGraph.PieItem.percentDecimalDigits">
             <summary>
            Private field which determines the number of decimal digits displayed 
            in a <see cref="T:ZedGraph.PieItem"/> label containing a percent. 
             </summary>
        </member>
        <member name="M:ZedGraph.PieItem.#ctor(System.Double,System.Drawing.Color,System.Drawing.Color,System.Single,System.Double,System.String)">
            <summary>
            Create a new <see cref="T:ZedGraph.PieItem"/>, providing a gradient fill for the pie color.
            </summary>
            <param name="pieValue">The value associated with this <see cref="T:ZedGraph.PieItem"/> instance.</param>
            <param name="color1">The starting display color for the gradient <see cref="T:ZedGraph.Fill"/> for this
            <see cref="T:ZedGraph.PieItem"/> instance.</param>
            <param name="color2">The ending display color for the gradient <see cref="T:ZedGraph.Fill"/> for this
            <see cref="T:ZedGraph.PieItem"/> instance.</param>
            <param name="fillAngle">The angle for the gradient <see cref="T:ZedGraph.Fill"/>.</param>
            <param name="displacement">The amount this <see cref="T:ZedGraph.PieItem"/>  instance will be 
            displaced from the center point.</param>
            <param name="label">Text label for this <see cref="T:ZedGraph.PieItem"/> instance.</param>
        </member>
        <member name="M:ZedGraph.PieItem.#ctor(System.Double,System.Drawing.Color,System.Double,System.String)">
            <summary>
            Create a new <see cref="T:ZedGraph.PieItem"/>.
            </summary>
            <param name="pieValue">The value associated with this <see cref="T:ZedGraph.PieItem"/> instance.</param>
            <param name="color">The display color for this <see cref="T:ZedGraph.PieItem"/> instance.</param>
            <param name="displacement">The amount this <see cref="T:ZedGraph.PieItem"/>  instance will be 
            displaced from the center point.</param>
            <param name="label">Text label for this <see cref="T:ZedGraph.PieItem"/> instance.</param>
        </member>
        <member name="M:ZedGraph.PieItem.#ctor(System.Double,System.String)">
            <summary>
            Create a  new <see cref="T:ZedGraph.PieItem"/>.
            </summary>
            <param name="pieValue">The value associated with this <see cref="T:ZedGraph.PieItem"/> instance.</param>
            <param name="label">Text label for this <see cref="T:ZedGraph.PieItem"/> instance</param>
        </member>
        <member name="M:ZedGraph.PieItem.#ctor(ZedGraph.PieItem)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.PieItem"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.PieItem.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.ErrorBarItem"/></returns>
        </member>
        <member name="M:ZedGraph.PieItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.PieItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.PieItem.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,System.Int32,System.Single)">
            <summary>
            Do all rendering associated with this <see cref="T:ZedGraph.PieItem"/> item to the specified
            <see cref="T:System.Drawing.Graphics"/> device.  This method is normally only
            called by the Draw method of the parent <see cref="T:ZedGraph.CurveList"/>
            collection object.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="pos">Not used for rendering Pies</param>param&gt;
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>				
        </member>
        <member name="M:ZedGraph.PieItem.CalcPieRect(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single,System.Drawing.RectangleF)">
            <summary>
            Calculate the <see cref="T:System.Drawing.RectangleF"/> that will be used to define the bounding rectangle of
            the Pie.
            </summary>
            <remarks>This rectangle always lies inside of the <see cref="P:ZedGraph.GraphPane.AxisRect"/>, and it is
            normally a square so that the pie itself is not oval-shaped.</remarks>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>				
            <param name="axisRect">The <see cref="T:System.Drawing.RectangleF"/> (normally the <see cref="P:ZedGraph.GraphPane.AxisRect"/>)
            that bounds this pie.</param>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.PieItem.CalcExplodedRect(System.Drawing.RectangleF@)">
            <summary>
            Recalculate the bounding rectangle when a piee slice is displaced.
            </summary>
            <param name="explRect">rectangle to be used for drawing exploded pie</param>
        </member>
        <member name="M:ZedGraph.PieItem.CalculatePieChartParams(ZedGraph.GraphPane,System.Double@)">
            <summary>
            Calculate the values needed to properly display this <see cref="T:ZedGraph.PieItem"/>.
            </summary>
            <param name="pane">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="maxDisplacement">maximum slice displacement</param>
        </member>
        <member name="M:ZedGraph.PieItem.DrawLabel(System.Drawing.Graphics,ZedGraph.GraphPane,System.Drawing.RectangleF,System.Single)">
             <summary>
            Render the label for this <see cref="T:ZedGraph.PieItem"/>.
             </summary>
             <param name="g">
             A graphic device object to be drawn into.  This is normally e.Graphics from the
             PaintEventArgs argument to the Paint() method.
             </param>
             <param name="pane">
             A graphic device object to be drawn into.  This is normally e.Graphics from the
             PaintEventArgs argument to the Paint() method.
             </param>
             <param name="rect">Bounding rectangle for this <see cref="T:ZedGraph.PieItem"/>.</param>
             <param name="scaleFactor">
             The scaling factor to be used for rendering objects.  This is calculated and
             passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
             <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
             font sizes, etc. according to the actual size of the graph.
             </param>				
        </member>
        <member name="M:ZedGraph.PieItem.DesignLabel(System.Drawing.Graphics,ZedGraph.GraphPane,System.Drawing.RectangleF,System.Single)">
            <summary>
            This method collects all the data relative to rendering this <see cref="T:ZedGraph.PieItem"/>'s label.
            </summary>
            <param name="g">
             A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="rect">The rectangle used for rendering this <see cref="T:ZedGraph.PieItem"/>
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.PieItem.CalculateLinePoints(System.Drawing.RectangleF,System.Double)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <param name="midAngle"></param>
        </member>
        <member name="M:ZedGraph.PieItem.BuildLabelString(ZedGraph.PieItem)">
            <summary>
            Build the string that will be displayed as the slice label as determined by 
            <see cref="F:ZedGraph.PieItem.labelType"/>.
            </summary>
            <param name="curve">reference to the <see cref="T:ZedGraph.PieItem"/></param>
        </member>
        <member name="M:ZedGraph.PieItem.CalcNewBaseRect(System.Double,System.Drawing.RectangleF@)">
            <summary>
            A method which calculates a new size for the bounding rectangle for the non-displaced 
            <see cref="T:ZedGraph.PieItem"/>'s in the pie chart.  This method is called after it is found
            that at least one slice is displaced.
            </summary>
            <param name="maxDisplacement">The biggest displacement among the <see cref="T:ZedGraph.PieItem"/>s
            making up the pie chart.</param>
            <param name="baseRect">The current bounding rectangle</param>
        </member>
        <member name="M:ZedGraph.PieItem.DrawLegendKey(System.Drawing.Graphics,ZedGraph.GraphPane,System.Drawing.RectangleF,System.Single)">
            <summary>
            Draw a legend key entry for this <see cref="T:ZedGraph.PieItem"/> at the specified location
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="rect">The <see cref="T:System.Drawing.RectangleF"/> struct that specifies the
            location for the legend key</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="P:ZedGraph.PieItem.Displacement">
            <summary>
            Gets or sets the a value which determines the amount, if any, of this <see cref="T:ZedGraph.PieItem"/>  
            displacement.
            </summary>
        </member>
        <member name="P:ZedGraph.PieItem.SlicePath">
            <summary>
            Gets or sets a path representing this <see cref="T:ZedGraph.PieItem"/>
            </summary>
        </member>
        <member name="P:ZedGraph.PieItem.LabelDetail">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.TextItem"/> to be used
            for displaying this <see cref="T:ZedGraph.PieItem"/>'s label.
            </summary>
        </member>
        <member name="P:ZedGraph.PieItem.Border">
            <summary>
            Gets or sets the <see cref="P:ZedGraph.PieItem.Border"/> object so as to be able to modify
            its properties.
            </summary>
        </member>
        <member name="P:ZedGraph.PieItem.SweepAngle">
            <summary>
            Gets or sets the arc length (in degrees) of this <see cref="T:ZedGraph.PieItem"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.PieItem.StartAngle">
            <summary>
            Gets or sets the starting angle (in degrees) of this <see cref="T:ZedGraph.PieItem"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.PieItem.MidAngle">
            <summary>
            Gets or sets the angle (in degrees) of the radius along which 
            this <see cref="T:ZedGraph.PieItem"/> will be displaced.
            </summary>
        </member>
        <member name="P:ZedGraph.PieItem.Value">
            <summary>
             Gets or sets the value of this <see cref="T:ZedGraph.PieItem"/>.  
             Minimum value is 0. 
            </summary>
        </member>
        <member name="P:ZedGraph.PieItem.LabelType">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.PieLabelType"/> to be used in displaying 
            <see cref="T:ZedGraph.PieItem"/> labels.
            </summary>
        </member>
        <member name="P:ZedGraph.PieItem.ValueDecimalDigits">
            <summary>
            Gets or sets the number of decimal digits to be displayed in a <see cref="T:ZedGraph.PieItem"/> 
            value label.
            </summary>
        </member>
        <member name="P:ZedGraph.PieItem.PercentDecimalDigits">
            <summary>
            Gets or sets the number of decimal digits to be displayed in a <see cref="T:ZedGraph.PieItem"/> 
            percent label.
            </summary>
        </member>
        <member name="T:ZedGraph.PieItem.Default">
            <summary>
            Specify the default property values for the <see cref="T:ZedGraph.PieItem"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.Default.Displacement">
             <summary>
            Default <see cref="T:ZedGraph.PieItem"/> displacement.
             </summary>
        </member>
        <member name="F:ZedGraph.PieItem.Default.BorderWidth">
            <summary>
            The default pen width	to be used for drawing the	border around	the PieItem
            (<see cref="P:ZedGraph.Border.PenWidth"/>	property).	 Units	are	points.
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.Default.FillType">
            <summary>
            The default fill mode for this PieItem (<see cref="P:ZedGraph.Fill.Type"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.Default.IsBorderVisible">
            <summary>
            The default border	mode	for	PieItem	(<see cref="P:ZedGraph.Border.IsVisible"/> property).
            true to	display frame	around PieItem,	false otherwise
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.Default.BorderColor">
            <summary>
            The default color	for	drawing	frames around	PieItem
            (<see cref="P:ZedGraph.Border.Color"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.Default.FillColor">
            <summary>
            The default color	for	filling in	the PieItem
            (<see cref="P:ZedGraph.Fill.Color"/>	property).
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.Default.FillBrush">
            <summary>
            The default custom brush for filling in the PieItem.
            (<see cref="P:ZedGraph.Fill.Brush"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.Default.isVisible">
             <summary>
            Default value for controlling <see cref="T:ZedGraph.PieItem"/> display.
             </summary>
        </member>
        <member name="F:ZedGraph.PieItem.Default.LabelType">
            <summary>
            Default value for <see cref="P:ZedGraph.PieItem.LabelType"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.Default.FontSize">
            <summary>
            The default font size for  <see cref="P:ZedGraph.PieItem.LabelDetail"/> entries
            (<see cref="P:ZedGraph.FontSpec.Size"/> property).  Units are
            in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.Default.ValueDecimalDigits">
            <summary>
            Default value for the number of decimal digits  
            to be displayed when <see cref="F:ZedGraph.PieItem.labelType"/>  contains a value.
            </summary>
        </member>
        <member name="F:ZedGraph.PieItem.Default.PercentDecimalDigits">
            <summary>
            Default value for the number of decimal digits  
            to be displayed where <see cref="F:ZedGraph.PieItem.labelType"/> contains a percent.
            </summary>
        </member>
        <member name="T:ZedGraph.PointPair">
            <summary>
            A simple point represented by an (X,Y) pair of
            double values.
            </summary>
            
            <author> Jerry Vos modified by John Champion </author>
            <version> $Revision: 3.13 $ $Date: 2005/01/22 06:20:50 $ </version>
        </member>
        <member name="F:ZedGraph.PointPair.Missing">
            <summary>
            Missing values are represented internally using <see cref="F:System.Double.MaxValue"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.PointPair.DefaultFormat">
            <summary>
            The default format to be used for displaying point values via the
            <see cref="M:ZedGraph.PointPair.ToString"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.PointPair.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.PointPair.X">
            <summary>
            This PointPair's X coordinate
            </summary>
        </member>
        <member name="F:ZedGraph.PointPair.Y">
            <summary>
            This PointPair's Y coordinate
            </summary>
        </member>
        <member name="F:ZedGraph.PointPair.Z">
            <summary>
            This PointPair's Z coordinate.  Also used for the lower value (dependent axis)
            for <see cref="T:ZedGraph.HiLowBarItem"/> charts.
            </summary>
        </member>
        <member name="F:ZedGraph.PointPair.Tag">
            <summary>
            A tag object for use by the user.  This can be used to store additional
            information associated with the <see cref="T:ZedGraph.PointPair"/>.  ZedGraph never
            modifies this value, but if it is a <see cref="T:System.String"/> type, it
            may be displayed in a <see cref="T:System.Windows.Forms.ToolTip"/>
            within the <see cref="T:ZedGraph.ZedGraphControl"/> object.
            </summary>
            <remarks>
            Note that, if you are going to Serialize ZedGraph data, then any type
            that you store in <see cref="F:ZedGraph.PointPair.Tag"/> must be a serializable type (or
            it will cause an exception).
            </remarks>
        </member>
        <member name="M:ZedGraph.PointPair.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ZedGraph.PointPair.#ctor(System.Double,System.Double)">
            <summary>
            Creates a point pair with the specified X and Y.
            </summary>
            <param name="x">This pair's x coordinate.</param>
            <param name="y">This pair's y coordinate.</param>
        </member>
        <member name="M:ZedGraph.PointPair.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Creates a point pair with the specified X, Y, and
            label (<see cref="F:ZedGraph.PointPair.Tag"/>).
            </summary>
            <param name="x">This pair's x coordinate.</param>
            <param name="y">This pair's y coordinate.</param>
            <param name="label">This pair's string label (<see cref="F:ZedGraph.PointPair.Tag"/>)</param>
        </member>
        <member name="M:ZedGraph.PointPair.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Creates a point pair with the specified X, Y, and base value.
            </summary>
            <param name="x">This pair's x coordinate.</param>
            <param name="y">This pair's y coordinate.</param>
            <param name="z">This pair's z or lower dependent coordinate.</param>
        </member>
        <member name="M:ZedGraph.PointPair.#ctor(System.Double,System.Double,System.Double,System.String)">
            <summary>
            Creates a point pair with the specified X, Y, base value, and
            label (<see cref="F:ZedGraph.PointPair.Tag"/>).
            </summary>
            <param name="x">This pair's x coordinate.</param>
            <param name="y">This pair's y coordinate.</param>
            <param name="z">This pair's z or lower dependent coordinate.</param>
            <param name="label">This pair's string label (<see cref="F:ZedGraph.PointPair.Tag"/>)</param>
        </member>
        <member name="M:ZedGraph.PointPair.#ctor(System.Drawing.PointF)">
            <summary>
            Creates a point pair from the specified <see cref="T:System.Drawing.PointF"/> struct.
            </summary>
            <param name="pt">The <see cref="T:System.Drawing.PointF"/> struct from which to get the
            new <see cref="T:ZedGraph.PointPair"/> values.</param>
        </member>
        <member name="M:ZedGraph.PointPair.#ctor(ZedGraph.PointPair)">
            <summary>
            The PointPair copy constructor.
            </summary>
            <param name="rhs">The basis for the copy.</param>
        </member>
        <member name="M:ZedGraph.PointPair.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.PointPair.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.PointPair.IsValueInvalid(System.Double)">
            <summary>
            static method to determine if the specified point value is invalid.
            </summary>
            <remarks>The value is considered invalid if it is <see cref="F:ZedGraph.PointPair.Missing"/>,
            <see cref="F:System.Double.PositiveInfinity"/>, <see cref="F:System.Double.NegativeInfinity"/>
            or <see cref="F:System.Double.NaN"/>.</remarks>
            <param name="value">The value to be checked for validity.</param>
            <returns>true if the value is invalid, false otherwise</returns>
        </member>
        <member name="M:ZedGraph.PointPair.op_Implicit(ZedGraph.PointPair)~System.Drawing.PointF">
            <summary>
            Implicit conversion from PointPair to PointF.  Note that this conversion
            can result in data loss, since the data are being cast from a type
            double (64 bit) to a float (32 bit).
            </summary>
            <param name="pair">The PointPair struct on which to operate</param>
            <returns>A PointF struct equivalent to the PointPair</returns>
        </member>
        <member name="M:ZedGraph.PointPair.ToString">
            <summary>
            Format this PointPair value using the default format.  Example:  "( 12.345, -16.876 )".
            The two double values are formatted with the "g" format type.
            </summary>
            <returns>A string representation of the PointPair</returns>
        </member>
        <member name="M:ZedGraph.PointPair.ToString(System.Boolean)">
            <summary>
            Format this PointPair value using the default format.  Example:  "( 12.345, -16.876 )".
            The two double values are formatted with the "g" format type.
            </summary>
            <param name="isShowZ">true to show the third "Z" or low dependent value coordinate</param>
            <returns>A string representation of the PointPair</returns>
        </member>
        <member name="M:ZedGraph.PointPair.ToString(System.String)">
            <summary>
            Format this PointPair value using a general format string.
            Example:  a format string of "e2" would give "( 1.23e+001, -1.69e+001 )".
            </summary>
            <param name="format">A format string that will be used to format each of
            the two double type values (see <see cref="M:System.Double.ToString"/>).</param>
            <returns>A string representation of the PointPair</returns>
        </member>
        <member name="M:ZedGraph.PointPair.ToString(System.String,System.Boolean)">
            <summary>
            Format this PointPair value using a general format string.
            Example:  a format string of "e2" would give "( 1.23e+001, -1.69e+001 )".
            If <see paramref="isShowZ"/>
            is true, then the third "Z" coordinate is also shown.
            </summary>
            <param name="format">A format string that will be used to format each of
            the two double type values (see <see cref="M:System.Double.ToString"/>).</param>
            <returns>A string representation of the PointPair</returns>
            <param name="isShowZ">true to show the third "Z" or low dependent value coordinate</param>
        </member>
        <member name="P:ZedGraph.PointPair.IsMissing">
            <summary>
            Readonly value that determines if either the X or the Y
            coordinate in this PointPair is a missing value.
            </summary>
            <returns>true if either value is missing</returns>
        </member>
        <member name="P:ZedGraph.PointPair.IsInvalid">
            <summary>
            Readonly value that determines if either the X or the Y
            coordinate in this PointPair is an invalid (not plotable) value.
            It is considered invalid if it is missing (equal to System.Double.Max),
            Infinity, or NaN.
            </summary>
            <returns>true if either value is invalid</returns>
        </member>
        <member name="P:ZedGraph.PointPair.IsInvalid3D">
            <summary>
            Readonly value that determines if either the X, Y, or Z
            coordinate in this PointPair is an invalid (not plotable) value.
            It is considered invalid if it is missing (equal to System.Double.Max),
            Infinity, or NaN.
            </summary>
            <returns>true if any value is invalid</returns>
        </member>
        <member name="P:ZedGraph.PointPair.LowValue">
            <summary>
            The "low" value for this point (lower dependent-axis value).
            This is really just an alias for <see cref="F:ZedGraph.PointPair.Z"/>.
            </summary>
            <value>The lower dependent value for this <see cref="T:ZedGraph.PointPair"/>.</value>
        </member>
        <member name="T:ZedGraph.PointPair.PointPairComparerY">
            <summary>
            Compares points based on their y values.  Is setup to be used in an
            ascending order sort.
            <seealso cref="M:System.Collections.ArrayList.Sort"/>
            </summary>
        </member>
        <member name="M:ZedGraph.PointPair.PointPairComparerY.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two <see cref="T:ZedGraph.PointPair"/>s.
            </summary>
            <param name="l">Point to the left.</param>
            <param name="r">Point to the right.</param>
            <returns>-1, 0, or 1 depending on l.Y's relation to r.Y</returns>
        </member>
        <member name="T:ZedGraph.PointPair.PointPairComparer">
            <summary>
            Compares points based on their x values.  Is setup to be used in an
            ascending order sort.
            <seealso cref="M:System.Collections.ArrayList.Sort"/>
            </summary>
        </member>
        <member name="M:ZedGraph.PointPair.PointPairComparer.#ctor(ZedGraph.SortType)">
            <summary>
            Constructor for PointPairComparer.
            </summary>
            <param name="type">The axis type on which to sort.</param>
        </member>
        <member name="M:ZedGraph.PointPair.PointPairComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
            <summary>
            Compares two <see cref="T:ZedGraph.PointPair"/>s.
            </summary>
            <param name="l">Point to the left.</param>
            <param name="r">Point to the right.</param>
            <returns>-1, 0, or 1 depending on l.X's relation to r.X</returns>
        </member>
        <member name="T:ZedGraph.PointPairList">
            <summary>
            A collection class containing a list of <see cref="T:ZedGraph.PointPair"/> objects
            that define the set of points to be displayed on the curve.
            </summary>
            
            <author> Jerry Vos based on code by John Champion
            modified by John Champion</author>
            <version> $Revision: 3.20 $ $Date: 2005/03/11 17:24:38 $ </version>
        </member>
        <member name="F:ZedGraph.PointPairList.sorted">
            <summary>Private field to maintain the sort status of this
            <see cref="T:ZedGraph.PointPairList"/>.  Use the public property
            <see cref="P:ZedGraph.PointPairList.Sorted"/> to access this value.
            </summary>
        </member>
        <member name="M:ZedGraph.PointPairList.#ctor">
            <summary>
            Default constructor for the collection class
            </summary>
        </member>
        <member name="M:ZedGraph.PointPairList.#ctor(System.Double[],System.Double[])">
            <summary>
            Constructor to initialize the PointPairList from two arrays of
            type double.
            </summary>
        </member>
        <member name="M:ZedGraph.PointPairList.#ctor(System.Double[],System.Double[],System.Double[])">
            <summary>
            Constructor to initialize the PointPairList from three arrays of
            type double.
            </summary>
        </member>
        <member name="M:ZedGraph.PointPairList.#ctor(ZedGraph.PointPairList)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The PointPairList from which to copy</param>
        </member>
        <member name="M:ZedGraph.PointPairList.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the PointPairList</returns>
        </member>
        <member name="M:ZedGraph.PointPairList.Add(ZedGraph.PointPair)">
            <summary>
            Add a <see cref="T:ZedGraph.PointPair"/> object to the collection at the end of the list.
            </summary>
            <param name="point">A reference to the <see cref="T:ZedGraph.PointPair"/> object to
            be added</param>
            <returns>The zero-based ordinal index where the point was added in the list.</returns>
            <seealso cref="M:System.Collections.IList.Add(System.Object)"/>
        </member>
        <member name="M:ZedGraph.PointPairList.Add(ZedGraph.PointPairList)">
            <summary>
            Add a <see cref="T:ZedGraph.PointPairList"/> object to the collection at the end of the list.
            </summary>
            <param name="pointList">A reference to the <see cref="T:ZedGraph.PointPairList"/> object to
            be added</param>
            <returns>The zero-based ordinal index where the last point was added in the list,
            or -1 if no points were added.</returns>
            <seealso cref="M:System.Collections.IList.Add(System.Object)"/>
        </member>
        <member name="M:ZedGraph.PointPairList.Add(System.Double[],System.Double[])">
            <summary>
            Add a set of points to the PointPairList from two arrays of type double.
            If either array is null, then a set of ordinal values is automatically
            generated in its place (see <see cref="F:ZedGraph.AxisType.Ordinal"/>.
            If the arrays are of different size, then the larger array prevails and the
            smaller array is padded with <see cref="F:ZedGraph.PointPair.Missing"/> values.
            </summary>
            <param name="x">A double[] array of X values</param>
            <param name="y">A double[] array of Y values</param>
            <returns>The zero-based ordinal index where the last point was added in the list,
            or -1 if no points were added.</returns>
            <seealso cref="M:System.Collections.IList.Add(System.Object)"/>
        </member>
        <member name="M:ZedGraph.PointPairList.Add(System.Double[],System.Double[],System.Double[])">
            <summary>
            Add a set of points to the <see cref="T:ZedGraph.PointPairList"/> from three arrays of type double.
            If the X or Y array is null, then a set of ordinal values is automatically
            generated in its place (see <see cref="F:ZedGraph.AxisType.Ordinal"/>.  If the <see paramref="baseVal"/>
            is null, then it is set to zero.
            If the arrays are of different size, then the larger array prevails and the
            smaller array is padded with <see cref="F:ZedGraph.PointPair.Missing"/> values.
            </summary>
            <param name="x">A double[] array of X values</param>
            <param name="y">A double[] array of Y values</param>
            <param name="z">A double[] array of Z or lower-dependent axis values</param>
            <returns>The zero-based ordinal index where the last point was added in the list,
            or -1 if no points were added.</returns>
            <seealso cref="M:System.Collections.IList.Add(System.Object)"/>
        </member>
        <member name="M:ZedGraph.PointPairList.Add(System.Double,System.Double)">
            <summary>
            Add a single point to the <see cref="T:ZedGraph.PointPairList"/> from values of type double.
            </summary>
            <param name="x">The X value</param>
            <param name="y">The Y value</param>
            <returns>The zero-based ordinal index where the point was added in the list.</returns>
            <seealso cref="M:System.Collections.IList.Add(System.Object)"/>
        </member>
        <member name="M:ZedGraph.PointPairList.Add(System.Double,System.Double,System.Double)">
            <summary>
            Add a single point to the <see cref="T:ZedGraph.PointPairList"/> from values of type double.
            </summary>
            <param name="x">The X value</param>
            <param name="y">The Y value</param>
            <param name="z">The Z or lower dependent axis value</param>
            <returns>The zero-based ordinal index where the point was added
            in the list.</returns>
            <seealso cref="M:System.Collections.IList.Add(System.Object)"/>
        </member>
        <member name="M:ZedGraph.PointPairList.Remove(ZedGraph.PointPair)">
            <summary>
            Remove the specified <see cref="T:ZedGraph.PointPair"/> object from the collection based
            the point values (must match exactly).
            </summary>
            <param name="pt">
            A <see cref="T:ZedGraph.PointPair"/> that is to be removed by value.
            </param>
            <seealso cref="M:System.Collections.IList.Remove(System.Object)"/>
        </member>
        <member name="M:ZedGraph.PointPairList.IndexOf(ZedGraph.PointPair)">
            <summary>
            Return the zero-based position index of the specified
            <see cref="T:ZedGraph.PointPair"/> in the collection.
            </summary>
            <param name="pt">The <see cref="T:ZedGraph.PointPair"/> object that is to be found.
            </param>
            <returns>The zero-based index of the specified <see cref="T:ZedGraph.PointPair"/>, or -1 if the <see cref="T:ZedGraph.PointPair"/>
            is not in the list</returns>
            <seealso cref="M:System.Collections.IList.IndexOf(System.Object)"/>
        </member>
        <member name="M:ZedGraph.PointPairList.IndexOfTag(System.String)">
            <summary>
            Return the zero-based position index of the
            <see cref="T:ZedGraph.PointPair"/> with the specified label <see cref="F:ZedGraph.PointPair.Tag"/>.
            </summary>
            <remarks>The <see cref="F:ZedGraph.PointPair.Tag"/> object must be of type <see cref="T:System.String"/>
            for this method to find it.</remarks>
            <param name="label">The <see cref="T:System.String"/> label that is in the
            <see cref="F:ZedGraph.PointPair.Tag"/> attribute of the item to be found.
            </param>
            <returns>The zero-based index of the specified <see cref="T:ZedGraph.PointPair"/>,
            or -1 if the <see cref="T:ZedGraph.PointPair"/> is not in the list</returns>
            <seealso cref="M:System.Collections.IList.IndexOf(System.Object)"/>
        </member>
        <member name="M:ZedGraph.PointPairList.Sort">
            <summary>
            Sorts the list according to the point x values. Will not sort the 
            list if the list is already sorted.
            </summary>
            <returns>If the list was sorted before sort was called</returns>
        </member>
        <member name="M:ZedGraph.PointPairList.Sort(ZedGraph.SortType)">
             <summary>
             Sorts the list according to the point values . Will not sort the 
             list if the list is already sorted.
             </summary>
             <param name="type"></param>  The <see cref="T:ZedGraph.SortType"/>
            used to determine whether the X or Y values will be used to sort
            the list
             <returns>If the list was sorted before sort was called</returns>
        </member>
        <member name="M:ZedGraph.PointPairList.SumY(ZedGraph.PointPairList)">
            <summary>
            Add the Y values from the specified <see cref="T:ZedGraph.PointPairList"/> object to this
            <see cref="T:ZedGraph.PointPairList"/>.  If <see paramref="sumList"/> has more values than
            this list, then the extra values will be ignored.  If <see paramref="sumList"/>
            has less values, the missing values are assumed to be zero.
            </summary>
            <param name="sumList">A reference to the <see cref="T:ZedGraph.PointPairList"/> object to
            be summed into the this <see cref="T:ZedGraph.PointPairList"/>.</param>
        </member>
        <member name="M:ZedGraph.PointPairList.SumX(ZedGraph.PointPairList)">
            <summary>
            Add the X values from the specified <see cref="T:ZedGraph.PointPairList"/> object to this
            <see cref="T:ZedGraph.PointPairList"/>.  If <see paramref="sumList"/> has more values than
            this list, then the extra values will be ignored.  If <see paramref="sumList"/>
            has less values, the missing values are assumed to be zero.
            </summary>
            <param name="sumList">A reference to the <see cref="T:ZedGraph.PointPairList"/> object to
            be summed into the this <see cref="T:ZedGraph.PointPairList"/>.</param>
        </member>
        <member name="M:ZedGraph.PointPairList.InterpolateX(System.Double)">
            <summary>
            Linearly interpolate the data to find an arbitraty Y value that corresponds to the specified X value.
            </summary>
            <remarks>
            This method uses linear interpolation with a binary search algorithm.  It therefore
            requires that the x data be monotonically increasing.  Missing values are not allowed.  This
            method will extrapolate outside the range of the PointPairList if necessary.
            </remarks>
            <param name="xTarget">The target X value on which to interpolate</param>
            <returns>The Y value that corresponds to the <see paramref="xTarget"/> value.</returns>
        </member>
        <member name="M:ZedGraph.PointPairList.SplineInterpolateX(System.Double,System.Double)">
            <summary>
            Use Cardinal Splines to Interpolate the data to find an arbitraty Y value that corresponds to
            the specified X value.
            </summary>
            <remarks>
            This method uses cardinal spline interpolation with a binary search algorithm.  It therefore
            requires that the x data be monotonically increasing.  Missing values are not allowed.  This
            method will not extrapolate outside the range of the PointPairList (it returns
            <see cref="F:ZedGraph.PointPair.Missing"/> if extrapolation would be required).  WARNING: Cardinal spline
            interpolation can generate curves with non-unique X values for higher tension settings.  That is,
            there may be multiple X values for the same Y value.  This routine follows the path of the
            spline curve until it reaches the FIRST OCCURRENCE of the target X value.  It does not check
            to see if other solutions are possible.
            </remarks>
            <param name="xTarget">The target X value on which to interpolate</param>
            <param name="tension">The tension setting that controls the curvature of the spline fit.
            Typical values are between 0 and 1, where 0 is a linear fit, and 1 is lots of "roundness".
            Values greater than 1 may give odd results.
            </param>
            <returns>The Y value that corresponds to the <see paramref="xTarget"/> value.</returns>
        </member>
        <member name="M:ZedGraph.PointPairList.InterpolateY(System.Double)">
            <summary>
            Linearly interpolate the data to find an arbitraty X value that corresponds to the specified Y value.
            </summary>
            <remarks>
            This method uses linear interpolation with a binary search algorithm.  It therefore
            requires that the Y data be monotonically increasing.  Missing values are not allowed.  This
            method will extrapolate outside the range of the PointPairList if necessary.
            </remarks>
            <param name="yTarget">The target Y value on which to interpolate</param>
            <returns>The X value that corresponds to the <see paramref="yTarget"/> value.</returns>
        </member>
        <member name="M:ZedGraph.PointPairList.GetRange(System.Double@,System.Double@,System.Double@,System.Double@,System.Boolean,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Go through the list of <see cref="T:ZedGraph.PointPair"/> data values
            and determine the minimum and maximum values in the data.
            </summary>
            <param name="xMin">The minimum X value in the range of data</param>
            <param name="xMax">The maximum X value in the range of data</param>
            <param name="yMin">The minimum Y value in the range of data</param>
            <param name="yMax">The maximum Y value in the range of data</param>
            <param name="ignoreInitial">ignoreInitial is a boolean value that
            affects the data range that is considered for the automatic scale
            ranging (see <see cref="P:ZedGraph.GraphPane.IsIgnoreInitial"/>).  If true, then initial
            data points where the Y value is zero are not included when
            automatically determining the scale <see cref="P:ZedGraph.Axis.Min"/>,
            <see cref="P:ZedGraph.Axis.Max"/>, and <see cref="P:ZedGraph.Axis.Step"/> size.  All data after
            the first non-zero Y value are included.
            </param>
            <param name="isZIncluded">true to include the Z data in the data range for
            the dependent axis</param>
            <param name="isXIndependent">true if X is the independent axis, false
            if Y or Y2 is the independent axis.</param>
            <param name="xLBound">The lower bound of allowable data for the X values.  This
            value allows you to subset the data values.  If the X range is bounded, then
            the resulting range for Y will reflect the Y values for the points within the X
            bounds.  Use <see cref="F:System.Double.MinValue"/> to have no bound.</param>
            <param name="xUBound">The upper bound of allowable data for the X values.  This
            value allows you to subset the data values.  If the X range is bounded, then
            the resulting range for Y will reflect the Y values for the points within the X
            bounds.  Use <see cref="F:System.Double.MaxValue"/> to have no bound.</param>
            <param name="yLBound">The lower bound of allowable data for the Y values.  This
            value allows you to subset the data values.  If the Y range is bounded, then
            the resulting range for X will reflect the X values for the points within the Y
            bounds.  Use <see cref="F:System.Double.MinValue"/> to have no bound.</param>
            <param name="yUBound">The upper bound of allowable data for the Y values.  This
            value allows you to subset the data values.  If the Y range is bounded, then
            the resulting range for X will reflect the X values for the points within the Y
            bounds.  Use <see cref="F:System.Double.MaxValue"/> to have no bound.</param>
            <seealso cref="P:ZedGraph.GraphPane.IsBoundedRanges"/>
        </member>
        <member name="P:ZedGraph.PointPairList.Item(System.Int32)">
            <summary>
            Indexer to access the specified <see cref="T:ZedGraph.PointPair"/> object by
            its ordinal position in the list.
            </summary>
            <param name="index">The ordinal position (zero-based) of the
            <see cref="T:ZedGraph.PointPair"/> object to be accessed.</param>
            <value>A <see cref="T:ZedGraph.PointPair"/> object reference.</value>
        </member>
        <member name="P:ZedGraph.PointPairList.Sorted">
            <summary>
            true if the list is currently sorted.
            </summary>
            <seealso cref="M:ZedGraph.PointPairList.Sort"/>
        </member>
        <member name="T:ZedGraph.Symbol">
            <summary>
            This class handles the drawing of the curve <see cref="T:ZedGraph.Symbol"/> objects.
            The symbols are the small shapes that appear over each defined point
            along the curve.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.15 $ $Date: 2005/03/05 07:24:10 $ </version>
        </member>
        <member name="F:ZedGraph.Symbol.schema">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.Symbol.size">
            <summary>
            Private field that stores the size of this
            <see cref="T:ZedGraph.Symbol"/> in points (1/72 inch).  Use the public
            property <see cref="P:ZedGraph.Symbol.Size"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Symbol.type">
            <summary>
            Private field that stores the <see cref="T:ZedGraph.SymbolType"/> for this
            <see cref="T:ZedGraph.Symbol"/>.  Use the public
            property <see cref="P:ZedGraph.Symbol.Type"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Symbol.isVisible">
            <summary>
            Private field that stores the visibility of this
            <see cref="T:ZedGraph.Symbol"/>.  Use the public
            property <see cref="P:ZedGraph.Symbol.IsVisible"/> to access this value.  If this value is
            false, the symbols will not be shown (but the <see cref="T:ZedGraph.Line"/> may
            still be shown).
            </summary>
        </member>
        <member name="F:ZedGraph.Symbol.fill">
            <summary>
            Private field that stores the <see cref="T:ZedGraph.Fill"/> data for this
            <see cref="T:ZedGraph.Symbol"/>.  Use the public property <see cref="P:ZedGraph.Symbol.Fill"/> to
            access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.Symbol.border">
            <summary>
            Private field that stores the <see cref="T:ZedGraph.Border"/> data for this
            <see cref="T:ZedGraph.Symbol"/>.  Use the public property <see cref="P:ZedGraph.Symbol.Border"/> to
            access this value.
            </summary>
        </member>
        <member name="M:ZedGraph.Symbol.#ctor">
            <summary>
            Default constructor that sets all <see cref="T:ZedGraph.Symbol"/> properties to default
            values as defined in the <see cref="T:ZedGraph.Symbol.Default"/> class.
            </summary>
        </member>
        <member name="M:ZedGraph.Symbol.#ctor(ZedGraph.SymbolType,System.Drawing.Color)">
            <summary>
            Default constructor that sets the <see cref="T:ZedGraph.SymbolType"/> and
            <see cref="T:System.Drawing.Color"/> as specified, and the remaining
            <see cref="T:ZedGraph.Symbol"/> properties to default
            values as defined in the <see cref="T:ZedGraph.Symbol.Default"/> class.
            </summary>
            <param name="type">A <see cref="T:ZedGraph.SymbolType"/> enum value
            indicating the shape of the symbol</param>
            <param name="color">A <see cref="T:System.Drawing.Color"/> value indicating
            the color of the symbol
            </param>
        </member>
        <member name="M:ZedGraph.Symbol.#ctor(ZedGraph.Symbol)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The Symbol object from which to copy</param>
        </member>
        <member name="M:ZedGraph.Symbol.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the Symbol</returns>
        </member>
        <member name="M:ZedGraph.Symbol.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.Symbol.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.Symbol.DrawSymbol(System.Drawing.Graphics,System.Single,System.Single,System.Single,System.Drawing.Pen,System.Drawing.Brush)">
            <summary>
            Draw the <see cref="T:ZedGraph.Symbol"/> to the specified <see cref="T:System.Drawing.Graphics"/> device
            at the specified location.  This routine draws a single symbol.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="x">The x position of the center of the symbol in
            pixel units</param>
            <param name="y">The y position of the center of the symbol in
            pixel units</param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.
            </param>
            <param name="pen">A <see cref="T:System.Drawing.Pen"/> class representing the standard pen for this symbol</param>
            <param name="brush">A <see cref="T:System.Drawing.Brush"/> class representing a default solid brush for this symbol
            If this symbol uses a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/>, it will be created on the fly for
            each point, since it has to be scaled to the individual point coordinates.</param>
        </member>
        <member name="M:ZedGraph.Symbol.DrawSymbol(System.Drawing.Graphics,System.Single,System.Single,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Pen,System.Drawing.Brush)">
            <summary>
            Draw the <see cref="T:ZedGraph.Symbol"/> to the specified <see cref="T:System.Drawing.Graphics"/> device
            at the specified location.  This routine draws a single symbol.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="x">The x position of the center of the symbol in
            pixel units</param>
            <param name="y">The y position of the center of the symbol in
            pixel units</param>
            <param name="path">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> previously constructed by
            <see cref="M:ZedGraph.Symbol.MakePath(System.Drawing.Graphics,System.Single)"/> for this symbol</param>
            <param name="pen">A <see cref="T:System.Drawing.Pen"/> class representing the standard pen for this symbol</param>
            <param name="brush">A <see cref="T:System.Drawing.Brush"/> class representing a default solid brush for this symbol
            If this symbol uses a <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/>, it will be created on the fly for
            each point, since it has to be scaled to the individual point coordinates.</param>
        </member>
        <member name="M:ZedGraph.Symbol.DrawSymbol(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single,System.Single,System.Single)">
            <summary>
            Draw the <see cref="T:ZedGraph.Symbol"/> to the specified <see cref="T:System.Drawing.Graphics"/> device
            at the specified location.  This routine draws a single symbol.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="x">The x position of the center of the symbol in
            pixel units</param>
            <param name="y">The y position of the center of the symbol in
            pixel units</param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.
            </param>
        </member>
        <member name="M:ZedGraph.Symbol.DrawPoint(System.Drawing.Graphics,System.Single,System.Single,System.Single,System.Drawing.Pen)">
            <summary>
            Draw the <see cref="T:ZedGraph.Symbol"/> (outline only) to the specified <see cref="T:System.Drawing.Graphics"/>
            device at the specified location.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="x">The x position of the center of the symbol in
            pixel units</param>
            <param name="y">The y position of the center of the symbol in
            pixel units</param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.</param>
            <param name="pen">A pen with attributes of <see cref="T:System.Drawing.Color"/> and
            <see cref="P:ZedGraph.Border.PenWidth"/> for this symbol</param>
        </member>
        <member name="M:ZedGraph.Symbol.MakePath(System.Drawing.Graphics,System.Single)">
            <summary>
            Create a <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> struct for the current symbol based on the
            specified scaleFactor and assuming the symbol will be centered at position 0,0.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.</param>
            <returns>Returns the <see cref="T:System.Drawing.Drawing2D.GraphicsPath"/> for the current symbol</returns>
        </member>
        <member name="M:ZedGraph.Symbol.FillPoint(System.Drawing.Graphics,System.Single,System.Single,System.Single,System.Drawing.Pen,System.Drawing.Brush)">
            <summary>
            Render the filled <see cref="T:ZedGraph.Symbol"/> to the specified <see cref="T:System.Drawing.Graphics"/>
            device at the specified location.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="x">The x position of the center of the symbol in
            pixel units</param>
            <param name="y">The y position of the center of the symbol in
            pixel units</param>
            <param name="scaleFactor">
            The scaling factor for the features of the graph based on the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.  This
            scaling factor is calculated by the <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method.  The scale factor
            represents a linear multiple to be applied to font sizes, symbol sizes, etc.
            </param>		
            <param name="pen">A pen with attributes of <see cref="T:System.Drawing.Color"/> and
            <see cref="P:ZedGraph.Border.PenWidth"/> for this symbol</param>
            <param name="brush">A brush with the <see cref="T:System.Drawing.Color"/> attribute
            for this symbol</param>
        </member>
        <member name="M:ZedGraph.Symbol.Draw(System.Drawing.Graphics,ZedGraph.GraphPane,ZedGraph.LineItem,System.Boolean,System.Single)">
            <summary>
            Draw the this <see cref="T:ZedGraph.CurveItem"/> to the specified <see cref="T:System.Drawing.Graphics"/>
            device as a symbol at each defined point.  The routine
            only draws the symbols; the lines are draw by the
            <see cref="M:ZedGraph.Line.DrawCurve(System.Drawing.Graphics,ZedGraph.GraphPane,ZedGraph.LineItem,System.Boolean,System.Single)"/> method.  This method
            is normally only called by the Draw method of the
            <see cref="T:ZedGraph.CurveItem"/> object
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="curve">A <see cref="T:ZedGraph.LineItem"/> representing this
            curve.</param>
            <param name="isY2Axis">A value indicating to which Y axis this curve is assigned.
            true for the "Y2" axis, false for the "Y" axis.</param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="P:ZedGraph.Symbol.Size">
            <summary>
            Gets or sets the size of the <see cref="T:ZedGraph.Symbol"/>
            </summary>
            <value>Size in points (1/72 inch)</value>
            <seealso cref="F:ZedGraph.Symbol.Default.Size"/>
        </member>
        <member name="P:ZedGraph.Symbol.Type">
            <summary>
            Gets or sets the type (shape) of the <see cref="T:ZedGraph.Symbol"/>
            </summary>
            <value>A <see cref="T:ZedGraph.SymbolType"/> enum value indicating the shape</value>
            <seealso cref="F:ZedGraph.Symbol.Default.Type"/>
        </member>
        <member name="P:ZedGraph.Symbol.IsVisible">
            <summary>
            Gets or sets a property that shows or hides the <see cref="T:ZedGraph.Symbol"/>.
            </summary>
            <value>true to show the symbol, false to hide it</value>
            <seealso cref="F:ZedGraph.Symbol.Default.IsVisible"/>
        </member>
        <member name="P:ZedGraph.Symbol.Fill">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.Fill"/> data for this
            <see cref="T:ZedGraph.Symbol"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.Symbol.Border">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.Border"/> data for this
            <see cref="T:ZedGraph.Symbol"/>, which controls the border outline of the symbol.
            </summary>
        </member>
        <member name="T:ZedGraph.Symbol.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.Symbol"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.Symbol.Default.Size">
            <summary>
            The default size for curve symbols (<see cref="P:ZedGraph.Symbol.Size"/> property),
            in units of points.
            </summary>
        </member>
        <member name="F:ZedGraph.Symbol.Default.PenWidth">
            <summary>
            The default pen width to be used for drawing curve symbols
            (<see cref="P:ZedGraph.Border.PenWidth"/> property).  Units are points.
            </summary>
        </member>
        <member name="F:ZedGraph.Symbol.Default.FillColor">
            <summary>
            The default color for filling in this <see cref="T:ZedGraph.Symbol"/>
            (<see cref="P:ZedGraph.Fill.Color"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Symbol.Default.FillBrush">
            <summary>
            The default custom brush for filling in this <see cref="T:ZedGraph.Symbol"/>
            (<see cref="P:ZedGraph.Fill.Brush"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Symbol.Default.FillType">
            <summary>
            The default fill mode for the curve (<see cref="P:ZedGraph.Fill.Type"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.Symbol.Default.Type">
            <summary>
            The default symbol type for curves (<see cref="P:ZedGraph.Symbol.Type"/> property).
            This is defined as a <see cref="T:ZedGraph.SymbolType"/> enumeration.
            </summary>
        </member>
        <member name="F:ZedGraph.Symbol.Default.IsVisible">
            <summary>
            The default display mode for symbols (<see cref="P:ZedGraph.Symbol.IsVisible"/> property).
            true to display symbols, false to hide them.
            </summary>
        </member>
        <member name="F:ZedGraph.Symbol.Default.IsBorderVisible">
            <summary>
            The default for drawing frames around symbols (<see cref="P:ZedGraph.Border.IsVisible"/> property).
            true to display symbol frames, false to hide them.
            </summary>
        </member>
        <member name="F:ZedGraph.Symbol.Default.BorderColor">
            <summary>
            The default color for drawing symbols (<see cref="P:ZedGraph.Border.Color"/> property).
            </summary>
        </member>
        <member name="T:ZedGraph.TextItem">
            <summary>
            A class that represents a text object on the graph.  A list of
            <see cref="T:ZedGraph.GraphItem"/> objects is maintained by the
            <see cref="T:ZedGraph.GraphItemList"/> collection class.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.19 $ $Date: 2005/02/01 06:03:19 $ </version>
        </member>
        <member name="F:ZedGraph.TextItem.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="F:ZedGraph.TextItem.text">
            <summary> Private field to store the actual text string for this
            <see cref="T:ZedGraph.TextItem"/>.  Use the public property <see cref="P:ZedGraph.TextItem.Text"/>
            to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.TextItem.fontSpec">
            <summary>
            Private field to store the <see cref="P:ZedGraph.TextItem.FontSpec"/> class used to render
            this <see cref="T:ZedGraph.TextItem"/>.  Use the public property <see cref="P:ZedGraph.TextItem.FontSpec"/>
            to access this class.
            </summary>
        </member>
        <member name="F:ZedGraph.TextItem.layoutArea">
            <summary>
            Private field holding the SizeF into which this <see cref="T:ZedGraph.TextItem"/>
            should be rendered. Use the public property <see cref="P:ZedGraph.TextItem.LayoutArea"/>
            to access this value.
            </summary>
        </member>
        <member name="M:ZedGraph.TextItem.#ctor(System.String,System.Single,System.Single)">
            <summary>
            Constructor that sets all <see cref="T:ZedGraph.TextItem"/> properties to default
            values as defined in the <see cref="T:ZedGraph.TextItem.Default"/> class.
            </summary>
            <param name="text">The text to be displayed.</param>
            <param name="x">The x position of the text.  The units
            of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.  The text will be
            aligned to this position based on the <see cref="T:ZedGraph.AlignH"/>
            property.</param>
            <param name="y">The y position of the text.  The units
            of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.  The text will be
            aligned to this position based on the
            <see cref="T:ZedGraph.AlignV"/> property.</param>
        </member>
        <member name="M:ZedGraph.TextItem.#ctor(System.String,System.Single,System.Single,ZedGraph.CoordType)">
            <summary>
            Constructor that sets all <see cref="T:ZedGraph.TextItem"/> properties to default
            values as defined in the <see cref="T:ZedGraph.TextItem.Default"/> class.
            </summary>
            <param name="text">The text to be displayed.</param>
            <param name="x">The x position of the text.  The units
            of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.  The text will be
            aligned to this position based on the <see cref="T:ZedGraph.AlignH"/>
            property.</param>
            <param name="y">The y position of the text.  The units
            of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.  The text will be
            aligned to this position based on the
            <see cref="T:ZedGraph.AlignV"/> property.</param>
            <param name="coordType">The <see cref="T:ZedGraph.CoordType"/> enum value that
            indicates what type of coordinate system the x and y parameters are
            referenced to.</param>
        </member>
        <member name="M:ZedGraph.TextItem.#ctor(System.String,System.Single,System.Single,ZedGraph.CoordType,ZedGraph.AlignH,ZedGraph.AlignV)">
            <summary>
            Constructor that sets all <see cref="T:ZedGraph.TextItem"/> properties to default
            values as defined in the <see cref="T:ZedGraph.TextItem.Default"/> class.
            </summary>
            <param name="text">The text to be displayed.</param>
            <param name="x">The x position of the text.  The units
            of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.  The text will be
            aligned to this position based on the <see cref="T:ZedGraph.AlignH"/>
            property.</param>
            <param name="y">The y position of the text.  The units
            of this position are specified by the
            <see cref="P:ZedGraph.Location.CoordinateFrame"/> property.  The text will be
            aligned to this position based on the
            <see cref="T:ZedGraph.AlignV"/> property.</param>
            <param name="coordType">The <see cref="T:ZedGraph.CoordType"/> enum value that
            indicates what type of coordinate system the x and y parameters are
            referenced to.</param>
            <param name="alignH">The <see cref="T:ZedGraph.AlignH"/> enum that specifies
            the horizontal alignment of the object with respect to the (x,y) location</param>
            <param name="alignV">The <see cref="T:ZedGraph.AlignV"/> enum that specifies
            the vertical alignment of the object with respect to the (x,y) location</param>
        </member>
        <member name="M:ZedGraph.TextItem.#ctor">
            <summary>
            Parameterless constructor that initializes a new <see cref="T:ZedGraph.TextItem"/>.
            </summary>
        </member>
        <member name="M:ZedGraph.TextItem.#ctor(ZedGraph.TextItem)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.TextItem"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.TextItem.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the <see cref="T:ZedGraph.TextItem"/></returns>
        </member>
        <member name="M:ZedGraph.TextItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.TextItem.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.TextItem.Draw(System.Drawing.Graphics,ZedGraph.PaneBase,System.Single)">
            <summary>
            Render this <see cref="T:ZedGraph.TextItem"/> object to the specified <see cref="T:System.Drawing.Graphics"/> device
            This method is normally only called by the Draw method
            of the parent <see cref="T:ZedGraph.GraphItemList"/> collection object.
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.TextItem.PointInBox(System.Drawing.PointF,ZedGraph.PaneBase,System.Drawing.Graphics,System.Single)">
            <summary>
            Determine if the specified screen point lies inside the bounding box of this
            <see cref="T:ZedGraph.TextItem"/>.  This method takes into account rotation and alignment
            parameters of the text, as specified in the <see cref="P:ZedGraph.TextItem.FontSpec"/>.
            </summary>
            <param name="pt">The screen point, in pixels</param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.PaneBase"/> object that is the parent or
            owner of this object.
            </param>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
            <returns>true if the point lies in the bounding box, false otherwise</returns>
        </member>
        <member name="P:ZedGraph.TextItem.LayoutArea">
            <summary>
            
            </summary>
        </member>
        <member name="P:ZedGraph.TextItem.Text">
            <summary>
            The <see cref="T:ZedGraph.TextItem"/> to be displayed.  This text can be multi-line by
            including newline ('\n') characters between the lines.
            </summary>
        </member>
        <member name="P:ZedGraph.TextItem.FontSpec">
            <summary>
            Gets a reference to the <see cref="P:ZedGraph.TextItem.FontSpec"/> class used to render
            this <see cref="T:ZedGraph.TextItem"/>
            </summary>
            <seealso cref="F:ZedGraph.TextItem.Default.FontColor"/>
            <seealso cref="F:ZedGraph.TextItem.Default.FontBold"/>
            <seealso cref="F:ZedGraph.TextItem.Default.FontItalic"/>
            <seealso cref="F:ZedGraph.TextItem.Default.FontUnderline"/>
            <seealso cref="F:ZedGraph.TextItem.Default.FontFamily"/>
            <seealso cref="F:ZedGraph.TextItem.Default.FontSize"/>
        </member>
        <member name="T:ZedGraph.TextItem.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.TextItem"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.TextItem.Default.FontFamily">
            <summary>
            The default font family for the <see cref="T:ZedGraph.TextItem"/> text
            (<see cref="P:ZedGraph.FontSpec.Family"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.TextItem.Default.FontSize">
            <summary>
            The default font size for the <see cref="T:ZedGraph.TextItem"/> text
            (<see cref="P:ZedGraph.FontSpec.Size"/> property).  Units are
            in points (1/72 inch).
            </summary>
        </member>
        <member name="F:ZedGraph.TextItem.Default.FontColor">
            <summary>
            The default font color for the <see cref="T:ZedGraph.TextItem"/> text
            (<see cref="P:ZedGraph.FontSpec.FontColor"/> property).
            </summary>
        </member>
        <member name="F:ZedGraph.TextItem.Default.FontBold">
            <summary>
            The default font bold mode for the <see cref="T:ZedGraph.TextItem"/> text
            (<see cref="P:ZedGraph.FontSpec.IsBold"/> property). true
            for a bold typeface, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.TextItem.Default.FontUnderline">
            <summary>
            The default font underline mode for the <see cref="T:ZedGraph.TextItem"/> text
            (<see cref="P:ZedGraph.FontSpec.IsUnderline"/> property). true
            for an underlined typeface, false otherwise.
            </summary>
        </member>
        <member name="F:ZedGraph.TextItem.Default.FontItalic">
            <summary>
            The default font italic mode for the <see cref="T:ZedGraph.TextItem"/> text
            (<see cref="P:ZedGraph.FontSpec.IsItalic"/> property). true
            for an italic typeface, false otherwise.
            </summary>
        </member>
        <member name="T:ZedGraph.AxisType">
            <summary>
            Enumeration type for the various axis types that are available
            </summary>
            <seealso cref="P:ZedGraph.Axis.Type"/>
        </member>
        <member name="F:ZedGraph.AxisType.Linear">
            <summary> An ordinary, cartesian axis </summary>
        </member>
        <member name="F:ZedGraph.AxisType.Log">
            <summary> A base 10 log axis </summary>
        </member>
        <member name="F:ZedGraph.AxisType.Date">
            <summary> A cartesian axis with calendar dates or times </summary>
        </member>
        <member name="F:ZedGraph.AxisType.Text">
            <summary> An ordinal axis with user-defined text labels.  An ordinal axis means that
            all data points are evenly spaced at integral values, and the actual coordinate values
            for points corresponding to that axis are ignored.  That is, if the X axis is an
            ordinal type, then all X values associated with the curves are ignored.</summary>
            <seealso cref="F:ZedGraph.AxisType.Ordinal"/>
            <seealso cref="P:ZedGraph.Axis.IsText"/>
            <seealso cref="F:ZedGraph.Axis.Default.MaxTextLabels"/>
        </member>
        <member name="F:ZedGraph.AxisType.Ordinal">
            <summary> An ordinal axis with regular numeric labels.  An ordinal axis means that
            all data points are evenly spaced at integral values, and the actual coordinate values
            for points corresponding to that axis are ignored.  That is, if the X axis is an
            ordinal type, then all X values associated with the curves are ignored. </summary>
            <seealso cref="F:ZedGraph.AxisType.Text"/>
            <seealso cref="P:ZedGraph.Axis.IsOrdinal"/>
        </member>
        <member name="T:ZedGraph.FillType">
            <summary>
            Enumeration type for the various types of fills that can be used with <see cref="T:ZedGraph.Bar"/>
            charts.
            </summary>
        </member>
        <member name="F:ZedGraph.FillType.None">
            <summary> No fill </summary>
        </member>
        <member name="F:ZedGraph.FillType.Solid">
            <summary> A solid fill using <see cref="T:System.Drawing.SolidBrush"/> </summary>
        </member>
        <member name="F:ZedGraph.FillType.Brush">
            <summary> A custom fill using either <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/> or
            <see cref="T:System.Drawing.TextureBrush"/></summary>
        </member>
        <member name="F:ZedGraph.FillType.GradientByX">
            <summary>
            Fill with a single solid color based on the X value of the data.</summary>
            <remarks>The X value is
            used to determine the color value based on a gradient brush, and using a data range
            of <see cref="P:ZedGraph.Fill.RangeMin"/> and <see cref="P:ZedGraph.Fill.RangeMax"/>.  You can create a multicolor
            range by initializing the <see cref="T:ZedGraph.Fill"/> class with your own custom
            <see cref="F:ZedGraph.FillType.Brush"/> object based on a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/>.  In cases where a
            data value makes no sense (<see cref="P:ZedGraph.PaneBase.PaneFill"/>, <see cref="P:ZedGraph.Legend.Fill"/>,
            etc.), a default value of 50% of the range is assumed.  The default range is 0 to 1.
            </remarks>
        </member>
        <member name="F:ZedGraph.FillType.GradientByY">
            <summary>
            Fill with a single solid color based on the Z value of the data.</summary>
            <remarks>The Z value is
            used to determine the color value based on a gradient brush, and using a data range
            of <see cref="P:ZedGraph.Fill.RangeMin"/> and <see cref="P:ZedGraph.Fill.RangeMax"/>.  You can create a multicolor
            range by initializing the <see cref="T:ZedGraph.Fill"/> class with your own custom
            <see cref="F:ZedGraph.FillType.Brush"/> object based on a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/>.  In cases where a
            data value makes no sense (<see cref="P:ZedGraph.PaneBase.PaneFill"/>, <see cref="P:ZedGraph.Legend.Fill"/>,
            etc.), a default value of 50% of the range is assumed.  The default range is 0 to 1.
            </remarks>
        </member>
        <member name="F:ZedGraph.FillType.GradientByZ">
            <summary>
            Fill with a single solid color based on the Z value of the data.</summary>
            <remarks>The Z value is
            used to determine the color value based on a gradient brush, and using a data range
            of <see cref="P:ZedGraph.Fill.RangeMin"/> and <see cref="P:ZedGraph.Fill.RangeMax"/>.  You can create a multicolor
            range by initializing the <see cref="T:ZedGraph.Fill"/> class with your own custom
            <see cref="F:ZedGraph.FillType.Brush"/> object based on a <see cref="T:System.Drawing.Drawing2D.ColorBlend"/>.  In cases where a
            data value makes no sense (<see cref="P:ZedGraph.PaneBase.PaneFill"/>, <see cref="P:ZedGraph.Legend.Fill"/>,
            etc.), a default value of 50% of the range is assumed.  The default range is 0 to 1.
            </remarks>
        </member>
        <member name="T:ZedGraph.DateUnit">
            <summary>
            Enumeration type for the various axis date and time unit types that are available
            </summary>
        </member>
        <member name="F:ZedGraph.DateUnit.Year">
            <summary> Yearly units <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="P:ZedGraph.Axis.MinorUnit"/> </summary>
        </member>
        <member name="F:ZedGraph.DateUnit.Month">
            <summary> Monthly units <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="P:ZedGraph.Axis.MinorUnit"/> </summary>
        </member>
        <member name="F:ZedGraph.DateUnit.Day">
            <summary> Daily units <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="P:ZedGraph.Axis.MinorUnit"/> </summary>
        </member>
        <member name="F:ZedGraph.DateUnit.Hour">
            <summary> Hourly units <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="P:ZedGraph.Axis.MinorUnit"/> </summary>
        </member>
        <member name="F:ZedGraph.DateUnit.Minute">
            <summary> Minute units <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="P:ZedGraph.Axis.MinorUnit"/> </summary>
        </member>
        <member name="F:ZedGraph.DateUnit.Second">
            <summary> Second units <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="P:ZedGraph.Axis.MinorUnit"/> </summary>
        </member>
        <member name="T:ZedGraph.SymbolType">
            <summary>
            Enumeration type for the various symbol shapes that are available
            </summary>
            <seealso cref="P:ZedGraph.Symbol.Fill"/>
        </member>
        <member name="F:ZedGraph.SymbolType.Square">
            <summary> Square-shaped <see cref="T:ZedGraph.Symbol"/> </summary>
        </member>
        <member name="F:ZedGraph.SymbolType.Diamond">
            <summary> Rhombus-shaped <see cref="T:ZedGraph.Symbol"/> </summary>
        </member>
        <member name="F:ZedGraph.SymbolType.Triangle">
            <summary> Equilateral triangle <see cref="T:ZedGraph.Symbol"/> </summary>
        </member>
        <member name="F:ZedGraph.SymbolType.Circle">
            <summary> Uniform circle <see cref="T:ZedGraph.Symbol"/> </summary>
        </member>
        <member name="F:ZedGraph.SymbolType.XCross">
            <summary> "X" shaped <see cref="T:ZedGraph.Symbol"/>.  This symbol cannot
            be filled since it has no outline. </summary>
        </member>
        <member name="F:ZedGraph.SymbolType.Plus">
            <summary> "+" shaped <see cref="T:ZedGraph.Symbol"/>.  This symbol cannot
            be filled since it has no outline. </summary>
        </member>
        <member name="F:ZedGraph.SymbolType.Star">
            <summary> Asterisk-shaped <see cref="T:ZedGraph.Symbol"/>.  This symbol
            cannot be filled since it has no outline. </summary>
        </member>
        <member name="F:ZedGraph.SymbolType.TriangleDown">
            <summary> Unilateral triangle <see cref="T:ZedGraph.Symbol"/>, pointing
            down. </summary>
        </member>
        <member name="F:ZedGraph.SymbolType.HDash">
            <summary>
            Horizontal dash <see cref="T:ZedGraph.Symbol"/>.  This symbol cannot be
            filled since it has no outline.
            </summary>
        </member>
        <member name="F:ZedGraph.SymbolType.VDash">
            <summary>
            Vertical dash <see cref="T:ZedGraph.Symbol"/>.  This symbol cannot be
            filled since it has no outline.
            </summary>
        </member>
        <member name="F:ZedGraph.SymbolType.Default">
            <summary> A Default symbol type (the symbol type will be obtained
            from <see cref="F:ZedGraph.Symbol.Default.Type"/>. </summary>
        </member>
        <member name="F:ZedGraph.SymbolType.None">
            <summary> No symbol is shown (this is equivalent to using
            <see cref="P:ZedGraph.Symbol.IsVisible"/> = false.</summary>
        </member>
        <member name="T:ZedGraph.LegendPos">
            <summary>
            Enumeration type that defines the possible legend locations
            </summary>
            <seealso cref="P:ZedGraph.Legend.Position"/>
        </member>
        <member name="F:ZedGraph.LegendPos.Top">
            <summary>
            Locate the <see cref="T:ZedGraph.Legend"/> above the <see cref="P:ZedGraph.GraphPane.AxisRect"/>
            </summary>
        </member>
        <member name="F:ZedGraph.LegendPos.Left">
            <summary>
            Locate the <see cref="T:ZedGraph.Legend"/> on the left side of the <see cref="P:ZedGraph.GraphPane.AxisRect"/>
            </summary>
        </member>
        <member name="F:ZedGraph.LegendPos.Right">
            <summary>
            Locate the <see cref="T:ZedGraph.Legend"/> on the right side of the <see cref="P:ZedGraph.GraphPane.AxisRect"/>
            </summary>
        </member>
        <member name="F:ZedGraph.LegendPos.Bottom">
            <summary>
            Locate the <see cref="T:ZedGraph.Legend"/> below the <see cref="P:ZedGraph.GraphPane.AxisRect"/>
            </summary>
        </member>
        <member name="F:ZedGraph.LegendPos.InsideTopLeft">
            <summary>
            Locate the <see cref="T:ZedGraph.Legend"/> inside the <see cref="P:ZedGraph.GraphPane.AxisRect"/> in the
            top-left corner.  
            </summary>
        </member>
        <member name="F:ZedGraph.LegendPos.InsideTopRight">
            <summary>
            Locate the <see cref="T:ZedGraph.Legend"/> inside the <see cref="P:ZedGraph.GraphPane.AxisRect"/> in the
            top-right corner. 
            </summary>
        </member>
        <member name="F:ZedGraph.LegendPos.InsideBotLeft">
            <summary>
            Locate the <see cref="T:ZedGraph.Legend"/> inside the <see cref="P:ZedGraph.GraphPane.AxisRect"/> in the
            bottom-left corner.
            </summary>
        </member>
        <member name="F:ZedGraph.LegendPos.InsideBotRight">
            <summary>
            Locate the <see cref="T:ZedGraph.Legend"/> inside the <see cref="P:ZedGraph.GraphPane.AxisRect"/> in the
            bottom-right corner. 
            </summary>
        </member>
        <member name="F:ZedGraph.LegendPos.Float">
            <summary>
            Locate the <see cref="T:ZedGraph.Legend"/> as a floating object above the graph at the
            location specified by <see cref="P:ZedGraph.Legend.Location"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.LegendPos.TopCenter">
            <summary>
            Locate the <see cref="T:ZedGraph.Legend"/> centered above the <see cref="P:ZedGraph.GraphPane.AxisRect"/>
            </summary>
        </member>
        <member name="F:ZedGraph.LegendPos.BottomCenter">
            <summary>
            Locate the <see cref="T:ZedGraph.Legend"/> centered below the <see cref="P:ZedGraph.GraphPane.AxisRect"/>
            </summary>
        </member>
        <member name="T:ZedGraph.AlignH">
            <summary>
            Enumeration type for the different horizontal text alignment options
            </summary>
            <seealso cref="T:ZedGraph.FontSpec"/>
        </member>
        <member name="F:ZedGraph.AlignH.Left">
            <summary>
            Position the text so that its left edge is aligned with the
            specified X,Y location.  Used by the
            <see cref="M:ZedGraph.FontSpec.Draw(System.Drawing.Graphics,System.Boolean,System.String,System.Single,System.Single,ZedGraph.AlignH,ZedGraph.AlignV,System.Single)"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.AlignH.Center">
            <summary>
            Position the text so that its center is aligned (horizontally) with the
            specified X,Y location.  Used by the
            <see cref="M:ZedGraph.FontSpec.Draw(System.Drawing.Graphics,System.Boolean,System.String,System.Single,System.Single,ZedGraph.AlignH,ZedGraph.AlignV,System.Single)"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.AlignH.Right">
            <summary>
            Position the text so that its right edge is aligned with the
            specified X,Y location.  Used by the
            <see cref="M:ZedGraph.FontSpec.Draw(System.Drawing.Graphics,System.Boolean,System.String,System.Single,System.Single,ZedGraph.AlignH,ZedGraph.AlignV,System.Single)"/> method.
            </summary>
        </member>
        <member name="T:ZedGraph.AlignP">
            <summary>
            Enumeration type for the different proximal alignment options
            </summary>
            <seealso cref="T:ZedGraph.FontSpec"/>
            <seealso cref="P:ZedGraph.Axis.ScaleAlign"/>
        </member>
        <member name="F:ZedGraph.AlignP.Inside">
            <summary>
            Position the text so that its "inside" edge (the edge that is
            nearest to the alignment reference point or object) is aligned.
            Used by the <see cref="P:ZedGraph.Axis.ScaleAlign"/> method to align text
            to the axis.
            </summary>
        </member>
        <member name="F:ZedGraph.AlignP.Center">
            <summary>
            Position the text so that its center is aligned with the
            reference object or point.
            Used by the <see cref="P:ZedGraph.Axis.ScaleAlign"/> method to align text
            to the axis.
            </summary>
        </member>
        <member name="F:ZedGraph.AlignP.Outside">
            <summary>
            Position the text so that its right edge (the edge that is
            farthest from the alignment reference point or object) is aligned.
            Used by the <see cref="P:ZedGraph.Axis.ScaleAlign"/> method to align text
            to the axis.
            </summary>
        </member>
        <member name="T:ZedGraph.AlignV">
            <summary>
            Enumeration type for the different vertical text alignment options
            </summary>
            specified X,Y location.  Used by the
            <see cref="M:ZedGraph.FontSpec.Draw(System.Drawing.Graphics,System.Boolean,System.String,System.Single,System.Single,ZedGraph.AlignH,ZedGraph.AlignV,System.Single)"/> method.
        </member>
        <member name="F:ZedGraph.AlignV.Top">
            <summary>
            Position the text so that its top edge is aligned with the
            specified X,Y location.  Used by the
            <see cref="M:ZedGraph.FontSpec.Draw(System.Drawing.Graphics,System.Boolean,System.String,System.Single,System.Single,ZedGraph.AlignH,ZedGraph.AlignV,System.Single)"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.AlignV.Center">
            <summary>
            Position the text so that its center is aligned (vertically) with the
            specified X,Y location.  Used by the
            <see cref="M:ZedGraph.FontSpec.Draw(System.Drawing.Graphics,System.Boolean,System.String,System.Single,System.Single,ZedGraph.AlignH,ZedGraph.AlignV,System.Single)"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.AlignV.Bottom">
            <summary>
            Position the text so that its bottom edge is aligned with the
            specified X,Y location.  Used by the
            <see cref="M:ZedGraph.FontSpec.Draw(System.Drawing.Graphics,System.Boolean,System.String,System.Single,System.Single,ZedGraph.AlignH,ZedGraph.AlignV,System.Single)"/> method.
            </summary>
        </member>
        <member name="T:ZedGraph.CoordType">
            <summary>
            Enumeration type for the user-defined coordinate types available.
            These coordinate types are used the <see cref="T:ZedGraph.ArrowItem"/> objects
            and <see cref="T:ZedGraph.TextItem"/> objects only.
            </summary>
            <seealso cref="P:ZedGraph.Location.CoordinateFrame"/>
        </member>
        <member name="F:ZedGraph.CoordType.AxisFraction">
            <summary>
            Coordinates are specified as a fraction of the
            <see cref="P:ZedGraph.GraphPane.AxisRect"/>.  That is, for the X coordinate, 0.0
            is at the left edge of the AxisRect and 1.0
            is at the right edge of the AxisRect. A value less
            than zero is left of the AxisRect and a value
            greater than 1.0 is right of the AxisRect.  For the Y coordinate, 0.0
            is the bottom and 1.0 is the top.
            </summary>
        </member>
        <member name="F:ZedGraph.CoordType.PaneFraction">
            <summary>
            Coordinates are specified as a fraction of the
            <see cref="P:ZedGraph.PaneBase.PaneRect"/>.  That is, for the X coordinate, 0.0
            is at the left edge of the PaneRect and 1.0
            is at the right edge of the PaneRect. A value less
            than zero is left of the PaneRect and a value
            greater than 1.0 is right of the PaneRect.  For the Y coordinate, 0.0
            is the bottom and 1.0 is the top.  Note that
            any value less than zero or greater than 1.0 will be outside
            the PaneRect, and therefore clipped.
            </summary>
        </member>
        <member name="F:ZedGraph.CoordType.AxisXYScale">
            <summary>
            Coordinates are specified according to the user axis scales
            for the <see cref="P:ZedGraph.GraphPane.XAxis"/> and <see cref="P:ZedGraph.GraphPane.YAxis"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.CoordType.AxisXY2Scale">
            <summary>
            Coordinates are specified according to the user axis scales
            for the <see cref="P:ZedGraph.GraphPane.XAxis"/> and <see cref="P:ZedGraph.GraphPane.Y2Axis"/>.
            </summary>
        </member>
        <member name="T:ZedGraph.StepType">
            <summary>
            Enumeration type that defines how a curve is drawn.  Curves can be drawn
            as ordinary lines by connecting the points directly, or in a stair-step
            fashion as a series of discrete, constant values.  In a stair step plot,
            all lines segments are either horizontal or vertical.  In a non-step (line)
            plot, the lines can be any angle.
            </summary>
            <seealso cref="P:ZedGraph.Line.StepType"/>
        </member>
        <member name="F:ZedGraph.StepType.ForwardStep">
            <summary>
            Draw the <see cref="T:ZedGraph.CurveItem"/> as a stair-step in which each
            point defines the
            beginning (left side) of a new stair.  This implies the points are
            defined at the beginning of an "event."
            </summary>
        </member>
        <member name="F:ZedGraph.StepType.RearwardStep">
            <summary>
            Draw the <see cref="T:ZedGraph.CurveItem"/> as a stair-step in which each
            point defines the end (right side) of a new stair.  This implies
            the points are defined at the end of an "event."
            </summary>
        </member>
        <member name="F:ZedGraph.StepType.NonStep">
            <summary>
            Draw the <see cref="T:ZedGraph.CurveItem"/> as an ordinary line, in which the
            points are connected directly by line segments.
            </summary>
        </member>
        <member name="T:ZedGraph.BarBase">
            <summary>
            Enumeration type that defines the base axis from which <see cref="T:ZedGraph.Bar"/> graphs
            are displayed. The bars can be drawn on any of the three axes (<see cref="T:ZedGraph.XAxis"/>,
            <see cref="T:ZedGraph.YAxis"/>, and <see cref="T:ZedGraph.Y2Axis"/>).
            </summary>
            <seealso cref="P:ZedGraph.GraphPane.BarBase"/>
        </member>
        <member name="F:ZedGraph.BarBase.X">
            <summary>
            Draw the <see cref="T:ZedGraph.Bar"/> chart based from the <see cref="T:ZedGraph.XAxis"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.BarBase.Y">
            <summary>
            Draw the <see cref="T:ZedGraph.Bar"/> chart based from the <see cref="T:ZedGraph.YAxis"/>.
            </summary>
        </member>
        <member name="F:ZedGraph.BarBase.Y2">
            <summary>
            Draw the <see cref="T:ZedGraph.Bar"/> chart based from the <see cref="T:ZedGraph.Y2Axis"/>.
            </summary>
        </member>
        <member name="T:ZedGraph.LineType">
            <summary>
            Enumeration type that defines the available types of <see cref="T:ZedGraph.LineItem"/> graphs.
            </summary>
            <seealso cref="P:ZedGraph.GraphPane.LineType"/>
        </member>
        <member name="F:ZedGraph.LineType.Normal">
            <summary>
            Draw the lines as normal.  Any fill area goes from each line down to the X Axis.
            </summary>
        </member>
        <member name="F:ZedGraph.LineType.Stack">
            <summary>
            Draw the lines stacked on top of each other, accumulating values to a total value.
            </summary>
        </member>
        <member name="T:ZedGraph.BarType">
            <summary>
            Enumeration type that defines the available types of <see cref="T:ZedGraph.BarItem"/> graphs.
            </summary>
            <seealso cref="P:ZedGraph.GraphPane.BarType"/>
        </member>
        <member name="F:ZedGraph.BarType.Cluster">
            <summary>
            Draw each <see cref="T:ZedGraph.BarItem"/> side by side in clusters.
            </summary>
        </member>
        <member name="F:ZedGraph.BarType.Overlay">
            <summary>
            Draw the <see cref="T:ZedGraph.BarItem"/> bars one on top of the other.  The bars will
            be drawn such that the last bar in the <see cref="T:ZedGraph.CurveList"/> will be behind
            all other bars.  Note that the bar values are not summed up for the overlay
            mode.  The data values must be summed before being passed
            to <see cref="M:ZedGraph.GraphPane.AddBar(System.String,ZedGraph.PointPairList,System.Drawing.Color)"/>.
            For example, if the first bar of
            the first <see cref="T:ZedGraph.BarItem"/> has a value of 100, and the first bar of
            the second <see cref="T:ZedGraph.BarItem"/> has a value of 120, then that bar will
            appear to be 20 units on top of the first bar.
            </summary>
        </member>
        <member name="F:ZedGraph.BarType.SortedOverlay">
            <summary>
            Draw the <see cref="T:ZedGraph.BarItem"/> bars one on top of the other.  The bars will
            be drawn such that the bars are sorted according to the maximum value, with
            the tallest bar at each point at the back and the shortest bar at the front.
            This is similar to the <see cref="F:ZedGraph.BarType.Overlay"/> mode, but the bars are sorted at
            each base value.
            The data values must be summed before being passed
            to <see cref="M:ZedGraph.GraphPane.AddBar(System.String,ZedGraph.PointPairList,System.Drawing.Color)"/>.  For example, if the first bar of
            the first <see cref="T:ZedGraph.BarItem"/> has a value of 100, and the first bar of
            the second <see cref="T:ZedGraph.BarItem"/> has a value of 120, then that bar will
            appear to be 20 units on top of the first bar.
            </summary>
        </member>
        <member name="F:ZedGraph.BarType.Stack">
            <summary>
            Draw the <see cref="T:ZedGraph.BarItem"/> bars in an additive format so that they stack on
            top of one another.  The value of the last bar drawn will be the sum of the values
            of all prior bars.
            </summary>
        </member>
        <member name="F:ZedGraph.BarType.PercentStack">
             <summary>
             Draw the <see cref="T:ZedGraph.BarItem"/> bars in a format whereby the height of each
             represents the percentage of the total each one represents.  Negative values
            are displayed below the zero line as percentages of the absolute total of all values. 
             </summary>
        </member>
        <member name="T:ZedGraph.SortType">
            <summary>
            Enumeration type that defines which set of data points - X or Y - is used  
            <seealso cref="M:System.Collections.ArrayList.Sort"/> to perform the sort.
            </summary>
        </member>
        <member name="F:ZedGraph.SortType.YValues">
            <summary>
            Use the Y values to sort the list.
            </summary>
        </member>
        <member name="F:ZedGraph.SortType.XValues">
            <summary>
            Use the X values to sort the list.
            </summary>
        </member>
        <member name="T:ZedGraph.ZOrder">
            <summary>
            Enumeration that specifies a Z-Order position for <see cref="T:ZedGraph.GraphItem"/>
            objects.
            </summary>
            <remarks>This enumeration allows you to set the layering of various graph
            features.  Except for the <see cref="T:ZedGraph.GraphItem"/> objects, other feature types
            all have a fixed depth as follows (front to back):
            <list>
            <see cref="T:ZedGraph.Legend"/> objects
            The border around <see cref="P:ZedGraph.GraphPane.AxisRect"/>
            <see cref="T:ZedGraph.CurveItem"/> objects
            The <see cref="T:ZedGraph.Axis"/> features
            The background fill of the <see cref="P:ZedGraph.GraphPane.AxisRect"/>
            The pane <see cref="P:ZedGraph.PaneBase.Title"/>
            The background fill of the <see cref="P:ZedGraph.PaneBase.PaneRect"/>
            </list>
            You cannot place anything behind the <see cref="P:ZedGraph.PaneBase.PaneRect"/>
            background fill, but <see cref="P:ZedGraph.GraphItem.ZOrder"/> allows you to
            explicitly control the depth of <see cref="T:ZedGraph.GraphItem"/> objects
            between all other object types.  For items of equal <see cref="T:ZedGraph.ZOrder"/>,
            such as multiple <see cref="T:ZedGraph.CurveItem"/>'s or <see cref="T:ZedGraph.GraphItem"/>'s
            having the same <see cref="T:ZedGraph.ZOrder"/> value, the relative depth is
            controlled by the ordinal position in the list (either
            <see cref="T:ZedGraph.CurveList"/> or <see cref="T:ZedGraph.GraphItemList"/>).
            <see cref="T:ZedGraph.GraphItem"/> objects
            can be placed in the <see cref="T:ZedGraph.GraphItemList"/> of either a
            <see cref="T:ZedGraph.GraphPane"/> or a <see cref="T:ZedGraph.MasterPane"/>.  For a
            <see cref="T:ZedGraph.GraphPane"/>-based <see cref="T:ZedGraph.GraphItem"/>, all <see cref="T:ZedGraph.ZOrder"/>
            values are applicable.  For a <see cref="T:ZedGraph.MasterPane"/>-based
            <see cref="T:ZedGraph.GraphItem"/>, any <see cref="T:ZedGraph.ZOrder"/> value can be used, but there
            are really only three depths:
            <list><see cref="F:ZedGraph.ZOrder.G_BehindAll"/> will place the item behind the pane title,
            <see cref="F:ZedGraph.ZOrder.A_InFront"/> will place on top of all other graph features,
            any other value places the object above the pane title, but behind the <see cref="T:ZedGraph.GraphPane"/>'s.
            </list>
            </remarks>
        </member>
        <member name="F:ZedGraph.ZOrder.G_BehindAll">
            <summary>
            Specifies that the <see cref="T:ZedGraph.GraphItem"/> will be behind all other
            objects (including the <see cref="T:ZedGraph.PaneBase"/> <see cref="P:ZedGraph.PaneBase.Title"/>).
            </summary>
        </member>
        <member name="F:ZedGraph.ZOrder.F_BehindAxisFill">
            <summary>
            Specifies that the <see cref="T:ZedGraph.GraphItem"/> will be behind the
            <see cref="P:ZedGraph.GraphPane.AxisRect"/> background <see cref="T:ZedGraph.Fill"/>
            (see <see cref="P:ZedGraph.GraphPane.AxisFill"/>).
            </summary>
        </member>
        <member name="F:ZedGraph.ZOrder.E_BehindAxis">
            <summary>
            Specifies that the <see cref="T:ZedGraph.GraphItem"/> will be behind the
            <see cref="T:ZedGraph.Axis"/> objects.
            </summary>
        </member>
        <member name="F:ZedGraph.ZOrder.D_BehindCurves">
            <summary>
            Specifies that the <see cref="T:ZedGraph.GraphItem"/> will be behind the
            <see cref="T:ZedGraph.CurveItem"/> objects.
            </summary>
        </member>
        <member name="F:ZedGraph.ZOrder.C_BehindAxisBorder">
            <summary>
            Specifies that the <see cref="T:ZedGraph.GraphItem"/> will be behind the
            <see cref="T:ZedGraph.Axis"/> border.
            </summary>
        </member>
        <member name="F:ZedGraph.ZOrder.B_BehindLegend">
            <summary>
            Specifies that the <see cref="T:ZedGraph.GraphItem"/> will be behind the
            <see cref="T:ZedGraph.Legend"/> object.
            </summary>
        </member>
        <member name="F:ZedGraph.ZOrder.A_InFront">
            <summary>
            Specifies that the <see cref="T:ZedGraph.GraphItem"/> will be in front of
            all other objects, except for the other <see cref="T:ZedGraph.GraphItem"/>
            objects that have the same <see cref="T:ZedGraph.ZOrder"/> and are before
            this object in the <see cref="T:ZedGraph.GraphItemList"/>.
            </summary>
        </member>
        <member name="T:ZedGraph.PieLabelType">
            <summary>
            Enumeration that determines the type of label that is displayed for each pie slice
            (see <see cref="P:ZedGraph.PieItem.LabelType"/>).
            </summary>
        </member>
        <member name="F:ZedGraph.PieLabelType.Name_Value">
            <summary>
            Displays <see cref="P:ZedGraph.CurveItem.Label"/> and <see cref="P:ZedGraph.PieItem.Value"/> for
            a slice in a Pie Chart.
            </summary>
        </member>
        <member name="F:ZedGraph.PieLabelType.Name_Percent">
            <summary>
            Displays <see cref="P:ZedGraph.CurveItem.Label"/> and <see cref="P:ZedGraph.PieItem.Value"/> (as % of total) for
            a slice in a Pie Chart.
            </summary>
        </member>
        <member name="F:ZedGraph.PieLabelType.Name_Value_Percent">
            <summary>
            Displays a <see cref="P:ZedGraph.CurveItem.Label"/> containing the <see cref="P:ZedGraph.PieItem.Value"/> both  
            as an absolute number and as percentage of the total.
            </summary>
        </member>
        <member name="F:ZedGraph.PieLabelType.Value">
            <summary>
            Displays <see cref="P:ZedGraph.PieItem.Value"/> for
            a slice in a Pie Chart.
            </summary>
        </member>
        <member name="F:ZedGraph.PieLabelType.Percent">
            <summary>
            Displays <see cref="P:ZedGraph.PieItem.Value"/> (as % of total) for
            a slice in a Pie Chart.
            </summary>
        </member>
        <member name="F:ZedGraph.PieLabelType.Name">
            <summary>
            Displays <see cref="P:ZedGraph.CurveItem.Label"/> for a slice in a Pie Chart.
            </summary>
        </member>
        <member name="F:ZedGraph.PieLabelType.None">
             <summary>
            No label displayed. 
             </summary>
        </member>
        <member name="T:ZedGraph.PaneLayout">
            <summary>
            Define the auto layout options for the <see cref="M:ZedGraph.MasterPane.AutoPaneLayout(System.Drawing.Graphics,ZedGraph.PaneLayout)"/> method.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneLayout.ForceSquare">
            <summary>
            Layout the <see cref="T:ZedGraph.GraphPane"/>'s so they are in a square grid (always 2x2, 3x3, 4x4),
            leaving blank spaces as required.
            </summary>
            <remarks>For example, a single pane would generate a 1x1 grid, between 2 and 4 panes would generate
            a 2x2 grid, 5 to 9 panes would generate a 3x3 grid.</remarks>
        </member>
        <member name="F:ZedGraph.PaneLayout.SquareColPreferred">
            <summary>
            Layout the <see cref="T:ZedGraph.GraphPane"/>'s so they are in a general square (2x2, 3x3, etc.), but use extra
            columns when necessary (row x column = 1x2, 2x3, 3x4, etc.) depending on the total number
            of panes required.
            </summary>
            <remarks>For example, a 2x2 grid has four panes and a 3x3 grid has 9 panes.  If there are
            6 panes required, then this option will eliminate a row (column preferred) to make a
            2 row x 3 column grid.  With 7 panes, it will make a 3x3 grid with 2 empty spaces.</remarks>
        </member>
        <member name="F:ZedGraph.PaneLayout.SquareRowPreferred">
            <summary>
            Layout the <see cref="T:ZedGraph.GraphPane"/>'s so they are in a general square (2x2, 3x3, etc.), but use extra
            rows when necessary (2x1, 3x2, 4x3, etc.) depending on the total number of panes required.
            </summary>
            <remarks>For example, a 2x2 grid has four panes and a 3x3 grid has 9 panes.  If there are
            6 panes required, then this option will eliminate a column (row preferred) to make a
            3 row x 2 column grid.  With 7 panes, it will make a 3x3 grid with 2 empty spaces.</remarks>
        </member>
        <member name="F:ZedGraph.PaneLayout.SingleRow">
            <summary>
            Layout the <see cref="T:ZedGraph.GraphPane"/>'s in a single row
            </summary>
        </member>
        <member name="F:ZedGraph.PaneLayout.SingleColumn">
            <summary>
            Layout the <see cref="T:ZedGraph.GraphPane"/>'s in a single column
            </summary>
        </member>
        <member name="F:ZedGraph.PaneLayout.ExplicitCol12">
            <summary>
            Layout the <see cref="T:ZedGraph.GraphPane"/>'s with an explicit number of columns: The first row has
            1 column and the second row has 2 columns for a total of 3 panes.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneLayout.ExplicitCol21">
            <summary>
            Layout the <see cref="T:ZedGraph.GraphPane"/>'s with an explicit number of columns: The first row has
            2 columns and the second row has 1 column for a total of 3 panes.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneLayout.ExplicitCol23">
            <summary>
            Layout the <see cref="T:ZedGraph.GraphPane"/>'s with an explicit number of columns: The first row has
            2 columns and the second row has 3 columns for a total of 5 panes.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneLayout.ExplicitCol32">
            <summary>
            Layout the <see cref="T:ZedGraph.GraphPane"/>'s with an explicit number of columns: The first row has
            3 columns and the second row has 2 columns for a total of 5 panes.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneLayout.ExplicitRow12">
            <summary>
            Layout the <see cref="T:ZedGraph.GraphPane"/>'s with an explicit number of rows: The first column has
            1 row and the second column has 2 rows for a total of 3 panes.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneLayout.ExplicitRow21">
            <summary>
            Layout the <see cref="T:ZedGraph.GraphPane"/>'s with an explicit number of rows: The first column has
            2 rows and the second column has 1 row for a total of 3 panes.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneLayout.ExplicitRow23">
            <summary>
            Layout the <see cref="T:ZedGraph.GraphPane"/>'s with an explicit number of rows: The first column has
            2 rows and the second column has 3 rows for a total of 5 panes.
            </summary>
        </member>
        <member name="F:ZedGraph.PaneLayout.ExplicitRow32">
            <summary>
            Layout the <see cref="T:ZedGraph.GraphPane"/>'s with an explicit number of rows: The first column has
            3 rows and the second column has 2 rows for a total of 5 panes.
            </summary>
        </member>
        <member name="T:ZedGraph.ValueHandler">
            <summary>
            A class designed to simplify the process of getting the actual value for
            the various stacked and regular curve types
            </summary>
            
            <author> John Champion</author>
            <version> $Revision: 3.1 $ $Date: 2005/03/05 07:24:10 $ </version>
        </member>
        <member name="M:ZedGraph.ValueHandler.#ctor(ZedGraph.GraphPane,System.Boolean)">
            <summary>
            Basic constructor that saves a reference to the parent
            <see cref="T:ZedGraph.GraphPane"/> object.
            </summary>
            <param name="pane">The parent <see cref="T:ZedGraph.GraphPane"/> object.</param>
            <param name="initialize">A <see cref="T:System.Boolean"/> flag to indicate whether or
            not the drawing variables should be initialized.  Initialization is not
            required if this is part of a ZedGraph internal draw operation (i.e., its in
            the middle of a call to <see cref="M:ZedGraph.GraphPane.Draw(System.Drawing.Graphics)"/>).  Otherwise, you should
            initialize to make sure the drawing variables are configured.  true to do
            an initialization, false otherwise.</param>
        </member>
        <member name="M:ZedGraph.ValueHandler.GetValues(ZedGraph.CurveItem,System.Int32,System.Double@,System.Double@,System.Double@)">
            <summary>
            Get the user scale values associate with a particular point of a
            particular curve.</summary>
            <remarks>The main purpose of this method is to handle
            stacked bars, in which case the stacked values are returned rather
            than the individual data values.
            </remarks>
            <param name="curve">A <see cref="T:ZedGraph.CurveItem"/> object of interest.</param>
            <param name="iPt">The zero-based point index for the point of interest.</param>
            <param name="baseVal">A <see cref="T:System.Double"/> value representing the value
            for the independent axis.</param>
            <param name="lowVal">A <see cref="T:System.Double"/> value representing the lower
            value for the dependent axis.</param>
            <param name="hiVal">A <see cref="T:System.Double"/> value representing the upper
            value for the dependent axis.</param>
            <returns>true if the data point is value, false for
            <see cref="F:ZedGraph.PointPair.Missing"/>, invalid, etc. data.</returns>
        </member>
        <member name="M:ZedGraph.ValueHandler.GetValues(ZedGraph.GraphPane,ZedGraph.CurveItem,System.Int32,System.Double@,System.Double@,System.Double@)">
            <summary>
            Get the user scale values associate with a particular point of a
            particular curve.</summary>
            <remarks>The main purpose of this method is to handle
            stacked bars and lines, in which case the stacked values are returned rather
            than the individual data values.  However, this method works generically for any
            curve type.
            </remarks>
            <param name="pane">The parent <see cref="T:ZedGraph.GraphPane"/> object.</param>
            <param name="curve">A <see cref="T:ZedGraph.CurveItem"/> object of interest.</param>
            <param name="iPt">The zero-based point index for the point of interest.</param>
            <param name="baseVal">A <see cref="T:System.Double"/> value representing the value
            for the independent axis.</param>
            <param name="lowVal">A <see cref="T:System.Double"/> value representing the lower
            value for the dependent axis.</param>
            <param name="hiVal">A <see cref="T:System.Double"/> value representing the upper
            value for the dependent axis.</param>
            <returns>true if the data point is value, false for
            <see cref="F:ZedGraph.PointPair.Missing"/>, invalid, etc. data.</returns>
        </member>
        <member name="M:ZedGraph.ValueHandler.BarCenterValue(ZedGraph.CurveItem,System.Single,System.Int32,System.Double,System.Int32)">
            <summary>
            Calculate the user scale position of the center of the specified bar, using the
            <see cref="T:ZedGraph.Axis"/> as specified by <see cref="P:ZedGraph.GraphPane.BarBase"/>.  This method is
            used primarily by the
            <see cref="M:ZedGraph.GraphPane.FindNearestPoint(System.Drawing.PointF,ZedGraph.CurveItem@,System.Int32@)"/> method in order to
            determine the bar "location," which is defined as the center of the top of the individual bar.
            </summary>
            <param name="curve">The <see cref="T:ZedGraph.CurveItem"/> representing the
            bar of interest.</param>
            <param name="barWidth">The width of each individual bar. This can be calculated using
            the <see cref="M:ZedGraph.CurveItem.GetBarWidth(ZedGraph.GraphPane)"/> method.</param>
            <param name="iCluster">The cluster number for the bar of interest.  This is the ordinal
            position of the current point.  That is, if a particular <see cref="T:ZedGraph.CurveItem"/> has
            10 points, then a value of 3 would indicate the 4th point in the data array.</param>
            <param name="val">The actual independent axis value for the bar of interest.</param>
            <param name="iOrdinal">The ordinal position of the <see cref="T:ZedGraph.CurveItem"/> of interest.
            That is, the first bar series is 0, the second is 1, etc.  Note that this applies only
            to the bars.  If a graph includes both bars and lines, then count only the bars.</param>
            <returns>A user scale value position of the center of the bar of interest.</returns>
        </member>
        <member name="T:ZedGraph.XAxis">
            <summary>
            <see cref="T:ZedGraph.XAxis"/> inherits from <see cref="T:ZedGraph.Axis"/>, and defines the
            special characteristics of a horizontal axis, specifically located at
            the bottom of the <see cref="P:ZedGraph.GraphPane.AxisRect"/> of the <see cref="T:ZedGraph.GraphPane"/>
            object
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.6 $ $Date: 2005/02/11 05:20:43 $ </version>
        </member>
        <member name="F:ZedGraph.XAxis.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="M:ZedGraph.XAxis.#ctor">
            <summary>
            Default constructor that sets all <see cref="T:ZedGraph.XAxis"/> properties to
            default values as defined in the <see cref="T:ZedGraph.XAxis.Default"/> class
            </summary>
        </member>
        <member name="M:ZedGraph.XAxis.#ctor(System.String)">
            <summary>
            Default constructor that sets all <see cref="T:ZedGraph.XAxis"/> properties to
            default values as defined in the <see cref="T:ZedGraph.XAxis.Default"/> class, except
            for the axis title
            </summary>
            <param name="title">The <see cref="P:ZedGraph.Axis.Title"/> for this axis</param>
        </member>
        <member name="M:ZedGraph.XAxis.#ctor(ZedGraph.XAxis)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The XAxis object from which to copy</param>
        </member>
        <member name="M:ZedGraph.XAxis.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the XAxis</returns>
        </member>
        <member name="M:ZedGraph.XAxis.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.XAxis.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.XAxis.SetTransformMatrix(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)">
            <summary>
            Setup the Transform Matrix to handle drawing of this <see cref="T:ZedGraph.XAxis"/>
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.XAxis.CalcCrossShift(ZedGraph.GraphPane)">
            <summary>
            Calculate the "shift" size, in pixels, in order to shift the axis from its default
            location to the value specified by <see cref="P:ZedGraph.Axis.Cross"/>.
            </summary>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <returns>The shift amount measured in pixels</returns>
        </member>
        <member name="T:ZedGraph.XAxis.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.XAxis"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.XAxis.Default.IsVisible">
            <summary>
            The default display mode for the <see cref="T:ZedGraph.XAxis"/>
            (<see cref="P:ZedGraph.Axis.IsVisible"/> property). true to display the scale
            values, title, tic marks, false to hide the axis entirely.
            </summary>
        </member>
        <member name="F:ZedGraph.XAxis.Default.IsZeroLine">
            <summary>
            Determines if a line will be drawn at the zero value for the 
            <see cref="T:ZedGraph.XAxis"/>, that is, a line that
            divides the negative values from positive values.
            <seealso cref="P:ZedGraph.Axis.IsZeroLine"/>.
            </summary>
        </member>
        <member name="T:ZedGraph.XDate">
            <summary>
            This struct encapsulates a date and time value, and handles associated
            calculations and conversions between various formats.
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.6 $ $Date: 2005/02/11 05:20:43 $ </version>
        </member>
        <member name="F:ZedGraph.XDate.XLDay1">
            <summary>
            The Astronomical Julian Day number that corresponds to XL Date 0.0
            </summary>
        </member>
        <member name="F:ZedGraph.XDate.MonthsPerYear">
            <summary>
            The number of months in a year
            </summary>
        </member>
        <member name="F:ZedGraph.XDate.HoursPerDay">
            <summary>
            The number of hours in a day
            </summary>
        </member>
        <member name="F:ZedGraph.XDate.MinutesPerHour">
            <summary>
            The number of minutes in an hour
            </summary>
        </member>
        <member name="F:ZedGraph.XDate.SecondsPerMinute">
            <summary>
            The number of seconds in a minute
            </summary>
        </member>
        <member name="F:ZedGraph.XDate.MinutesPerDay">
            <summary>
            The number of minutes in a day
            </summary>
        </member>
        <member name="F:ZedGraph.XDate.SecondsPerDay">
            <summary>
            The number of seconds in a day
            </summary>
        </member>
        <member name="F:ZedGraph.XDate.DefaultFormatStr">
            <summary>
            The default format string to be used in <see cref="M:ZedGraph.XDate.ToString"/> when
            no format is provided
            </summary>
        </member>
        <member name="F:ZedGraph.XDate.xlDate">
            <summary>
            The actual date value in MS Excel format.  This is the only data field in
            the <see cref="T:ZedGraph.XDate"/> struct.
            This format is in days since a reference date
            (XL date 1.0 is Jan 1, 1900 at 00:00 hrs).  Negative values are permissible, and the
            range of valid dates is from noon on January 1st, 4713 B.C. forward.  Internally, the
            date calculations are done using Astronomical Julian Day numbers.  The Astronomical Julian
            Day number is defined as the number of days since noon on January 1st, 4713 B.C.
            (also referred to as 12:00 on January 1, -4712).
            </summary>
        </member>
        <member name="M:ZedGraph.XDate.#ctor(System.Double)">
            <summary>
            Construct a date class from an XL date value.
            </summary>
            <param name="xlDate">
            An XL Date value in floating point double format
            </param>
        </member>
        <member name="M:ZedGraph.XDate.#ctor(System.DateTime)">
            <summary>
            Construct a date class from a <see cref="P:ZedGraph.XDate.DateTime"/> struct.
            </summary>
            <param name="dateTime">
            A <see cref="P:ZedGraph.XDate.DateTime"/> struct containing the initial date information.
            </param>
        </member>
        <member name="M:ZedGraph.XDate.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Construct a date class from a calendar date (year, month, day).  Assumes the time
            of day is 00:00 hrs
            </summary>
            <param name="year">An integer value for the year, e.g., 1995.</param>
            <param name="day">An integer value for the day of the month, e.g., 23.
            It is permissible to have day numbers outside of the 1-31 range,
            which will rollover to the previous or next month and year.</param>
            <param name="month">An integer value for the month of the year, e.g.,
            8 for August.  It is permissible to have months outside of the 1-12 range,
            which will rollover to the previous or next year.</param>
        </member>
        <member name="M:ZedGraph.XDate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Construct a date class from a calendar date and time (year, month, day, hour, minute,
            second). 
            </summary>
            <param name="year">An integer value for the year, e.g., 1995.</param>
            <param name="day">An integer value for the day of the month, e.g., 23.
            It is permissible to have day numbers outside of the 1-31 range,
            which will rollover to the previous or next month and year.</param>
            <param name="month">An integer value for the month of the year, e.g.,
            8 for August.  It is permissible to have months outside of the 1-12 range,
            which will rollover to the previous or next year.</param>
            <param name="hour">An integer value for the hour of the day, e.g. 15.
            It is permissible to have hour values outside the 0-23 range, which
            will rollover to the previous or next day.</param>
            <param name="minute">An integer value for the minute, e.g. 45.
            It is permissible to have hour values outside the 0-59 range, which
            will rollover to the previous or next hour.</param>
            <param name="second">An integer value for the second, e.g. 35.
            It is permissible to have second values outside the 0-59 range, which
            will rollover to the previous or next minute.</param>
        </member>
        <member name="M:ZedGraph.XDate.#ctor(ZedGraph.XDate)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The GraphPane object from which to copy</param>
        </member>
        <member name="M:ZedGraph.XDate.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the XDate</returns>
        </member>
        <member name="M:ZedGraph.XDate.GetDate(System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Get the calendar date (year, month, day) corresponding to this instance.
            </summary>
            <param name="year">An integer value for the year, e.g., 1995.</param>
            <param name="day">An integer value for the day of the month, e.g., 23.</param>
            <param name="month">An integer value for the month of the year, e.g.,
            8 for August.</param>
        </member>
        <member name="M:ZedGraph.XDate.SetDate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the calendar date (year, month, day) of this instance.
            </summary>
            <param name="year">An integer value for the year, e.g., 1995.</param>
            <param name="day">An integer value for the day of the month, e.g., 23.</param>
            <param name="month">An integer value for the month of the year, e.g.,
            8 for August.</param>
        </member>
        <member name="M:ZedGraph.XDate.GetDate(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Get the calendar date (year, month, day, hour, minute, second) corresponding
            to this instance.
            </summary>
            <param name="year">An integer value for the year, e.g., 1995.</param>
            <param name="day">An integer value for the day of the month, e.g., 23.</param>
            <param name="month">An integer value for the month of the year, e.g.,
            8 for August.</param>
            <param name="hour">An integer value for the hour of the day, e.g. 15.</param>
            <param name="minute">An integer value for the minute, e.g. 45.</param>
            <param name="second">An integer value for the second, e.g. 35.</param>
        </member>
        <member name="M:ZedGraph.XDate.SetDate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set the calendar date (year, month, day, hour, minute, second) of this instance.
            </summary>
            <param name="year">An integer value for the year, e.g., 1995.</param>
            <param name="day">An integer value for the day of the month, e.g., 23.</param>
            <param name="month">An integer value for the month of the year, e.g.,
            8 for August.</param>
            <param name="hour">An integer value for the hour of the day, e.g. 15.</param>
            <param name="minute">An integer value for the minute, e.g. 45.</param>
            <param name="second">An integer value for the second, e.g. 35.</param>
        </member>
        <member name="M:ZedGraph.XDate.GetDayOfYear">
            <summary>
            Get the day of year value (241.345 means the 241st day of the year)
            corresponding to this instance.
            </summary>
            <returns>The day of the year in floating point double format.</returns>
        </member>
        <member name="M:ZedGraph.XDate.CalendarDateToXLDate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculate an XL Date from the specified Calendar date (year, month, day, hour, minute, second),
            first normalizing all input data values.
            </summary>
            <remarks>
            The Calendar date is always based on the Gregorian Calendar.  Note that the Gregorian calendar is really
            only valid from October 15, 1582 forward.  The countries that adopted the Gregorian calendar
            first did so on October 4, 1582, so that the next day was October 15, 1582.  Prior to that time
            the Julian Calendar was used.  However, Prior to March 1, 4 AD the treatment of leap years was
            inconsistent, and prior to 45 BC the Julian Calendar did not exist.  The <see cref="T:ZedGraph.XDate"/>
            struct projects only Gregorian dates backwards and does not deal with Julian calendar dates at all.  The
            <see cref="M:ZedGraph.XDate.ToString(System.Double,System.String)"/> method will just append a "(BC)" notation to the end of any dates
            prior to 1 AD, since the <see cref="P:ZedGraph.XDate.DateTime"/> struct throws an exception when formatting earlier dates.
            </remarks>
            <param name="year">
            The integer year value (e.g., 1994).
            </param>
            <param name="month">
            The integer month value (e.g., 7 for July).
            </param>
            <param name="day">
            The integer day value (e.g., 19 for the 19th day of the month).
            </param>
            <param name="hour">
            The integer hour value (e.g., 14 for 2:00 pm).
            </param>
            <param name="minute">
            The integer minute value (e.g., 35 for 35 minutes past the hour).
            </param>
            <param name="second">
            The integer second value (e.g., 42 for 42 seconds past the minute).
            </param>
            <returns>The corresponding XL date, expressed in double floating point format</returns>
        </member>
        <member name="M:ZedGraph.XDate.CalendarDateToJulianDay(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculate an Astronomical Julian Day number from the specified Calendar date
            (year, month, day, hour, minute, second), first normalizing all input data values
            </summary>
            <param name="year">
            The integer year value (e.g., 1994).
            </param>
            <param name="month">
            The integer month value (e.g., 7 for July).
            </param>
            <param name="day">
            The integer day value (e.g., 19 for the 19th day of the month).
            </param>
            <param name="hour">
            The integer hour value (e.g., 14 for 2:00 pm).
            </param>
            <param name="minute">
            The integer minute value (e.g., 35 for 35 minutes past the hour).
            </param>
            <param name="second">
            The integer second value (e.g., 42 for 42 seconds past the minute).
            </param>
            <returns>The corresponding Astronomical Julian Day number, expressed in double
            floating point format</returns>
        </member>
        <member name="M:ZedGraph.XDate.NormalizeCalendarDate(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Normalize a set of Calendar date values (year, month, day, hour, minute, second) to make sure
            that month is between 1 and 12, hour is between 0 and 23, etc.
            </summary>
            <param name="year">
            The integer year value (e.g., 1994).
            </param>
            <param name="month">
            The integer month value (e.g., 7 for July).
            </param>
            <param name="day">
            The integer day value (e.g., 19 for the 19th day of the month).
            </param>
            <param name="hour">
            The integer hour value (e.g., 14 for 2:00 pm).
            </param>
            <param name="minute">
            The integer minute value (e.g., 35 for 35 minutes past the hour).
            </param>
            <param name="second">
            The integer second value (e.g., 42 for 42 seconds past the minute).
            </param>
        </member>
        <member name="M:ZedGraph.XDate._CalendarDateToXLDate(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculate an XL date from the specified Calendar date (year, month, day, hour, minute, second).
            This is the internal trusted version, where all values are assumed to be legitimate
            ( month is between 1 and 12, minute is between 0 and 59, etc. )
            </summary>
            <param name="year">
            The integer year value (e.g., 1994).
            </param>
            <param name="month">
            The integer month value (e.g., 7 for July).
            </param>
            <param name="day">
            The integer day value (e.g., 19 for the 19th day of the month).
            </param>
            <param name="hour">
            The integer hour value (e.g., 14 for 2:00 pm).
            </param>
            <param name="minute">
            The integer minute value (e.g., 35 for 35 minutes past the hour).
            </param>
            <param name="second">
            The integer second value (e.g., 42 for 42 seconds past the minute).
            </param>
            <returns>The corresponding XL date, expressed in double floating point format</returns>
        </member>
        <member name="M:ZedGraph.XDate._CalendarDateToJulianDay(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculate an Astronomical Julian Day Number from the specified Calendar date
            (year, month, day, hour, minute, second).
            This is the internal trusted version, where all values are assumed to be legitimate
            ( month is between 1 and 12, minute is between 0 and 59, etc. )
            </summary>
            <param name="year">
            The integer year value (e.g., 1994).
            </param>
            <param name="month">
            The integer month value (e.g., 7 for July).
            </param>
            <param name="day">
            The integer day value (e.g., 19 for the 19th day of the month).
            </param>
            <param name="hour">
            The integer hour value (e.g., 14 for 2:00 pm).
            </param>
            <param name="minute">
            The integer minute value (e.g., 35 for 35 minutes past the hour).
            </param>
            <param name="second">
            The integer second value (e.g., 42 for 42 seconds past the minute).
            </param>
            <returns>The corresponding Astronomical Julian Day number, expressed in double
            floating point format</returns>
        </member>
        <member name="M:ZedGraph.XDate.XLDateToCalendarDate(System.Double,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Calculate a Calendar date (year, month, day, hour, minute, second) corresponding to
            the specified XL date
            </summary>
            <param name="xlDate">
            The XL date value in floating point double format.
            </param>
            <param name="year">
            The integer year value (e.g., 1994).
            </param>
            <param name="month">
            The integer month value (e.g., 7 for July).
            </param>
            <param name="day">
            The integer day value (e.g., 19 for the 19th day of the month).
            </param>
            <param name="hour">
            The integer hour value (e.g., 14 for 2:00 pm).
            </param>
            <param name="minute">
            The integer minute value (e.g., 35 for 35 minutes past the hour).
            </param>
            <param name="second">
            The integer second value (e.g., 42 for 42 seconds past the minute).
            </param>
        </member>
        <member name="M:ZedGraph.XDate.JulianDayToCalendarDate(System.Double,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Calculate a Calendar date (year, month, day, hour, minute, second) corresponding to
            the Astronomical Julian Day number
            </summary>
            <param name="jDay">
            The Astronomical Julian Day number to be converted
            </param>
            <param name="year">
            The integer year value (e.g., 1994).
            </param>
            <param name="month">
            The integer month value (e.g., 7 for July).
            </param>
            <param name="day">
            The integer day value (e.g., 19 for the 19th day of the month).
            </param>
            <param name="hour">
            The integer hour value (e.g., 14 for 2:00 pm).
            </param>
            <param name="minute">
            The integer minute value (e.g., 35 for 35 minutes past the hour).
            </param>
            <param name="second">
            The integer second value (e.g., 42 for 42 seconds past the minute).
            </param>
        </member>
        <member name="M:ZedGraph.XDate.XLDateToJulianDay(System.Double)">
            <summary>
            Calculate an Astronomical Julian Day number corresponding to the specified XL date
            </summary>
            <param name="xlDate">
            The XL date value in floating point double format.
            </param>
            <returns>The corresponding Astronomical Julian Day number, expressed in double
            floating point format</returns>
        </member>
        <member name="M:ZedGraph.XDate.JulianDayToXLDate(System.Double)">
            <summary>
            Calculate an XL Date corresponding to the specified Astronomical Julian Day number
            </summary>
            <param name="jDay">
            The Astronomical Julian Day number in floating point double format.
            </param>
            <returns>The corresponding XL Date, expressed in double
            floating point format</returns>
        </member>
        <member name="M:ZedGraph.XDate.XLDateToDecimalYear(System.Double)">
            <summary>
            Calculate a decimal year value (e.g., 1994.6523) corresponding to the specified XL date
            </summary>
            <param name="xlDate">
            The XL date value in floating point double format.
            </param>
            <returns>The corresponding decimal year value, expressed in double
            floating point format</returns>
        </member>
        <member name="M:ZedGraph.XDate.DecimalYearToXLDate(System.Double)">
            <summary>
            Calculate a decimal year value (e.g., 1994.6523) corresponding to the specified XL date
            </summary>
            <param name="yearDec">
            The decimal year value in floating point double format.
            </param>
            <returns>The corresponding XL Date, expressed in double
            floating point format</returns>
        </member>
        <member name="M:ZedGraph.XDate.XLDateToDayOfYear(System.Double)">
            <summary>
            Calculate a day-of-year value (e.g., 241.543 corresponds to the 241st day of the year)
            corresponding to the specified XL date
            </summary>
            <param name="xlDate">
            The XL date value in floating point double format.
            </param>
            <returns>The corresponding day-of-year (DoY) value, expressed in double
            floating point format</returns>
        </member>
        <member name="M:ZedGraph.XDate.XLDateToDayOfWeek(System.Double)">
            <summary>
            Calculate a day-of-week value (e.g., Sun=0, Mon=1, Tue=2, etc.)
            corresponding to the specified XL date
            </summary>
            <param name="xlDate">
            The XL date value in floating point double format.
            </param>
            <returns>The corresponding day-of-week (DoW) value, expressed in integer format</returns>
        </member>
        <member name="M:ZedGraph.XDate.XLDateToDateTime(System.Double)">
            <summary>
            Convert an XL date format to a .Net DateTime struct
            </summary>
            <param name="xlDate">
            The XL date value in floating point double format.
            </param>
            <returns>The corresponding XL Date, expressed in double
            floating point format</returns>
            <returns>The corresponding date in the form of a .Net DateTime struct</returns>
        </member>
        <member name="M:ZedGraph.XDate.DateTimeToXLDate(System.DateTime)">
            <summary>
            Convert a .Net DateTime struct to an XL Format date
            </summary>
            <param name="dt">
            The date value in the form of a .Net DateTime struct
            </param>
            <returns>The corresponding XL Date, expressed in double
            floating point format</returns>
        </member>
        <member name="M:ZedGraph.XDate.AddSeconds(System.Double)">
            <summary>
            Add the specified number of seconds (can be fractional) to the current XDate instance.
            </summary>
            <param name="dSeconds">
            The incremental number of seconds (negative or positive) in floating point double format.
            </param>
        </member>
        <member name="M:ZedGraph.XDate.AddMinutes(System.Double)">
            <summary>
            Add the specified number of minutes (can be fractional) to the current XDate instance.
            </summary>
            <param name="dMinutes">
            The incremental number of minutes (negative or positive) in floating point double format.
            </param>
        </member>
        <member name="M:ZedGraph.XDate.AddHours(System.Double)">
            <summary>
            Add the specified number of hours (can be fractional) to the current XDate instance.
            </summary>
            <param name="dHours">
            The incremental number of hours (negative or positive) in floating point double format.
            </param>
        </member>
        <member name="M:ZedGraph.XDate.AddDays(System.Double)">
            <summary>
            Add the specified number of days (can be fractional) to the current XDate instance.
            </summary>
            <param name="dDays">
            The incremental number of days (negative or positive) in floating point double format.
            </param>
        </member>
        <member name="M:ZedGraph.XDate.AddMonths(System.Double)">
            <summary>
            Add the specified number of Months (can be fractional) to the current XDate instance.
            </summary>
            <param name="dMonths">
            The incremental number of months (negative or positive) in floating point double format.
            </param>
        </member>
        <member name="M:ZedGraph.XDate.AddYears(System.Double)">
            <summary>
            Add the specified number of years (can be fractional) to the current XDate instance.
            </summary>
            <param name="dYears">
            The incremental number of years (negative or positive) in floating point double format.
            </param>
        </member>
        <member name="M:ZedGraph.XDate.op_Subtraction(ZedGraph.XDate,ZedGraph.XDate)">
            <summary>
            '-' operator overload.  When two XDates are subtracted, the number of days between dates
            is returned.
            </summary>
            <param name="lhs">The left-hand-side of the '-' operator (an XDate class)</param>
            <param name="rhs">The right-hand-side of the '-' operator (an XDate class)</param>
            <returns>The days between dates, expressed as a floating point double</returns>
        </member>
        <member name="M:ZedGraph.XDate.op_Subtraction(ZedGraph.XDate,System.Double)">
            <summary>
            '-' operator overload.  When a double value is subtracted from an XDate, the result is a
            new XDate with the number of days subtracted.
            </summary>
            <param name="lhs">The left-hand-side of the '-' operator (an XDate class)</param>
            <param name="rhs">The right-hand-side of the '-' operator (a double value)</param>
            <returns>An XDate with the rhs number of days subtracted</returns>
        </member>
        <member name="M:ZedGraph.XDate.op_Addition(ZedGraph.XDate,System.Double)">
            <summary>
            '+' operator overload.  When a double value is added to an XDate, the result is a
            new XDate with the number of days added.
            </summary>
            <param name="lhs">The left-hand-side of the '-' operator (an XDate class)</param>
            <param name="rhs">The right-hand-side of the '+' operator (a double value)</param>
            <returns>An XDate with the rhs number of days added</returns>
        </member>
        <member name="M:ZedGraph.XDate.op_Increment(ZedGraph.XDate)">
            <summary>
            '++' operator overload.  Increment the date by one day.
            </summary>
            <param name="xDate">The XDate struct on which to operate</param>
            <returns>An XDate one day later than the specified date</returns>
        </member>
        <member name="M:ZedGraph.XDate.op_Decrement(ZedGraph.XDate)">
            <summary>
            '--' operator overload.  Decrement the date by one day.
            </summary>
            <param name="xDate">The XDate struct on which to operate</param>
            <returns>An XDate one day prior to the specified date</returns>
        </member>
        <member name="M:ZedGraph.XDate.op_Implicit(ZedGraph.XDate)~System.Double">
            <summary>
            Implicit conversion from XDate to double (an XL Date).
            </summary>
            <param name="xDate">The XDate struct on which to operate</param>
            <returns>A double floating point value representing the XL Date</returns>
        </member>
        <member name="M:ZedGraph.XDate.op_Implicit(System.Double)~ZedGraph.XDate">
            <summary>
            Implicit conversion from double (an XL Date) to XDate.
            </summary>
            <param name="xlDate">The XDate struct on which to operate</param>
            <returns>An XDate struct representing the specified xlDate value.</returns>
        </member>
        <member name="M:ZedGraph.XDate.op_Implicit(ZedGraph.XDate)~System.DateTime">
            <summary>
            Implicit conversion from XDate to <see cref="P:ZedGraph.XDate.DateTime"/>.
            </summary>
            <param name="xDate">The XDate struct on which to operate</param>
            <returns>A <see cref="P:ZedGraph.XDate.DateTime"/> struct representing the specified xDate value.</returns>
        </member>
        <member name="M:ZedGraph.XDate.op_Implicit(System.DateTime)~ZedGraph.XDate">
            <summary>
            Implicit conversion from <see cref="P:ZedGraph.XDate.DateTime"/> to <see cref="T:ZedGraph.XDate"/>.
            </summary>
            <param name="dt">The <see cref="P:ZedGraph.XDate.DateTime"/> struct on which to operate</param>
            <returns>An <see cref="T:ZedGraph.XDate"/> struct representing the specified DateTime value.</returns>
        </member>
        <member name="M:ZedGraph.XDate.Equals(System.Object)">
            <summary>
            Tests whether <param>obj</param> is either an <see cref="T:ZedGraph.XDate"/> structure or
            a double floating point value that is equal to the same date as this <c>XDate</c>
            struct instance.
            </summary>
            <param name="obj">The object to compare for equality with this XDate instance.
            This object should be either a type XDate or type double.</param>
            <returns>Returns <c>true</c> if <param>obj</param> is the same date as this
            instance; otherwise, <c>false</c></returns>
        </member>
        <member name="M:ZedGraph.XDate.GetHashCode">
            <summary>
            Returns the hash code for this <see cref="T:ZedGraph.XDate"/> structure.  In this case, the
            hash code is simply the equivalent hash code for the floating point double date value.
            </summary>
            <returns>An integer representing the hash code for this XDate value</returns>
        </member>
        <member name="M:ZedGraph.XDate.ToString(System.Double)">
            <summary>
            Format this XDate value using the default format string (<see cref="F:ZedGraph.XDate.DefaultFormatStr"/>).
            </summary>
            <remarks>
            The formatting is done using the <see cref="P:ZedGraph.XDate.DateTime"/> <see cref="M:System.DateTime.ToString(System.String)"/>
            method in order to provide full localization capability.  The DateTime struct is limited to
            dates from 1 AD onward.  However, all calendar dates in <see cref="T:ZedGraph.XDate"/> and <see cref="P:ZedGraph.XDate.DateTime"/>
            are projected Gregorian calendar dates.  Since the Gregorian calendar was not implemented
            until October 4, 1582 (or later in some countries), Gregorian dates prior to that time are
            really dates that would have been, had the Gregorian calendar existed.  In order to avoid
            throwing an exception, for dates prior to 1 AD, the year will be converted to a positive
            year and the text "(BC)" is appended to the end of the formatted string.  Under this mode, the
            year sequence is 2BC, 1BC, 1AD, 2AD, etc.  There is no year zero.
            </remarks>
            <param name="xlDate">
            The XL date value to be formatted in floating point double format.
            </param>
            <returns>A string representation of the date</returns>
        </member>
        <member name="M:ZedGraph.XDate.ToString">
            <summary>
            Format this XDate value using the default format string (see cref="DefaultFormatStr"/&gt;).
            </summary>
            <remarks>
            The formatting is done using the <see cref="P:ZedGraph.XDate.DateTime"/> <see cref="M:System.DateTime.ToString(System.String)"/>
            method in order to provide full localization capability.  The DateTime struct is limited to
            dates from 1 AD onward.  However, all calendar dates in <see cref="T:ZedGraph.XDate"/> and <see cref="P:ZedGraph.XDate.DateTime"/>
            are projected Gregorian calendar dates.  Since the Gregorian calendar was not implemented
            until October 4, 1582 (or later in some countries), Gregorian dates prior to that time are
            really dates that would have been, had the Gregorian calendar existed.  In order to avoid
            throwing an exception, for dates prior to 1 AD, the year will be converted to a positive
            year and the text "(BC)" is appended to the end of the formatted string.  Under this mode, the
            year sequence is 2BC, 1BC, 1AD, 2AD, etc.  There is no year zero.
            </remarks>
            <returns>A string representation of the date</returns>
        </member>
        <member name="M:ZedGraph.XDate.ToString(System.String)">
            <summary>
            Format this XL Date value using the specified format string.  The format
            string is specified according to the <see cref="P:ZedGraph.XDate.DateTime"/> class.
            </summary>
            <remarks>
            The formatting is done using the <see cref="P:ZedGraph.XDate.DateTime"/> <see cref="M:System.DateTime.ToString(System.String)"/>
            method in order to provide full localization capability.  The DateTime struct is limited to
            dates from 1 AD onward.  However, all calendar dates in <see cref="T:ZedGraph.XDate"/> and <see cref="P:ZedGraph.XDate.DateTime"/>
            are projected Gregorian calendar dates.  Since the Gregorian calendar was not implemented
            until October 4, 1582 (or later in some countries), Gregorian dates prior to that time are
            really dates that would have been, had the Gregorian calendar existed.  In order to avoid
            throwing an exception, for dates prior to 1 AD, the year will be converted to a positive
            year and the text "(BC)" is appended to the end of the formatted string.  Under this mode, the
            year sequence is 2BC, 1BC, 1AD, 2AD, etc.  There is no year zero.
            </remarks>
            <param name="fmtStr">
            The formatting string to be used for the date.  See
            <see cref="T:System.Globalization.DateTimeFormatInfo"/>
            class for a list of the format types available.</param>
            <returns>A string representation of the date</returns>
        </member>
        <member name="M:ZedGraph.XDate.ToString(System.Double,System.String)">
            <summary>
            Format the specified XL Date value using the specified format string.  The format
            string is specified according to the <see cref="P:ZedGraph.XDate.DateTime"/> class.
            </summary>
            <remarks>
            The formatting is done using the <see cref="P:ZedGraph.XDate.DateTime"/> <see cref="M:System.DateTime.ToString(System.String)"/>
            method in order to provide full localization capability.  The DateTime struct is limited to
            dates from 1 AD onward.  However, all calendar dates in <see cref="T:ZedGraph.XDate"/> and <see cref="P:ZedGraph.XDate.DateTime"/>
            are projected Gregorian calendar dates.  Since the Gregorian calendar was not implemented
            until October 4, 1582 (or later in some countries), Gregorian dates prior to that time are
            really dates that would have been, had the Gregorian calendar existed.  In order to avoid
            throwing an exception, for dates prior to 1 AD, the year will be converted to a positive
            year and the text "(BC)" is appended to the end of the formatted string.  Under this mode, the
            year sequence is 2BC, 1BC, 1AD, 2AD, etc.  There is no year zero.
            </remarks>
            <param name="xlDate">
            The XL date value to be formatted in floating point double format.
            </param>
            <param name="fmtStr">
            The formatting string to be used for the date.  See
            <see cref="T:System.Globalization.DateTimeFormatInfo"/>
            for a list of the format types available.</param>
            <returns>A string representation of the date</returns>
        </member>
        <member name="P:ZedGraph.XDate.XLDate">
            <summary>
            Gets or sets the date value for this item in MS Excel format.
            </summary>
        </member>
        <member name="P:ZedGraph.XDate.DateTime">
            <summary>
            Gets or sets the date value for this item in .Net DateTime format.
            </summary>
        </member>
        <member name="P:ZedGraph.XDate.JulianDay">
            <summary>
            Gets or sets the date value for this item in Julain day format.  This is the
            Astronomical Julian Day number, so a value of 0.0 corresponds to noon GMT on
            January 1st, -4712.  Thus, Julian Day number 2,400,000.0 corresponds to
            noon GMT on November 16, 1858.
            </summary>
        </member>
        <member name="P:ZedGraph.XDate.DecimalYear">
            <summary>
            Gets or sets the decimal year number (i.e., 1997.345) corresponding to this item.
            </summary>
        </member>
        <member name="T:ZedGraph.Y2Axis">
            <summary>
            <see cref="T:ZedGraph.Y2Axis"/> inherits from <see cref="T:ZedGraph.Axis"/>, and defines the
            special characteristics of a vertical axis, specifically located on
            the right side of the <see cref="P:ZedGraph.GraphPane.AxisRect"/> of the <see cref="T:ZedGraph.GraphPane"/>
            object
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.6 $ $Date: 2005/02/11 05:20:43 $ </version>
        </member>
        <member name="F:ZedGraph.Y2Axis.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="M:ZedGraph.Y2Axis.#ctor">
            <summary>
            Default constructor that sets all <see cref="T:ZedGraph.Y2Axis"/> properties to
            default values as defined in the <see cref="T:ZedGraph.Y2Axis.Default"/> class
            </summary>
        </member>
        <member name="M:ZedGraph.Y2Axis.#ctor(System.String)">
            <summary>
            Default constructor that sets all <see cref="T:ZedGraph.Y2Axis"/> properties to
            default values as defined in the <see cref="T:ZedGraph.Y2Axis.Default"/> class, except
            for the axis title
            </summary>
            <param name="title">The <see cref="P:ZedGraph.Axis.Title"/> for this axis</param>
        </member>
        <member name="M:ZedGraph.Y2Axis.#ctor(ZedGraph.Y2Axis)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The Y2Axis object from which to copy</param>
        </member>
        <member name="M:ZedGraph.Y2Axis.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the Y2Axis</returns>
        </member>
        <member name="M:ZedGraph.Y2Axis.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.Y2Axis.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.Y2Axis.SetTransformMatrix(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)">
            <summary>
            Setup the Transform Matrix to handle drawing of this <see cref="T:ZedGraph.Y2Axis"/>
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.Y2Axis.CalcCrossShift(ZedGraph.GraphPane)">
            <summary>
            Calculate the "shift" size, in pixels, in order to shift the axis from its default
            location to the value specified by <see cref="P:ZedGraph.Axis.Cross"/>.
            </summary>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <returns>The shift amount measured in pixels</returns>
        </member>
        <member name="T:ZedGraph.Y2Axis.Default">
            <summary>
            A simple subclass of the <see cref="T:ZedGraph.Y2Axis.Default"/> class that defines the
            default property values for the <see cref="T:ZedGraph.Y2Axis"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.Y2Axis.Default.IsVisible">
            <summary>
            The default display mode for the <see cref="T:ZedGraph.Y2Axis"/>
            (<see cref="P:ZedGraph.Axis.IsVisible"/> property). true to display the scale
            values, title, tic marks, false to hide the axis entirely.
            </summary>
        </member>
        <member name="F:ZedGraph.Y2Axis.Default.IsZeroLine">
            <summary>
            Determines if a line will be drawn at the zero value for the 
            <see cref="T:ZedGraph.Y2Axis"/>, that is, a line that
            divides the negative values from positive values.
            <seealso cref="P:ZedGraph.Axis.IsZeroLine"/>.
            </summary>
        </member>
        <member name="T:ZedGraph.YAxis">
            <summary>
            <see cref="T:ZedGraph.YAxis"/> inherits from <see cref="T:ZedGraph.Axis"/>, and defines the
            special characteristics of a vertical axis, specifically located on
            the right side of the <see cref="P:ZedGraph.GraphPane.AxisRect"/> of the <see cref="T:ZedGraph.GraphPane"/>
            object
            </summary>
            
            <author> John Champion </author>
            <version> $Revision: 3.6 $ $Date: 2005/02/11 05:20:43 $ </version>
        </member>
        <member name="F:ZedGraph.YAxis.schema2">
            <summary>
            Current schema value that defines the version of the serialized file
            </summary>
        </member>
        <member name="M:ZedGraph.YAxis.#ctor">
            <summary>
            Default constructor that sets all <see cref="T:ZedGraph.YAxis"/> properties to
            default values as defined in the <see cref="T:ZedGraph.YAxis.Default"/> class
            </summary>
        </member>
        <member name="M:ZedGraph.YAxis.#ctor(System.String)">
            <summary>
            Default constructor that sets all <see cref="T:ZedGraph.YAxis"/> properties to
            default values as defined in the <see cref="T:ZedGraph.YAxis.Default"/> class, except
            for the axis title
            </summary>
            <param name="title">The <see cref="P:ZedGraph.Axis.Title"/> for this axis</param>
        </member>
        <member name="M:ZedGraph.YAxis.#ctor(ZedGraph.YAxis)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The YAxis object from which to copy</param>
        </member>
        <member name="M:ZedGraph.YAxis.Clone">
            <summary>
            Deep-copy clone routine
            </summary>
            <returns>A new, independent copy of the YAxis</returns>
        </member>
        <member name="M:ZedGraph.YAxis.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor for deserializing objects
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data
            </param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data
            </param>
        </member>
        <member name="M:ZedGraph.YAxis.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance with the data needed to serialize the target object
            </summary>
            <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo"/> instance that defines the serialized data</param>
            <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext"/> instance that contains the serialized data</param>
        </member>
        <member name="M:ZedGraph.YAxis.SetTransformMatrix(System.Drawing.Graphics,ZedGraph.GraphPane,System.Single)">
            <summary>
            Setup the Transform Matrix to handle drawing of this <see cref="T:ZedGraph.YAxis"/>
            </summary>
            <param name="g">
            A graphic device object to be drawn into.  This is normally e.Graphics from the
            PaintEventArgs argument to the Paint() method.
            </param>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <param name="scaleFactor">
            The scaling factor to be used for rendering objects.  This is calculated and
            passed down by the parent <see cref="T:ZedGraph.GraphPane"/> object using the
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/> method, and is used to proportionally adjust
            font sizes, etc. according to the actual size of the graph.
            </param>
        </member>
        <member name="M:ZedGraph.YAxis.CalcCrossShift(ZedGraph.GraphPane)">
            <summary>
            Calculate the "shift" size, in pixels, in order to shift the axis from its default
            location to the value specified by <see cref="P:ZedGraph.Axis.Cross"/>.
            </summary>
            <param name="pane">
            A reference to the <see cref="T:ZedGraph.GraphPane"/> object that is the parent or
            owner of this object.
            </param>
            <returns>The shift amount measured in pixels</returns>
        </member>
        <member name="T:ZedGraph.YAxis.Default">
            <summary>
            A simple struct that defines the
            default property values for the <see cref="T:ZedGraph.YAxis"/> class.
            </summary>
        </member>
        <member name="F:ZedGraph.YAxis.Default.IsVisible">
            <summary>
            The default display mode for the <see cref="T:ZedGraph.YAxis"/>
            (<see cref="P:ZedGraph.Axis.IsVisible"/> property). true to display the scale
            values, title, tic marks, false to hide the axis entirely.
            </summary>
        </member>
        <member name="F:ZedGraph.YAxis.Default.IsZeroLine">
            <summary>
            Determines if a line will be drawn at the zero value for the 
            <see cref="T:ZedGraph.YAxis"/>, that is, a line that
            divides the negative values from positive values.
            <seealso cref="P:ZedGraph.Axis.IsZeroLine"/>.
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphControl">
            <summary>
            The ZedGraphControl class provides a UserControl interface to the
            <see cref="N:ZedGraph"/> class library.  This allows ZedGraph to be installed
            as a control in the Visual Studio toolbox.  You can use the control by simply
            dragging it onto a form in the Visual Studio form editor.  All graph
            attributes are accessible via the <see cref="P:ZedGraph.ZedGraphControl.GraphPane"/>
            property.
            </summary>
            <author> John Champion revised by Jerry Vos </author>
            <version> $Revision: 3.16 $ $Date: 2005/03/19 09:49:23 $ </version>
        </member>
        <member name="F:ZedGraph.ZedGraphControl.pointToolTip">
            <summary>
            private variable for displaying point-by-point tooltips on
            mouseover events.
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphControl.masterPane">
            <summary>
            This private field contains the instance for the MasterPane object of this control.
            You can access the MasterPane object through the public property
            <see cref="P:ZedGraph.ZedGraphControl.MasterPane"/>. This is nulled when this Control is
            disposed.
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphControl.isShowPointValues">
            <summary>
            private field that determines whether or not tooltips will be display
            when the mouse hovers over data values.  Use the public property
            <see cref="P:ZedGraph.ZedGraphControl.IsShowPointValues"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphControl.pointValueFormat">
            <summary>
            private field that determines the format for displaying tooltip values.
            This format is passed to <see cref="M:ZedGraph.PointPair.ToString(System.String)"/>.
            Use the public property <see cref="F:ZedGraph.ZedGraphControl.pointValueFormat"/> to access this
            value.
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphControl.contextMenu">
            <summary>
            Stores the <see cref="T:System.Windows.Forms.ContextMenu"/> reference for internal use.
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphControl.isShowContextMenu">
            <summary>
            private field that determines whether or not the context menu will be available.  Use the
            public property <see cref="P:ZedGraph.ZedGraphControl.IsShowContextMenu"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphControl.pointDateFormat">
            <summary>
            private field that determines the format for displaying tooltip date values.
            This format is passed to <see cref="M:ZedGraph.XDate.ToString(System.String)"/>.
            Use the public property <see cref="F:ZedGraph.ZedGraphControl.pointDateFormat"/> to access this
            value.
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphControl.isZooming">
            <summary>
            Internal variable that indicates the control is currently being zoomed. 
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphControl.isPanning">
            <summary>
            Internal variable that indicates the control is currently being panned.
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphControl.isEnableZoom">
            <summary>
            Private value that determines whether or not zooming is allowed for the control.  Use the
            public property <see cref="P:ZedGraph.ZedGraphControl.IsEnableZoom"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphControl.isEnablePan">
            <summary>
            Private value that determines whether or not panning is allowed for the control.  Use the
            public property <see cref="P:ZedGraph.ZedGraphControl.IsEnablePan"/> to access this value.
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphControl.dragPane">
            <summary>
            Internal variable that stores the <see cref="P:ZedGraph.ZedGraphControl.GraphPane"/> reference for the Pane that is
            currently being zoomed or panned.
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphControl.dragRect">
            <summary>
            Internal variable that stores a rectangle which is either the zoom rectangle, or the incremental
            pan amount since the last mousemove event.
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphControl.zoomState">
            <summary>
            private field that stores the state of the scale ranges prior to starting a panning action.
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphControl.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphControl.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if the components should be
            disposed, false otherwise</param>
        </member>
        <member name="M:ZedGraph.ZedGraphControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Called by the system to update the control on-screen
            </summary>
            <param name="e">
            A PaintEventArgs object containing the Graphics specifications
            for this Paint event.
            </param>
        </member>
        <member name="M:ZedGraph.ZedGraphControl.ChangeSize(System.Object,System.EventArgs)">
            <summary>
            Called when the control has been resized.
            </summary>
            <param name="sender">
            A reference to the control that has been resized.
            </param>
            <param name="e">
            A PaintEventArgs object containing the Graphics specifications
            for this Paint event.
            </param>
        </member>
        <member name="M:ZedGraph.ZedGraphControl.AxisChange">
            <summary>This performs an axis change command on the graphPane.  
            This is the same as 
            <c>ZedGraphControl.GraphPane.AxisChange( ZedGraphControl.CreateGraphics() )</c>.
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphControl.ZedGraphControl_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            private method for handling MouseMove events to display tooltips over
            individual datapoints.
            </summary>
            <param name="sender">
            A reference to the control that has the MouseMove event.
            </param>
            <param name="e">
            A MouseEventArgs object.
            </param>
        </member>
        <member name="M:ZedGraph.ZedGraphControl.ZedGraphControl_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle the Key Events so ZedGraph can Escape out of a panning or zooming operation.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ZedGraph.ZedGraphControl.ContextMenu_Popup(System.Object,System.EventArgs)">
            <summary>
            private method to handle the popup context menu in the <see cref="T:ZedGraph.ZedGraphControl"/>.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ZedGraph.ZedGraphControl.MenuClick_Copy(System.Object,System.EventArgs)">
            <summary>
            Handler for the "Copy" context menu item.  Copies the current image to a bitmap on the
            clipboard.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ZedGraph.ZedGraphControl.MenuClick_SaveAs(System.Object,System.EventArgs)">
            <summary>
            Handler for the "Save Image As" context menu item.  Copies the current image to the selected
            file.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ZedGraph.ZedGraphControl.MenuClick_ShowValues(System.Object,System.EventArgs)">
            <summary>
            Handler for the "Show Values" context menu item.  Toggles the <see cref="P:ZedGraph.ZedGraphControl.IsShowPointValues"/>
            property, which activates the point value tooltips.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ZedGraph.ZedGraphControl.MenuClick_RestoreScale(System.Object,System.EventArgs)">
            <summary>
            Handler for the "Set Scale to Default" context menu item.  Sets the scale ranging to
            full auto mode for all axes.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:ZedGraph.ZedGraphControl.MenuClick_ZoomOut(System.Object,System.EventArgs)">
            <summary>
            Handler for the "UnZoom/UnPan" context menu item.  Restores the scale ranges to the values
            before the last zoom or pan operation.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:ZedGraph.ZedGraphControl.MasterPane">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.MasterPane"/> property for the control
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphControl.GraphPane">
            <summary>
            Gets or sets the <see cref="T:ZedGraph.GraphPane"/> property for the control
            </summary>
            <remarks>
            <see cref="T:ZedGraph.ZedGraphControl"/> actually uses a <see cref="P:ZedGraph.ZedGraphControl.MasterPane"/> object
            to hold a list of <see cref="P:ZedGraph.ZedGraphControl.GraphPane"/> objects.  This property really only
            accesses the first <see cref="P:ZedGraph.ZedGraphControl.GraphPane"/> in the list.  If there is more
            than one <see cref="P:ZedGraph.ZedGraphControl.GraphPane"/>, use the <see cref="P:ZedGraph.ZedGraphControl.MasterPane"/>
            indexer property to access any of the <see cref="P:ZedGraph.ZedGraphControl.GraphPane"/> objects.</remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphControl.IsShowPointValues">
            <summary>
            Gets or sets a value that determines whether or not tooltips will be display
            when the mouse hovers over data values.  The displayed values are taken
            from <see cref="F:ZedGraph.PointPair.Tag"/> if it is a <see cref="T:System.String"/> type,
            or <see cref="M:ZedGraph.PointPair.ToString"/> otherwise.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphControl.IsEnableZoom">
            <summary>
            Gets or sets a value that determines whether or not zooming is allowed for the control.
            </summary>
            <remarks>
            Zooming is done by left-clicking inside the <see cref="P:ZedGraph.GraphPane.AxisRect"/> to drag
            out a rectangle, indicating the new scale ranges that will be part of the graph.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphControl.IsEnablePan">
            <summary>
            Gets or sets a value that determines whether or not panning is allowed for the control.
            </summary>
            <remarks>
            Panning is done by clicking the middle mouse button (or holding down the shift key
            while clicking the left mouse button) inside the <see cref="P:ZedGraph.GraphPane.AxisRect"/> and
            dragging the mouse around to shift the scale ranges as desired.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphControl.IsShowContextMenu">
            <summary>
            Gets or sets a value that determines whether or not the context menu will be available.
            </summary>
            <remarks>The context menu is a menu that appears when you right-click on the
            <see cref="T:ZedGraph.ZedGraphControl"/>.  It provides options for Zoom, Pan, AutoScale, Clipboard
            Copy, and toggle <see cref="P:ZedGraph.ZedGraphControl.IsShowPointValues"/>.
            </remarks>
            <value>true to allow the context menu, false to disable it</value>
        </member>
        <member name="P:ZedGraph.ZedGraphControl.PointValueFormat">
            <summary>
            Gets or sets the format for displaying tooltip values.
            This format is passed to <see cref="M:ZedGraph.PointPair.ToString(System.String)"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphControl.PointDateFormat">
            <summary>
            Gets or sets the format for displaying tooltip values.
            This format is passed to <see cref="M:ZedGraph.XDate.ToString(System.String)"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphControl.Image">
            <summary>
            Gets the graph pane's current image.
            <seealso cref="T:System.Drawing.Bitmap"/>
            </summary>
            <exception cref="T:ZedGraph.ZedGraphException">
            When the control has been disposed before this call.
            </exception>
        </member>
        <member name="P:ZedGraph.ZedGraphControl.BeenDisposed">
            <summary>
            This checks if the control has been disposed.  This is synonymous with
            the graph pane having been nulled or disposed.  Therefore this is the
            same as <c>ZedGraphControl.GraphPane == null</c>.
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphException">
            <summary>
            An exception thrown by ZedGraph.  A child class of <see cref="T:System.ApplicationException"/>.
            </summary>
            
            <author> Jerry Vos modified by John Champion</author>
            <version> $Revision: 3.1 $ $Date: 2005/02/02 04:52:05 $ </version>
        </member>
        <member name="M:ZedGraph.ZedGraphException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:ZedGraph.ZedGraphException"/>
            class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/>
            instance that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/>
            instance that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:ZedGraph.ZedGraphException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception"/> class with a specified
            error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception.
            If the innerException parameter is not a null reference, the current exception is raised
            in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:ZedGraph.ZedGraphException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:ZedGraph.ZedGraphException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception"/> class.
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphWeb">
            <summary>
            The ZedGraphWeb class provides a web control interface to the
            <see cref="N:ZedGraph"/> class library.  This allows ZedGraph to be used
            from a web page with ASP.net.  All graph
            attributes are accessible via the <see cref="P:ZedGraph.ZedGraphControl.GraphPane"/>
            property.
            </summary>
            <author> Darren Martz  revised by John Champion </author>
            <version> $Revision: 3.23 $ $Date: 2005/03/18 22:37:31 $ </version>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.ToString">
            <summary>
            Override the <see cref="M:ZedGraph.ZedGraphWeb.ToString"/> method to do nothing.
            </summary>
            <returns>An empty string</returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.RenderDemo(System.Drawing.Graphics,ZedGraph.GraphPane)">
            <summary>
            Renders the demo graph with one call.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> object for which the drawing will be done.</param>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/></param>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.OnDrawPane(System.Drawing.Graphics,ZedGraph.GraphPane)">
            <summary>
            stub method that passes control for the render event to the the registered
            event handler.
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.MapWebContent(System.Drawing.Graphics,ZedGraph.GraphPane)">
            <summary>
            Adds content to the <see cref="T:ZedGraph.GraphPane"/> instance based on the web controls state elements.
            This requires applying each <see cref="T:ZedGraph.ZedGraphWebCurveItem"/> to the <see cref="T:ZedGraph.GraphPane"/> 
            including all the values and sub objects.
            </summary>
            <param name="g"><see cref="T:System.Drawing.Graphics"/></param>
            <param name="pane"><see cref="T:ZedGraph.GraphPane"/></param>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.PopulateByDataSource(System.Drawing.Graphics,ZedGraph.GraphPane)">
            <summary>
            Provides binding between <see cref="P:ZedGraph.ZedGraphWeb.DataSource"/> and the specified pane.  Extracts the
            data from <see cref="P:ZedGraph.ZedGraphWeb.DataSource"/> and copies it into the appropriate
            <see cref="T:ZedGraph.PointPairList"/> for each <see cref="T:ZedGraph.CurveItem"/> in the
            specified <see cref="T:ZedGraph.GraphPane"/>.
            </summary>
            <param name="g">The <see cref="T:System.Drawing.Graphics"/> object to be used for rendering the data.</param>
            <param name="pane">The <see cref="T:ZedGraph.GraphPane"/> object which will receive the data.</param>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.OnPreRender(System.EventArgs)">
            <summary>
            Calls the Draw() method for the control.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> reference for the event.</param>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.CreateGraph(System.IO.Stream,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Method to create a <see cref="T:ZedGraph.GraphPane"/> class for the control.
            </summary>
            <param name="OutputStream">A <see cref="T:System.IO.Stream"/> in which to output the ZedGraph
            <see cref="T:System.Drawing.Image"/>.</param>
            <param name="Format">The <see cref="P:ZedGraph.ZedGraphWeb.ImageFormat"/> type to be output.</param>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            Override the Render() method with a do-nothing method.
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.Draw(System.Boolean)">
            <summary>
            Draws graph on HttpResponse object
            </summary>
            <param name="end"></param>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.Draw(System.IO.Stream)">
            <summary>
            Draws graph on stream object
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.LoadViewState(System.Object)">
            <summary>
            Used by asp.net to load the viewstate values into the web control
            </summary>
            <param name="savedState">portable view state object</param>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.SaveViewState">
            <summary>
            Used by asp.net to save the viewstate to the class instance given a portable state object.
            </summary>
            <returns>portable state object</returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.TrackViewState">
            <summary>
            Used by asp.net to inform the viewstate to start tracking changes.
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWeb.Dispose">
            <summary>
            Free up resources associated with the FileStream
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.CacheDuration">
            <summary>
            
            </summary>
            <value></value>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.DataMember">
            <summary>
            The <see cref="T:System.String"/> name of the data member that contains the data to be
            bound to the graph.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.DataSource">
            <summary>
            The object reference that points to a data source from which to bind curve data.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.BaseDimension">
            <summary>
            Proxy property that gets or sets the value of the <see cref="P:ZedGraph.PaneBase.BaseDimension"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.Width">
            <summary>
            Proxy property that gets or sets the width of the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.
            </summary>
            <value>The width in output device pixels</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.Height">
            <summary>
            Proxy property that gets or sets the height of the <see cref="P:ZedGraph.PaneBase.PaneRect"/>.
            </summary>
            <value>The height in output device pixels</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.Title">
            <summary>
            Proxy property that gets or sets the Title of the <see cref="T:ZedGraph.GraphPane"/>.
            </summary>
            <value>A title <see cref="T:System.String"/></value>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.IsShowTitle">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.PaneBase.IsShowTitle"/>, which
            determines if the <see cref="P:ZedGraph.PaneBase.Title"/> is visible.
            </summary>
            <value>true to show the pane title, false otherwise</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.IsIgnoreInitial">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.GraphPane.IsIgnoreInitial"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.IsIgnoreMissing">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.GraphPane.IsIgnoreMissing"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.IsFontsScaled">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.PaneBase.IsFontsScaled"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.BarBase">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.GraphPane.BarBase"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.IsAxisRectAuto">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.GraphPane.IsAxisRectAuto"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.IsPenWidthScaled">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.PaneBase.IsPenWidthScaled"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.AxisChanged">
            <summary>
            Gets or sets a boolean flag value that, if true, will cause the
            <see cref="M:ZedGraph.GraphPane.AxisChange(System.Drawing.Graphics)"/> method to be called when
            <see cref="M:ZedGraph.ZedGraphWeb.CreateGraph(System.IO.Stream,System.Drawing.Imaging.ImageFormat)"/> is called.
            </summary>
            <value>A boolean value, true to call <see cref="M:ZedGraph.GraphPane.AxisChange(System.Drawing.Graphics)"/>, false otherwise</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.OutputFormat">
            <summary>
            Proxy property that gets or sets the value that determines the output format for the control, in the
            form of a <see cref="T:ZedGraph.ZedGraphWeb.ZedGraphWebFormat"/> enumeration.  This is typically Gif, Jpeg,
            Png, or Icon.
            </summary>
            <value>A <see cref="T:ZedGraph.ZedGraphWeb.ZedGraphWebFormat"/> enumeration.</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.ClusterScaleWidth">
            <summary>
            Proxy property that gets or sets the value of the <see cref="P:ZedGraph.GraphPane.ClusterScaleWidth"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.BarType">
            <summary>
            Proxy property that gets or sets the value of the <see cref="P:ZedGraph.GraphPane.BarType"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.LineType">
            <summary>
            Proxy property that gets or sets the value of the <see cref="P:ZedGraph.GraphPane.LineType"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.MinClusterGap">
            <summary>
            Proxy property that gets or sets the value of the <see cref="P:ZedGraph.GraphPane.MinClusterGap"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.MinBarGap">
            <summary>
            Proxy property that gets or sets the value of the <see cref="P:ZedGraph.GraphPane.MinBarGap"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.MarginLeft">
            <summary>
            Proxy property that gets or sets the value of the <see cref="P:ZedGraph.PaneBase.MarginLeft"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.MarginRight">
            <summary>
            Proxy property that gets or sets the value of the <see cref="P:ZedGraph.PaneBase.MarginRight"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.MarginTop">
            <summary>
            Proxy property that gets or sets the value of the <see cref="P:ZedGraph.PaneBase.MarginTop"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.MarginBottom">
            <summary>
            Proxy property that gets or sets the value of the <see cref="P:ZedGraph.PaneBase.MarginBottom"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.CurveList">
            <summary>
            Proxy property that gets the value of the <see cref="P:ZedGraph.GraphPane.CurveList"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.GraphItemList">
            <summary>
            Proxy property that gets the value of the <see cref="P:ZedGraph.PaneBase.GraphItemList"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.AxisRect">
            <summary>
            Proxy property that gets the value of the <see cref="P:ZedGraph.GraphPane.AxisRect"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.PieRect">
            <summary>
            Proxy property that gets the value of the <see cref="P:ZedGraph.GraphPane.PieRect"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.FontSpec">
            <summary>
            Proxy property that gets the value of the <see cref="P:ZedGraph.PaneBase.FontSpec"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.AxisBorder">
            <summary>
            Proxy property that gets the value of the <see cref="P:ZedGraph.GraphPane.AxisBorder"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.AxisFill">
            <summary>
            Proxy property that gets the value of the <see cref="P:ZedGraph.GraphPane.AxisFill"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.PaneBorder">
            <summary>
            Proxy property that gets the value of the <see cref="P:ZedGraph.PaneBase.PaneBorder"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.PaneFill">
            <summary>
            Proxy property that gets the value of the <see cref="P:ZedGraph.PaneBase.PaneFill"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.XAxis">
            <summary>
            Proxy property that gets the value of the <see cref="P:ZedGraph.GraphPane.XAxis"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.YAxis">
            <summary>
            Proxy property that gets the value of the <see cref="P:ZedGraph.GraphPane.YAxis"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.Y2Axis">
            <summary>
            Proxy property that gets the value of the <see cref="P:ZedGraph.GraphPane.Y2Axis"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.Legend">
            <summary>
            Proxy property that gets the value of the <see cref="P:ZedGraph.PaneBase.Legend"/>.
            </summary>
        </member>
        <member name="E:ZedGraph.ZedGraphWeb.RenderGraph">
            <summary>
            Sets the rendering event handler.
            </summary>
            <value>An event type for the RenderGraph event</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.ImageFormat">
            <summary>
            Gets the <see cref="P:ZedGraph.ZedGraphWeb.OutputFormat"/> property, translated to an
            <see cref="P:ZedGraph.ZedGraphWeb.ImageFormat"/> enumeration.
            </summary>
            <value>An <see cref="P:ZedGraph.ZedGraphWeb.ImageFormat"/> enumeration representing the image type
            to be output.</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWeb.ContentType">
            <summary>
            Gets the <see cref="P:ZedGraph.ZedGraphWeb.OutputFormat"/> property, translated to an
            html content type string (such as "image/png").
            </summary>
            <value>A string representing the image type to be output.</value>
        </member>
        <member name="T:ZedGraph.ZedGraphWeb.ZedGraphWebFormat">
            <summary>
            An enumeration type that defines the output image types supported by
            the ZedGraph Web control.
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphWeb.ZedGraphWebFormat.Gif">
            <summary>
            The Gif bitmap format (CompuServe)
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphWeb.ZedGraphWebFormat.Jpeg">
            <summary>
            The JPEG format
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphWeb.ZedGraphWebFormat.Icon">
            <summary>
            A windows Icon format
            </summary>
        </member>
        <member name="F:ZedGraph.ZedGraphWeb.ZedGraphWebFormat.Png">
            <summary>
            The portable network graphics format
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphWebControlEventHandler">
            <summary>
            A delegate to handle the rendering event for this control.
            </summary>
            <param name="g">A <see cref="T:System.Drawing.Graphics"/> object for which the drawing will be done.</param>
            <param name="pane">A reference to the <see cref="T:ZedGraph.GraphPane"/>
            class to be rendered.</param>
        </member>
        <member name="T:ZedGraph.ZedGraphWebCurveItem">
            <summary>
            Base class for curve items in the web control
            <seealso cref="T:ZedGraph.CurveItem"/>
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="T:ZedGraph.GenericItem">
            <summary>
            Generic state management item used in a state management aware collection.
            This class is intended to be subclasses with public property values added.
            Property values should be added in the full {get/set} format reading and writing
            the current state from the ViewState array.
            </summary>
            <example>
            public class MyItem : GenericItem
            {
            	[NotifyParentProperty(true)]
            	public bool IsVisible
            	{
            		get 
            		{ 
            			object x = ViewState["IsVisible"]; 
            			return (null == x) ? true : (bool)x;
            		}
            		set { ViewState["IsLegendLabelVisible"] = value; }
            	}
            }
            </example>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.GenericItem.#ctor">
            <summary>
            Default constructor that does nothing
            </summary>
        </member>
        <member name="F:ZedGraph.GenericItem._isTrackingViewState">
            <summary>
            Internal indicator of the current tracking state
            </summary>
        </member>
        <member name="F:ZedGraph.GenericItem._viewState">
            <summary>
            Internal view state used by the asp.net infrastructure
            </summary>
        </member>
        <member name="M:ZedGraph.GenericItem.Register(System.Char,System.Type)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <param name="type"></param>
        </member>
        <member name="M:ZedGraph.GenericItem.GetValue(System.Char)">
            <summary>
            
            </summary>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.GenericItem.SetDirty">
            <summary>
            Internal method to mark the statebag as dirty so it can be resaved if necessary
            </summary>
        </member>
        <member name="M:ZedGraph.GenericItem.LoadViewState(System.Object)">
            <summary>
            Loads the viewstate into the local statebag given a viewstate collection object
            </summary>
            <param name="savedState">object containing asp.net page viewstate</param>
        </member>
        <member name="M:ZedGraph.GenericItem.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            Implementation of the IStateManager.LoadViewState method
            </summary>
            <param name="savedState">object containing asp.net page viewstate</param>
        </member>
        <member name="M:ZedGraph.GenericItem.SaveViewState">
            <summary>
            Saves the current viewstate into a portable object
            </summary>
            <returns>object containing classes viewstate</returns>
        </member>
        <member name="M:ZedGraph.GenericItem.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            Implementation of the IStateManager.SaveViewState method
            </summary>
            <returns>object containing classes viewstate</returns>
        </member>
        <member name="M:ZedGraph.GenericItem.TrackViewState">
            <summary>
            Tells the statebag to begin tracking changes to state values
            </summary>
        </member>
        <member name="M:ZedGraph.GenericItem.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            Implementation of the IStateManager.TrackViewState method
            </summary>
        </member>
        <member name="P:ZedGraph.GenericItem.ViewState">
            <summary>
            Internal access to the viewstate array. Subclassed objects can access this
            to read/write changes to the objects view state.
            </summary>
            <example>
            ViewState["myelement"] = "value";
            string val = (string)ViewState["myelement"];
            </example>
        </member>
        <member name="P:ZedGraph.GenericItem.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            Implementation of the IStateManager.IsTrackingViewState property.
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebCurveItem.ToString">
            <summary>
            Identifies curve item by the labels value
            </summary>
            <returns>A string containing "CurveItem: label", where 'label' is the
            <see cref="P:ZedGraph.CurveItem.Label"/> property of the <see cref="T:ZedGraph.CurveItem"/>
            </returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebCurveItem.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebCurveItem.#ctor(System.String)">
            <summary>
            Constructor that accepts a default label value
            </summary>
            <param name="label">Curve item label</param>
        </member>
        <member name="M:ZedGraph.ZedGraphWebCurveItem.CopyTo(ZedGraph.CurveItem)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebCurveItem"/> to the specified
            <see cref="T:ZedGraph.CurveItem"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.CurveItem"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebCurveItem.DataMember">
            <summary>
            The <see cref="T:System.String"/> name of the data member that contains the data to be
            bound to this <see cref="T:ZedGraph.CurveItem"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebCurveItem.Label">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.CurveItem.Label"/>.
            </summary>
            <remarks> A text string that represents the <see cref="T:ZedGraph.Legend"/>
            entry for the the <see cref="T:ZedGraph.CurveItem"/> object.
            </remarks>
            <seealso cref="P:ZedGraph.CurveItem.Label"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebCurveItem.Color">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.CurveItem.Color"/>.
            </summary>
            <remarks> The <see cref="P:ZedGraph.LineItem.Line"/>/<see cref="P:ZedGraph.LineItem.Symbol"/>/<see cref="P:ZedGraph.BarItem.Bar"/> 
            color (FillColor for the Bar).  This is a common access to
            <see cref="P:ZedGraph.Line.Color"/>, <see cref="P:ZedGraph.Border.Color"/>, and
            <see cref="P:ZedGraph.Fill.Color"/> properties for this curve
            </remarks>
            <seealso cref="P:ZedGraph.CurveItem.Color"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebCurveItem.IsVisible">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.CurveItem.IsVisible"/>.
            </summary>
            <remarks> Determines whether the <see cref="T:ZedGraph.CurveItem"/> is visible on the graph.
            Note that this value turns the curve display on or off, but it does not
            affect the display of the legend entry.  To hide the legend entry, you
            have to set <see cref="P:ZedGraph.ZedGraphWebCurveItem.IsLegendLabelVisible"/> to false.
            </remarks>
            <seealso cref="P:ZedGraph.CurveItem.IsVisible"/>
            <seealso cref="P:ZedGraph.CurveItem.IsLegendLabelVisible"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebCurveItem.IsLegendLabelVisible">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.CurveItem.IsLegendLabelVisible"/>.
            </summary>
            <remarks> Determines whether the label for this <see cref="T:ZedGraph.CurveItem"/> is visible in the legend.
            Note that this value turns the legend entry display on or off, but it does not
            affect the display of the curve on the graph.  To hide the curve, you
            have to set <see cref="P:ZedGraph.ZedGraphWebCurveItem.IsVisible"/> to false.
            </remarks>
            <seealso cref="P:ZedGraph.CurveItem.IsVisible"/>
            <seealso cref="P:ZedGraph.CurveItem.IsLegendLabelVisible"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebCurveItem.IsY2Axis">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.CurveItem.IsY2Axis"/>.
            </summary>
            <remarks> Determines which Y axis this <see cref="T:ZedGraph.CurveItem"/>
            is assigned to.  The
            <see cref="T:ZedGraph.YAxis"/> is on the left side of the graph and the
            <see cref="T:ZedGraph.Y2Axis"/> is on the right side.  Assignment to an axis
            determines the scale that is used to draw the curve on the graph.
            </remarks>
            <seealso cref="P:ZedGraph.CurveItem.IsY2Axis"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebCurveItem.Points">
            <summary>
            Proxy property that gets the value of the <see cref="P:ZedGraph.CurveItem.Points"/>.
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphWebBorder">
            <summary>
            Web control state management class for a <see cref="T:ZedGraph.Border"/> object.
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebBorder.ToString">
            <summary>
            Override ToString function
            </summary>
            <returns>Always returns "Border"</returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebBorder.CopyTo(ZedGraph.Border)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebBorder"/> to the specified
            <see cref="T:ZedGraph.Border"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.Border"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebBorder.Color">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Border.Color"/>.
            </summary>
            <remarks> Determines the <see cref="T:System.Drawing.Color"/> of the <see cref="T:System.Drawing.Pen"/> used to
            draw this Border.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebBorder.IsVisible">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Border.IsVisible"/>.
            </summary>
            <remarks> Determines whether or not the Border will be drawn.  true to draw the Border,
            false otherwise.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebBorder.PenWidth">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Border.PenWidth"/>.
            </summary>
            <remarks> Gets or sets the width, in points (1/72 inch), of the <see cref="T:System.Drawing.Pen"/>
            used to draw this Border.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebBorder.InflateFactor">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Border.InflateFactor"/>.
            </summary>
            <remarks> Gets or sets the amount of inflation to be done on the rectangle
            before rendering.
            </remarks>
        </member>
        <member name="T:ZedGraph.ZedGraphWebFill">
            <summary>
            Web control state management class for a <see cref="T:ZedGraph.Fill"/> object.
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebFill.ToString">
            <summary>
            Override ToString() function
            </summary>
            <returns>Always returns "Fill"</returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebFill.CopyTo(ZedGraph.Fill)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebFill"/> to the specified
            <see cref="T:ZedGraph.Fill"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.Fill"/> object</param>
        </member>
        <member name="F:ZedGraph.ZedGraphWebFill.Brush">
            <summary>
            The <see cref="F:ZedGraph.ZedGraphWebFill.Brush"/> object associated with this <see cref="T:ZedGraph.Fill"/> object.
            Not accessible via webcontrol properties.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFill.Color">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Fill.Color"/>.
            </summary>
            <remarks> The fill color.  This property is used as a single color to make a solid fill
            (<see cref="P:ZedGraph.ZedGraphWebFill.Type"/> is <see cref="F:ZedGraph.FillType.Solid"/>), or it can be used in 
            combination with <see cref="P:System.Drawing.Color.White"/> to make a
            <see cref="T:System.Drawing.Drawing2D.LinearGradientBrush"/>
            when <see cref="P:ZedGraph.ZedGraphWebFill.Type"/> is <see cref="F:ZedGraph.FillType.Brush"/> and <see cref="F:ZedGraph.ZedGraphWebFill.Brush"/>
            is null.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFill.IsVisible">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Fill.IsVisible"/>.
            </summary>
            <remarks> This property determines the type of color fill. 
            Returns true if the <see cref="P:ZedGraph.ZedGraphWebFill.Type"/> property is either
            <see cref="F:ZedGraph.FillType.Solid"/> or
            <see cref="F:ZedGraph.FillType.Brush"/>.  If set to true, this property
            will automatically set the <see cref="P:ZedGraph.ZedGraphWebFill.Type"/> to
            <see cref="F:ZedGraph.FillType.Brush"/>.  If set to false, this property
            will automatically set the <see cref="P:ZedGraph.ZedGraphWebFill.Type"/> to
            <see cref="F:ZedGraph.FillType.None"/>.  In order to get a regular
            solid-color fill, you have to manually set <see cref="P:ZedGraph.ZedGraphWebFill.Type"/>
            to <see cref="F:ZedGraph.FillType.Solid"/>.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFill.RangeMax">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Fill.RangeMax"/>.
            </summary>
            <remarks> The maximum user-scale value for the gradient-by-value determination.  This defines
            the user-scale value for the end of the gradient.
            </remarks>
            <seealso cref="F:ZedGraph.FillType.GradientByX"/>
            <seealso cref="F:ZedGraph.FillType.GradientByY"/>
            <seealso cref="F:ZedGraph.FillType.GradientByZ"/>
            <seealso cref="P:ZedGraph.Fill.IsGradientValueType"/>
            <value>A double value, in user scale unit</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFill.RangeMin">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Fill.RangeMin"/>.
            </summary>
            <remarks> The minimum user-scale value for the gradient-by-value determination.  This defines
            the user-scale value for the start of the gradient.
            </remarks>
            <seealso cref="F:ZedGraph.FillType.GradientByX"/>
            <seealso cref="F:ZedGraph.FillType.GradientByY"/>
            <seealso cref="F:ZedGraph.FillType.GradientByZ"/>
            <seealso cref="P:ZedGraph.Fill.IsGradientValueType"/>
            <value>A double value, in user scale unit</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFill.Type">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Fill.Type"/>.
            </summary>
            <remarks> Determines the type of fill, which can be either solid
            color (<see cref="F:ZedGraph.FillType.Solid"/>) or a custom brush
            (<see cref="F:ZedGraph.FillType.Brush"/>).  See <see cref="P:ZedGraph.ZedGraphWebFill.Type"/> for
            more information.
            </remarks>
            <seealso cref="P:ZedGraph.Fill.Color"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFill.AlignH">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Fill.AlignH"/>.
            </summary>
            <remarks> Determines how the brush will be aligned with the filled object
            in the horizontal direction.  This value is a <see cref="T:ZedGraph.AlignH"/> enumeration.
            This field only applies if <see cref="P:ZedGraph.ZedGraphWebFill.IsScaled"/> is false.
            </remarks>
            <seealso cref="P:ZedGraph.ZedGraphWebFill.AlignV"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFill.AlignV">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Fill.AlignV"/>.
            </summary>
            <remarks> Determines how the brush will be aligned with the filled object
            in the vertical direction.  This value is a <see cref="T:ZedGraph.AlignV"/> enumeration.
            This field only applies if <see cref="P:ZedGraph.ZedGraphWebFill.IsScaled"/> is false.
            </remarks>
            <seealso cref="P:ZedGraph.ZedGraphWebFill.AlignH"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFill.IsScaled">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Fill.IsScaled"/>.
            </summary>
            <remarks> Determines if the brush will be scaled to the bounding box
            of the filled object.  If this value is false, then the brush will only be aligned
            with the filled object based on the <see cref="P:ZedGraph.ZedGraphWebFill.AlignH"/> and <see cref="P:ZedGraph.ZedGraphWebFill.AlignV"/>
            properties.
            </remarks>
        </member>
        <member name="T:ZedGraph.ZedGraphWebSymbol">
            <summary>
            Web control state management class for a <see cref="T:ZedGraph.Symbol"/> object
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebSymbol.ToString">
            <summary>
            Override ToString() function
            </summary>
            <returns>Always returns "Symbol"</returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebSymbol.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebSymbol.CopyTo(ZedGraph.Symbol)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebSymbol"/> to the specified
            <see cref="T:ZedGraph.Symbol"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.Symbol"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebSymbol.IsVisible">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Symbol.IsVisible"/>.
            </summary>
            <remarks> Gets or sets a property that shows or hides the <see cref="T:ZedGraph.Symbol"/>.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebSymbol.Size">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Symbol.Size"/>.
            </summary>
            <remarks> Gets or sets the size of the <see cref="T:ZedGraph.Symbol"/> in points (1/72nd inch).
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebSymbol.SymbolType">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Symbol.Type"/>.
            </summary>
            <remarks> Gets or sets the type (shape) of the <see cref="T:ZedGraph.Symbol"/> using
            a <see cref="P:ZedGraph.ZedGraphWebSymbol.SymbolType"/> enumeration.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebSymbol.Border">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebBorder"/> object for
            this <see cref="T:ZedGraph.Symbol"/>.
            </summary>
            <seealso cref="T:ZedGraph.Border"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebSymbol.Fill">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebFill"/> object for
            this <see cref="T:ZedGraph.Symbol"/>.
            </summary>
            <seealso cref="T:ZedGraph.Fill"/>
        </member>
        <member name="T:ZedGraph.ZedGraphWebBarItem">
            <summary>
            Web control state management class for a <see cref="T:ZedGraph.BarItem"/> class
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebBarItem.ToString">
            <summary>
            Identifies <see cref="T:ZedGraph.BarItem"/> by the labels value
            </summary>
            <returns>A string containing "BarItem: label", where 'label' is the
            <see cref="P:ZedGraph.CurveItem.Label"/> property of the <see cref="T:ZedGraph.CurveItem"/>
            </returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebBarItem.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebBarItem.CopyTo(ZedGraph.BarItem)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebBarItem"/> to the specified
            <see cref="T:ZedGraph.BarItem"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.BarItem"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebBarItem.Border">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebBorder"/> object for
            this <see cref="T:ZedGraph.BarItem"/>.
            </summary>
            <seealso cref="T:ZedGraph.Border"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebBarItem.Fill">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebFill"/> object for
            this <see cref="T:ZedGraph.BarItem"/>.
            </summary>
            <seealso cref="T:ZedGraph.Fill"/>
        </member>
        <member name="T:ZedGraph.ZedGraphWebErrorBarItem">
            <summary>
            Web control state management class for a <see cref="T:ZedGraph.ErrorBarItem"/> class
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebErrorBarItem.ToString">
            <summary>
            Identifies <see cref="T:ZedGraph.ErrorBarItem"/> by the labels value
            </summary>
            <returns>A string containing "ErrorBarItem: label", where 'label' is the
            <see cref="P:ZedGraph.CurveItem.Label"/> property of the <see cref="T:ZedGraph.CurveItem"/>
            </returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebErrorBarItem.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebErrorBarItem.CopyTo(ZedGraph.ErrorBarItem)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebErrorBarItem"/> to the specified
            <see cref="T:ZedGraph.ErrorBarItem"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.ErrorBarItem"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebErrorBarItem.Symbol">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebSymbol"/> object for
            this <see cref="T:ZedGraph.ErrorBarItem"/>.
            </summary>
            <seealso cref="T:ZedGraph.Symbol"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebErrorBarItem.BarBase">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.ErrorBarItem.BarBase"/>.
            </summary>
            <remarks> Determines which <see cref="T:ZedGraph.Axis"/> is the independent axis
            for this <see cref="T:ZedGraph.ErrorBarItem"/>.
            </remarks>
            <seealso cref="P:ZedGraph.ErrorBarItem.BarBase"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebErrorBarItem.PenWidth">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.ErrorBar.PenWidth"/>.
            </summary>
            <remarks> The pen width to be used for drawing error bars
            Units are points.  This property only controls the pen width for the
            vertical line.  The pen width for the symbol outline is
            controlled separately by the <see cref="P:ZedGraph.ZedGraphWebErrorBarItem.Symbol"/> property.
            </remarks>
        </member>
        <member name="T:ZedGraph.ZedGraphWebHiLowBarItem">
            <summary>
            Web control state management class for a <see cref="T:ZedGraph.HiLowBarItem"/> class
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebHiLowBarItem.ToString">
            <summary>
            Identifies <see cref="T:ZedGraph.HiLowBarItem"/> by the labels value
            </summary>
            <returns>A string containing "HiLowBarItem: label", where 'label' is the
            <see cref="P:ZedGraph.CurveItem.Label"/> property of the <see cref="T:ZedGraph.CurveItem"/>
            </returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebHiLowBarItem.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebHiLowBarItem.CopyTo(ZedGraph.HiLowBarItem)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebHiLowBarItem"/> to the specified
            <see cref="T:ZedGraph.HiLowBarItem"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.HiLowBarItem"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebHiLowBarItem.BarBase">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.HiLowBarItem.BarBase"/>.
            </summary>
            <remarks> Determines which <see cref="T:ZedGraph.Axis"/> is the independent axis
            for this <see cref="T:ZedGraph.HiLowBarItem"/>.
            </remarks>
            <seealso cref="P:ZedGraph.HiLowBarItem.BarBase"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebHiLowBarItem.IsMaximumWidth">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.HiLowBar.IsMaximumWidth"/>.
            </summary>
            <remarks> Determines whether the bar width will be based on
            the <see cref="P:ZedGraph.ZedGraphWebHiLowBarItem.Size"/> value, or it will be based on available
            space similar to <see cref="T:ZedGraph.BarItem"/> objects.
            </remarks>
            <value>If true, then the value
            of <see cref="P:ZedGraph.ZedGraphWebHiLowBarItem.Size"/> is ignored.  If this value is true, then
            <see cref="P:ZedGraph.GraphPane.MinClusterGap"/> will be used to determine the total space between each bar.
            </value>
            <seealso cref="P:ZedGraph.HiLowBarItem.BarBase"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebHiLowBarItem.Size">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.HiLowBar.Size"/>.
            </summary>
            <remarks>The size of the bars can be set by this value, which
            is then scaled according to the scaleFactor (see
            <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>).  Alternatively,
            if <see cref="P:ZedGraph.ZedGraphWebHiLowBarItem.IsMaximumWidth"/> is true, the bar width will
            be set according to the maximum available cluster width less
            the cluster gap (see <see cref="M:ZedGraph.GraphPane.GetClusterWidth"/>
            and <see cref="P:ZedGraph.GraphPane.MinClusterGap"/>).  That is, if
            <see cref="P:ZedGraph.ZedGraphWebHiLowBarItem.IsMaximumWidth"/> is true, then the value of
            <see cref="P:ZedGraph.ZedGraphWebHiLowBarItem.Size"/> will be ignored.
            </remarks>
            <value>Size in points (1/72 inch)</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWebHiLowBarItem.Border">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebBorder"/> object for
            this <see cref="T:ZedGraph.HiLowBarItem"/>.
            </summary>
            <seealso cref="T:ZedGraph.Border"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebHiLowBarItem.Fill">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebFill"/> object for
            this <see cref="T:ZedGraph.HiLowBarItem"/>.
            </summary>
            <seealso cref="T:ZedGraph.Fill"/>
        </member>
        <member name="T:ZedGraph.ZedGraphWebLineItem">
            <summary>
            Web control state management class for a <see cref="T:ZedGraph.LineItem"/> class
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebLineItem.ToString">
            <summary>
            Identifies <see cref="T:ZedGraph.LineItem"/> by the labels value
            </summary>
            <returns>A string containing "LineItem: label", where 'label' is the
            <see cref="P:ZedGraph.CurveItem.Label"/> property of the <see cref="T:ZedGraph.CurveItem"/>
            </returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebLineItem.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebLineItem.CopyTo(ZedGraph.LineItem)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebLineItem"/> to the specified
            <see cref="T:ZedGraph.LineItem"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.LineItem"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLineItem.IsSmooth">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Line.IsSmooth"/>.
            </summary>
            <remarks> Gets or sets a property that determines if this <see cref="T:ZedGraph.Line"/>
            will be drawn smooth.  The "smoothness" is controlled by
            the <see cref="P:ZedGraph.ZedGraphWebLineItem.SmoothTension"/> property.
            </remarks>
            <seealso cref="P:ZedGraph.Line.IsSmooth"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLineItem.Width">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Line.Width"/>.
            </summary>
            <remarks> The pen width used to draw the <see cref="T:ZedGraph.Line"/>, in points (1/72 inch)
            </remarks>
            <seealso cref="P:ZedGraph.Line.Width"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLineItem.SmoothTension">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Line.SmoothTension"/>.
            </summary>
            <remarks> Gets or sets a property that determines the smoothing tension
            for this <see cref="T:ZedGraph.Line"/>.  This property is only used if
            <see cref="P:ZedGraph.ZedGraphWebLineItem.IsSmooth"/> is true.  A tension value 0.0 will just
            draw ordinary line segments like an unsmoothed line.  A tension
            value of 1.0 will be smooth.  Values greater than 1.0 will generally
            give odd results.
            </remarks>
            <value>A floating point value indicating the level of smoothing.
            0.0F for no smoothing, 1.0F for lots of smoothing, &gt;1.0 for odd
            smoothing.</value>
            <seealso cref="P:ZedGraph.Line.IsSmooth"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLineItem.Style">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Line.Style"/>.
            </summary>
            <remarks> The style of the <see cref="T:ZedGraph.Line"/>, defined as a <see cref="T:System.Drawing.Drawing2D.DashStyle"/> enum.
            This allows the line to be solid, dashed, or dotted.
            </remarks>
            <seealso cref="P:ZedGraph.Line.Style"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLineItem.StepType">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Line.StepType"/>.
            </summary>
            <remarks> Determines if the <see cref="T:ZedGraph.LineItem"/> will be drawn by directly connecting the
            points from the <see cref="P:ZedGraph.CurveItem.Points"/> data collection,
            or if the curve will be a "stair-step" in which the points are
            connected by a series of horizontal and vertical lines that
            represent discrete, constant values.  Note that the values can
            be forward oriented <c>ForwardStep</c> (<see cref="T:ZedGraph.StepType"/>) or
            rearward oriented <c>RearwardStep</c>.
            That is, the points are defined at the beginning or end
            of the constant value for which they apply, respectively.
            The <see cref="P:ZedGraph.ZedGraphWebLineItem.StepType"/> property is ignored for lines
            that have <see cref="P:ZedGraph.ZedGraphWebLineItem.IsSmooth"/> set to true.
            </remarks>
            <seealso cref="P:ZedGraph.Line.StepType"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLineItem.Symbol">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebSymbol"/> object for
            this <see cref="T:ZedGraph.LineItem"/>.
            </summary>
            <seealso cref="T:ZedGraph.Symbol"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLineItem.Fill">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebFill"/> object for
            this <see cref="T:ZedGraph.LineItem"/>.
            </summary>
            <seealso cref="T:ZedGraph.Fill"/>
        </member>
        <member name="T:ZedGraph.ZedGraphWebPieItem">
            <summary>
            Web control state management class for a <see cref="T:ZedGraph.PieItem"/> class
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebPieItem.ToString">
            <summary>
            Identifies <see cref="T:ZedGraph.PieItem"/> by the labels value
            </summary>
            <returns>A string containing "PieItem: label", where 'label' is the
            <see cref="P:ZedGraph.CurveItem.Label"/> property of the <see cref="T:ZedGraph.CurveItem"/>
            </returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebPieItem.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebPieItem.CopyTo(ZedGraph.PieItem)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebPieItem"/> to the specified
            <see cref="T:ZedGraph.PieItem"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.PieItem"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebPieItem.Value">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.PieItem.Value"/>.
            </summary>
            <remarks> Gets or sets the value of this <see cref="T:ZedGraph.PieItem"/>.  
            Minimum value is 0. 
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebPieItem.Displacement">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.PieItem.Displacement"/>.
            </summary>
            <remarks> Gets or sets the a value which determines the amount, if any, of this <see cref="T:ZedGraph.PieItem"/>  
            displacement.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebPieItem.LabelType">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.PieItem.LabelType"/>.
            </summary>
            <remarks> Gets or sets the <see cref="T:ZedGraph.PieLabelType"/> to be used in displaying 
            <see cref="T:ZedGraph.PieItem"/> labels.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebPieItem.ValueDecimalDigits">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.PieItem.ValueDecimalDigits"/>.
            </summary>
            <remarks> Gets or sets the number of decimal digits to be displayed in a <see cref="T:ZedGraph.PieItem"/> 
            value label.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebPieItem.PercentDecimalDigits">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.PieItem.PercentDecimalDigits"/>.
            </summary>
            <remarks> Gets or sets the number of decimal digits to be displayed in a <see cref="T:ZedGraph.PieItem"/> 
            percent label.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebPieItem.LabelDetail">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.PieItem.LabelDetail"/>.
            </summary>
            <remarks> Gets or sets the <see cref="T:ZedGraph.TextItem"/> to be used
            for displaying this <see cref="T:ZedGraph.PieItem"/>'s label.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebPieItem.Border">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebBorder"/> object for
            this <see cref="T:ZedGraph.PieItem"/>.
            </summary>
            <seealso cref="T:ZedGraph.Border"/>
        </member>
        <member name="T:ZedGraph.ZedGraphWebGraphItem">
            <summary>
            Baseclass for graph items in the web control
            <seealso cref="T:ZedGraph.GraphItem"/>
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebGraphItem.ToString">
            <summary>
            Override the ToString() method.
            </summary>
            <returns>Always returns the string "GraphItem".</returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebGraphItem.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebGraphItem.CopyTo(ZedGraph.GraphItem)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebGraphItem"/> to the specified
            <see cref="T:ZedGraph.GraphItem"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.GraphItem"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebGraphItem.IsVisible">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.GraphItem.IsVisible"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebGraphItem.Location">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.GraphItem.Location"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebGraphItem.ZOrder">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.GraphItem.ZOrder"/>
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphWebCurveCollection">
            <summary>
            Manages a collection of <see cref="T:ZedGraph.ZedGraphWebCurveItem"/> objects that are 
            state management aware.
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="T:ZedGraph.GenericCollection">
            <summary>
            Provides array services in a web state engine environment. This collection can
            support 1:N datatypes as items provided they are based on the GenericItem class.
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.GenericCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:ZedGraph.GenericCollection.Schema">
            <summary>
            Internal collection item schema table. All supported data types must be
            identified in this array. The default constructor should populate this
            value.
            </summary>
        </member>
        <member name="F:ZedGraph.GenericCollection.List">
            <summary>
            Internal array of items. Some public access to the array is provided by default.
            Additional public access should be added when subclassing.
            </summary>
        </member>
        <member name="M:ZedGraph.GenericCollection.Clear">
            <summary>
            Empty the array list and marks the viewstate.
            </summary>
        </member>
        <member name="M:ZedGraph.GenericCollection.SupportedType(System.Object)">
            <summary>
            Verifies if the object is a supported datatype
            </summary>
            <param name="item">object to verify</param>
            <returns>true if supported</returns>
        </member>
        <member name="M:ZedGraph.GenericCollection.ListInsert(System.Int32,System.Object)">
            <summary>
            Internal insert item method that also tracks the change in the viewstate
            </summary>
            <param name="index">location in the array to insert the object</param>
            <param name="item">object to insert</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ZedGraph.GenericCollection.ListGet(System.Int32)">
            <summary>
            Retrieves an item by index
            </summary>
            <param name="index">array index</param>
            <returns>array item</returns>
        </member>
        <member name="M:ZedGraph.GenericCollection.ListAdd(System.Object)">
            <summary>
            Appends item to array and tracks the change in the viewstate
            </summary>
            <param name="item">Item to append</param>
            <returns>new index of item</returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ZedGraph.GenericCollection.ListRemoveAt(System.Int32)">
            <summary>
            Removes the item from the array and tracks the change in the viewstate
            </summary>
            <param name="index">item index to remove</param>
        </member>
        <member name="M:ZedGraph.GenericCollection.ListRemove(System.Object)">
            <summary>
            Removes the item from the array and tracks the change in the viewstate
            </summary>
            <param name="item">object to remove</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:ZedGraph.GenericCollection.IndexOf(System.Object)">
            <summary>
            Identifies the items index in the list given the item object
            </summary>
            <param name="item">item to locate in list</param>
            <returns>index of item</returns>
            <exception cref="T:System.ArgumentNullException"></exception>		
        </member>
        <member name="M:ZedGraph.GenericCollection.GetEnumerator">
            <summary>
            <see cref="M:System.Collections.IEnumerable.GetEnumerator"/> 
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.GenericCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)"/>
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:ZedGraph.GenericCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds item based on the rules of ListAdd
            <see cref="M:System.Collections.IList.Add(System.Object)"/>
            <seealso cref="M:ZedGraph.GenericCollection.ListAdd(System.Object)"/>
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.GenericCollection.System#Collections#IList#Clear">
            <summary>
            <see cref="M:System.Collections.IList.Clear"/>
            </summary>
        </member>
        <member name="M:ZedGraph.GenericCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            <see cref="M:System.Collections.IList.Contains(System.Object)"/>
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.GenericCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            <see cref="M:System.Collections.IList.IndexOf(System.Object)"/>
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.GenericCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts item according to the rules of ListInsert
            <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)"/>
            <seealso cref="M:ZedGraph.GenericCollection.ListInsert(System.Int32,System.Object)"/>
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:ZedGraph.GenericCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes item based on ListRemove
            <see cref="M:System.Collections.IList.Remove(System.Object)"/>
            <seealso cref="M:ZedGraph.GenericCollection.ListRemove(System.Object)"/>
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:ZedGraph.GenericCollection.System#Collections#IList#RemoveAt(System.Int32)">
            <summary>
            Removes item based on RemoveAt
            <see cref="M:System.Collections.IList.RemoveAt(System.Int32)"/>
            <seealso cref="M:System.Collections.CollectionBase.RemoveAt(System.Int32)"/>
            </summary>
            <param name="index"></param>
        </member>
        <member name="F:ZedGraph.GenericCollection._isTrackingViewState">
            <summary>
            preserves internal tracking state
            </summary>
        </member>
        <member name="F:ZedGraph.GenericCollection._saveAll">
            <summary>
            marks the entire statebag as dirty requiring the entire state to be saved
            </summary>
        </member>
        <member name="M:ZedGraph.GenericCollection.System#Web#UI#IStateManager#TrackViewState">
            <summary>
            <see cref="M:System.Web.UI.IStateManager.TrackViewState"/>
            </summary>
        </member>
        <member name="M:ZedGraph.GenericCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)">
            <summary>
            Loads the view state. This involves reading each state item pair, verifying
            schema support for each datatype, creating each item instance, and loading
            the state into each newly created instance.
            <seealso cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)"/>
            </summary>
            <param name="savedState">state management object</param>
        </member>
        <member name="M:ZedGraph.GenericCollection.System#Web#UI#IStateManager#SaveViewState">
            <summary>
            Saves the viewstate into a portable object format. This involves
            saving the state of each item in the list.
            <seealso cref="M:System.Web.UI.IStateManager.SaveViewState"/>
            </summary>
            <returns>portable state object</returns>
        </member>
        <member name="P:ZedGraph.GenericCollection.Count">
            <summary>
            <see cref="P:System.Collections.ICollection.Count"/>
            </summary>
        </member>
        <member name="P:ZedGraph.GenericCollection.IsSynchronized">
            <summary>
            <see cref="P:System.Collections.ICollection.IsSynchronized"/>
            </summary>
        </member>
        <member name="P:ZedGraph.GenericCollection.SyncRoot">
            <summary>
            <see cref="P:System.Collections.ICollection.SyncRoot"/>		
            </summary>
        </member>
        <member name="P:ZedGraph.GenericCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Privately implement those members of IList that take or 
            return the object type and expose equivalent public members
            that take or return an item instance instead. Also
            implement privately those members of IList that are not meaninful
            to expose in the public object model of this Collection.		
            </summary>
        </member>
        <member name="P:ZedGraph.GenericCollection.System#Collections#IList#IsFixedSize">
            <summary>
            <see cref="P:System.Collections.IList.IsFixedSize"/>
            </summary>
        </member>
        <member name="P:ZedGraph.GenericCollection.System#Collections#IList#IsReadOnly">
            <summary>
            <see cref="P:System.Collections.IList.IsReadOnly"/>
            </summary>
        </member>
        <member name="P:ZedGraph.GenericCollection.System#Web#UI#IStateManager#IsTrackingViewState">
            <summary>
            <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState"/>
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebCurveCollection.ToString">
            <summary>
            Override the ToString() method.
            </summary>
            <returns>Always returns String.Empty</returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebCurveCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebCurveCollection.Add(ZedGraph.ZedGraphWebCurveItem)">
            <summary>
            Add a <see cref="T:ZedGraph.ZedGraphWebCurveItem"/> to this collection.
            </summary>
            <param name="item">The <see cref="T:ZedGraph.ZedGraphWebCurveItem"/> to be added.</param>
            <seealso cref="T:ZedGraph.CurveItem"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebCurveCollection.Item(System.Int32)">
            <summary>
            Indexer to access the specified <see cref="T:ZedGraph.ZedGraphWebCurveItem"/> object by
            its ordinal position in the list.
            </summary>
            <param name="index">The ordinal position (zero-based) of the
            <see cref="T:ZedGraph.ZedGraphWebCurveItem"/> object to be accessed.</param>
            <value>A <see cref="T:ZedGraph.ZedGraphWebCurveItem"/> object reference.</value>
            <seealso cref="T:ZedGraph.CurveItem"/>
        </member>
        <member name="T:ZedGraph.ZedGraphWebGraphItemCollection">
            <summary>
            Manages a collection of <see cref="T:ZedGraph.ZedGraphWebGraphItem"/> objects that are 
            state management aware.
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebGraphItemCollection.ToString">
            <summary>
            Override the ToString() method.
            </summary>
            <returns>Always returns String.Empty</returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebGraphItemCollection.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebGraphItemCollection.Add(ZedGraph.ZedGraphWebGraphItem)">
            <summary>
            Add a <see cref="T:ZedGraph.ZedGraphWebGraphItem"/> to this collection.
            </summary>
            <param name="item">The <see cref="T:ZedGraph.ZedGraphWebGraphItem"/> to be added.</param>
            <seealso cref="T:ZedGraph.GraphItem"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebGraphItemCollection.Item(System.Int32)">
            <summary>
            Indexer to access the specified <see cref="T:ZedGraph.ZedGraphWebGraphItem"/> object by
            its ordinal position in the list.
            </summary>
            <param name="index">The ordinal position (zero-based) of the
            <see cref="T:ZedGraph.ZedGraphWebGraphItem"/> object to be accessed.</param>
            <value>A <see cref="T:ZedGraph.ZedGraphWebGraphItem"/> object reference.</value>
            <seealso cref="T:ZedGraph.GraphItem"/>
        </member>
        <member name="T:ZedGraph.ZedGraphWebStringCollection">
            <summary>
            Manages a collection of <see cref="T:ZedGraph.ZedGraphWebGraphItem"/> objects that are 
            state management aware.
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebStringCollection.ToString">
            <summary>
            Override the ToString() method.
            </summary>
            <returns>Always returns String.Empty</returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebStringCollection.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebStringCollection.Add(ZedGraph.ZedGraphWebString)">
            <summary>
            Add a <see cref="T:ZedGraph.ZedGraphWebString"/> to the collection.
            </summary>
            <param name="item">The <see cref="T:ZedGraph.ZedGraphWebString"/> object to be added</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebStringCollection.Item(System.Int32)">
            <summary>
            Indexer to access the specified <see cref="T:System.String"/> object by
            its ordinal position in the list.
            </summary>
            <param name="index">The ordinal position (zero-based) of the
            <see cref="T:System.String"/> object to be accessed.</param>
            <value>A <see cref="T:System.String"/> object reference.</value>
            <seealso cref="T:System.String"/>
        </member>
        <member name="T:ZedGraph.ZedGraphWebPointPairCollection">
            <summary>
            Manages a collection of <see cref="T:ZedGraph.ZedGraphWebPointPair"/> objects that are 
            state management aware.
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebPointPairCollection.ToString">
            <summary>
            Override the ToString() method.
            </summary>
            <returns>Always returns String.Empty</returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebPointPairCollection.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebPointPairCollection.Add(ZedGraph.ZedGraphWebPointPair)">
            <summary>
            Add a <see cref="T:ZedGraph.ZedGraphWebPointPair"/> to this collection.
            </summary>
            <param name="item">The <see cref="T:ZedGraph.ZedGraphWebPointPair"/> to be added.</param>
            <seealso cref="T:ZedGraph.PointPair"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebPointPairCollection.Item(System.Int32)">
            <summary>
            Indexer to access the specified <see cref="T:ZedGraph.ZedGraphWebPointPair"/> object by
            its ordinal position in the list.
            </summary>
            <param name="index">The ordinal position (zero-based) of the
            <see cref="T:ZedGraph.ZedGraphWebPointPair"/> object to be accessed.</param>
            <value>A <see cref="T:ZedGraph.ZedGraphWebPointPair"/> object reference.</value>
            <seealso cref="T:ZedGraph.PointPair"/>
        </member>
        <member name="T:ZedGraph.ZedGraphWebPointPair">
            <summary>
            A Web PointPair class
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebPointPair.ToString">
            <summary>
            Identifies PointPair instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebPointPair.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebPointPair.CopyTo(ZedGraph.PointPair)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebPointPair"/> to the specified
            <see cref="T:ZedGraph.PointPair"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.PointPair"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebPointPair.X">
            <summary>
            Proxy property that gets or sets the value of <see cref="F:ZedGraph.PointPair.X"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebPointPair.Y">
            <summary>
            Proxy property that gets or sets the value of <see cref="F:ZedGraph.PointPair.Y"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebPointPair.Z">
            <summary>
            Proxy property that gets or sets the value of <see cref="F:ZedGraph.PointPair.Z"/>
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphWebString">
            <summary>
            A Web String class
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebString.ToString">
            <summary>
            Identifies fontspec instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebString.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebString.Value">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:System.Drawing.SizeF.Height"/>
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphWebXAxis">
            <summary>
            Web control state management class for a <see cref="T:ZedGraph.XAxis"/> object
            </summary>
            <author>Darren Martz</author>	
        </member>
        <member name="T:ZedGraph.ZedGraphWebAxis">
            <summary>
            Web control state management class for a <see cref="T:ZedGraph.Axis"/> object
            </summary>
            <author>Darren Martz</author>	
        </member>
        <member name="M:ZedGraph.ZedGraphWebAxis.ToString">
            <summary>
            Identifies <see cref="T:ZedGraph.Axis"/> by the <see cref="P:ZedGraph.Axis.Title"/> value
            </summary>
            <returns>A string containing "Axis: title", where 'title' is the
            <see cref="P:ZedGraph.Axis.Title"/> property of the <see cref="T:ZedGraph.Axis"/>
            </returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebAxis.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebAxis.CopyTo(ZedGraph.Axis)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebAxis"/> to the specified
            <see cref="T:ZedGraph.Axis"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.Axis"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.Title">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.Title"/>.
            </summary>
            <remarks> The title normally shows the basis and dimensions of
            the scale range, such as "Time (Years)".  The title is only shown if the
            <see cref="P:ZedGraph.Axis.IsShowTitle"/> property is set to true.  If the Title text is empty,
            then no title is shown, and no space is "reserved" for the title on the graph.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.Color">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.Color"/>.
            </summary>
            <remarks> This affects only the tic
            marks, since the <see cref="P:ZedGraph.Axis.TitleFontSpec"/> and
            <see cref="P:ZedGraph.Axis.ScaleFontSpec"/> both have their own color specification.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.GridColor">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.Color"/>.
            </summary>
            <remarks> This affects only the grid
            lines, since the <see cref="P:ZedGraph.Axis.TitleFontSpec"/> and
            <see cref="P:ZedGraph.Axis.ScaleFontSpec"/> both have their own color specification.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.Cross">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.Cross"/>.
            </summary>
            <remarks>This property allows the axis to be shifted away from its default location.
            For example, for a graph with an X range from -100 to +100, the Y Axis can be located
            at the X=0 value rather than the left edge of the axisRect.  This value can be set
            automatically based on the state of <see cref="P:ZedGraph.ZedGraphWebAxis.CrossAuto"/>.  If
            this value is set manually, then <see cref="P:ZedGraph.ZedGraphWebAxis.CrossAuto"/> will
            also be set to false.  The "other" axis is the axis the handles the second dimension
            for the graph.  For the XAxis, the "other" axis is the YAxis.  For the YAxis or
            Y2Axis, the "other" axis is the XAxis.
            </remarks>
            <value> The value is defined in user scale units </value>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.MinAuto">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.MinAuto"/>.
            </summary>
            <remarks> Determines whether or not the minimum scale value <see cref="P:ZedGraph.Axis.Min"/>
            is set automatically.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.MaxAuto">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.MaxAuto"/>.
            </summary>
            <remarks> Determines whether or not the maximum scale value <see cref="P:ZedGraph.Axis.Max"/>
            is set automatically.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.StepAuto">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.StepAuto"/>.
            </summary>
            <remarks> Determines whether or not the scale major step size value <see cref="P:ZedGraph.Axis.Step"/>
            is set automatically.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.MinorStepAuto">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.MinorStepAuto"/>.
            </summary>
            <remarks> Determines whether or not the scale minor step size value <see cref="P:ZedGraph.Axis.MinorStep"/>
            is set automatically.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.CrossAuto">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.CrossAuto"/>.
            </summary>
            <remarks> Determines whether or not the axis intersection point <see cref="P:ZedGraph.Axis.Cross"/>
            is set automatically.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.MinGrace">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.MinGrace"/>.
            </summary>
            <remarks> This is the "grace" value applied to the minimum data range.
            This value is expressed as a fraction of the total data range.  For example, assume the data
            range is from 4.0 to 16.0, leaving a range of 12.0.  If MinGrace is set to
            0.1, then 10% of the range, or 1.2 will be subtracted from the minimum data value.
            The scale will then be ranged to cover at least 2.8 to 16.0.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.MaxGrace">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.MaxGrace"/>.
            </summary>
            <remarks> This is the "grace" value applied to the maximum data range.
            This value is expressed as a fraction of the total data range.  For example, assume the data
            range is from 4.0 to 16.0, leaving a range of 12.0.  If MaxGrace is set to
            0.1, then 10% of the range, or 1.2 will be added to the maximum data value.
            The scale will then be ranged to cover at least 4.0 to 17.2.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.MinSpace">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.MinSpace"/>.
            </summary>
            <remarks> This is the minimum axis space allocation.
            This term, expressed in points (1/72 inch) and scaled according to <see cref="M:ZedGraph.PaneBase.CalcScaleFactor"/>
            for the <see cref="T:ZedGraph.GraphPane"/>, determines the minimum amount of space
            an axis must have between the <see cref="P:ZedGraph.GraphPane.AxisRect"/> and the
            <see cref="P:ZedGraph.PaneBase.PaneRect"/>.  This minimum space
            applies whether <see cref="P:ZedGraph.Axis.IsVisible"/> is true or false.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.TicSize">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.TicSize"/>.
            </summary>
            <remarks> The length of the <see cref="T:ZedGraph.Axis"/> major tic marks, expressed in points
            (1/72nd inch).
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.MinorTicSize">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.MinorTicSize"/>.
            </summary>
            <remarks> The length of the <see cref="T:ZedGraph.Axis"/> minor tic marks, expressed in points
            (1/72nd inch).
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsTic">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsTic"/>.
            </summary>
            <remarks> Determines whether or not the <see cref="T:ZedGraph.Axis"/> major tics (where the
            scale labels are located) will be displayed.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsMinorTic">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsMinorTic"/>.
            </summary>
            <remarks> Determines whether or not the <see cref="T:ZedGraph.Axis"/> minor tics
            will be displayed.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsInsideTic">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsInsideTic"/>.
            </summary>
            <remarks> This value determines whether or not the major inside tic marks
            are shown.  These are the tic marks on the inside of the <see cref="T:ZedGraph.Axis"/> border.
            The major tic spacing is controlled by <see cref="P:ZedGraph.Axis.Step"/>.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsOppositeTic">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsOppositeTic"/>.
            </summary>
            <remarks> This value determines whether or not the major opposite tic marks
            are shown.  These are the tic marks on the inside of the <see cref="T:ZedGraph.Axis"/> border on
            the opposite side from the axis.
            The major tic spacing is controlled by <see cref="P:ZedGraph.Axis.Step"/>.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsMinorInsideTic">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsMinorInsideTic"/>.
            </summary>
            <remarks> This value determines whether or not the minor inside tic marks
            are shown.  These are the tic marks on the inside of the <see cref="T:ZedGraph.Axis"/> border.
            The minor tic spacing is controlled by <see cref="P:ZedGraph.Axis.MinorStep"/>.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsMinorOppositeTic">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsMinorOppositeTic"/>.
            </summary>
            <remarks> This value determines whether or not the minor opposite tic marks
            are shown.  These are the tic marks on the inside of the <see cref="T:ZedGraph.Axis"/> border on
            the opposite side from the axis.
            The minor tic spacing is controlled by <see cref="P:ZedGraph.Axis.MinorStep"/>.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsTicsBetweenLabels">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsTicsBetweenLabels"/>.
            </summary>
            <remarks> This property determines whether or not the major tics will be drawn
            inbetween the labels, rather than right at the labels.  Note that this setting is only
            applicable if <see cref="P:ZedGraph.Axis.Type"/> = <see cref="F:ZedGraph.AxisType.Text"/>.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.TicPenWidth">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.TicPenWidth"/>.
            </summary>
            <remarks> This property determines the pen width to be used when drawing the tic marks for
            this <see cref="T:ZedGraph.Axis"/>.  The pen width is expressed in points (1/72nd inch).
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsShowGrid">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsShowGrid"/>.
            </summary>
            <remarks> This property determines if the major <see cref="T:ZedGraph.Axis"/> gridlines
            (at each labeled value) will be visible.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsZeroLine">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsZeroLine"/>.
            </summary>
            <remarks> This boolean value that determines if a line will be drawn at the
            zero value for the axis.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.GridDashOn">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.GridDashOn"/>.
            </summary>
            <remarks> This is the distance,
            in points (1/72 inch), of the dash segments that make up the dashed grid lines.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.GridDashOff">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.GridDashOff"/>.
            </summary>
            <remarks> This is the distance,
            in points (1/72 inch), of the spaces between the dash segments that make up
            the dashed grid lines.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.GridPenWidth">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.GridPenWidth"/>.
            </summary>
            <remarks> The pen width used for drawing the grid lines, expressed in points (1/72nd inch).
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsShowMinorGrid">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsShowMinorGrid"/>.
            </summary>
            <remarks> Determines if the minor <see cref="T:ZedGraph.Axis"/> gridlines
            (in between each labeled value) will be visible
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.MinorGridDashOn">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.MinorGridDashOn"/>.
            </summary>
            <remarks> This is the distance,
            in points (1/72 inch), of the dash segments that make up the dashed minor grid lines.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.MinorGridDashOff">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.MinorGridDashOff"/>.
            </summary>
            <remarks> This is the distance,
            in points (1/72 inch), of the spaces between the dash segments that make up
            the dashed minor grid lines.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.MinorGridPenWidth">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.MinorGridPenWidth"/>.
            </summary>
            <remarks> The pen width used for drawing the minor grid lines, expressed in points (1/72nd inch).
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.MinorGridColor">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.MinorGridColor"/>.
            </summary>
            <remarks> The <see cref="T:System.Drawing.Color"/> to use for drawing this
            <see cref="T:ZedGraph.Axis"/> minor grid.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsVisible">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsVisible"/>.
            </summary>
            <remarks> Determines whether or not the <see cref="T:ZedGraph.Axis"/> is shown.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsReverse">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsReverse"/>.
            </summary>
            <remarks> Determines if the scale values are reversed for this <see cref="T:ZedGraph.Axis"/>.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.Type">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.Type"/>.
            </summary>
            <remarks> Determines the <see cref="T:ZedGraph.AxisType"/> for this <see cref="T:ZedGraph.Axis"/>.
            The type can be either <see cref="F:ZedGraph.AxisType.Linear"/>,
            <see cref="F:ZedGraph.AxisType.Log"/>, <see cref="F:ZedGraph.AxisType.Date"/>,
            or <see cref="F:ZedGraph.AxisType.Text"/>.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsOmitMag">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsOmitMag"/>.
            </summary>
            <remarks> This property controls whether or not the magnitude factor (power of 10) for
            this scale will be included in the label.
            For large scale values, a "magnitude" value (power of 10) is automatically
            used for scaling the graph.  This magnitude value is automatically appended
            to the end of the Axis <see cref="P:ZedGraph.Axis.Title"/> (e.g., "(10^4)") to indicate
            that a magnitude is in use.  This property controls whether or not the
            magnitude is included in the title.  Note that it only affects the axis
            title; a magnitude value may still be used even if it is not shown in the title.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsShowTitle">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsShowTitle"/>.
            </summary>
            <remarks> Determines whether or not the <see cref="T:ZedGraph.Axis"/>
            <see cref="P:ZedGraph.Axis.Title"/> will be displayed.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsUseTenPower">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsUseTenPower"/>.
            </summary>
            <remarks> Determines if powers-of-ten notation will be used for the numeric value labels.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.IsPreventLabelOverlap">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.IsPreventLabelOverlap"/>.
            </summary>
            <remarks> This <see cref="T:System.Boolean"/> value determines if ZedGraph will check to
            see if the <see cref="T:ZedGraph.Axis"/> scale labels are close enough to overlap.  If so,
            ZedGraph will adjust the step size to prevent overlap.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.ScaleFormatAuto">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.ScaleFormatAuto"/>.
            </summary>
            <remarks> Determines whether or not the scale label format <see cref="P:ZedGraph.Axis.ScaleFormat"/>
            is determined automatically based on the range of data values.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.ScaleFormat">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.ScaleFormat"/>.
            </summary>
            <remarks> The format of the <see cref="T:ZedGraph.Axis"/> tic labels.
            This property is only used if the <see cref="P:ZedGraph.ZedGraphWebAxis.Type"/> is set to <see cref="F:ZedGraph.AxisType.Date"/>.
            This property may be set automatically by ZedGraph, depending on the state of
            <see cref="P:ZedGraph.Axis.ScaleFormatAuto"/>.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.ScaleAlign">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.ScaleAlign"/>.
            </summary>
            <remarks> Controls the alignment of the <see cref="T:ZedGraph.Axis"/> tic labels.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.NumDecAuto">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.NumDecAuto"/>.
            </summary>
            <remarks> Determines whether or not the number of decimal places for value
            labels <see cref="P:ZedGraph.Axis.NumDec"/> is determined automatically based
            on the magnitudes of the scale values.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.NumDec">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.NumDec"/>.
            </summary>
            <remarks> The number of decimal places displayed for axis value labels.
            This value can be determined automatically depending on the state of
            <see cref="P:ZedGraph.Axis.NumDecAuto"/>.  If this value is set manually by the user,
            then <see cref="P:ZedGraph.Axis.NumDecAuto"/> will also be set to false.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.ScaleMag">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.ScaleMag"/>.
            </summary>
            <remarks> The magnitude multiplier for scale values.
            This is used to limit
            the size of the displayed value labels.  For example, if the value
            is really 2000000, then the graph will display 2000 with a 10^3
            magnitude multiplier.  This value can be determined automatically
            depending on the state of <see cref="P:ZedGraph.Axis.ScaleMagAuto"/>.
            If this value is set manually by the user,
            then <see cref="P:ZedGraph.Axis.ScaleMagAuto"/> will also be set to false.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.ScaleMagAuto">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.ScaleMagAuto"/>.
            </summary>
            <remarks> Determines whether the <see cref="P:ZedGraph.Axis.ScaleMag"/> value will be set
            automatically based on the data, or manually by the user.
            If the user manually sets the <see cref="P:ZedGraph.Axis.ScaleMag"/> value, then this
            flag will be set to false.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.ScaleFontSpec">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.ScaleFontSpec"/>.
            </summary>
            <remarks> Gets a reference to the <see cref="T:ZedGraph.FontSpec"/> class used to render
            the scale values.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebAxis.TitleFontSpec">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Axis.TitleFontSpec"/>.
            </summary>
            <remarks> Gets a reference to the <see cref="T:ZedGraph.FontSpec"/> class used to render
            the <see cref="P:ZedGraph.Axis.Title"/>
            </remarks>
        </member>
        <member name="M:ZedGraph.ZedGraphWebXAxis.ToString">
            <summary>
            Identifies <see cref="T:ZedGraph.XAxis"/> by the <see cref="P:ZedGraph.Axis.Title"/> value
            </summary>
            <returns>A string containing "XAxis: title", where 'title' is the
            <see cref="P:ZedGraph.Axis.Title"/> property of the <see cref="T:ZedGraph.XAxis"/>
            </returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebXAxis.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphWebYAxis">
            <summary>
            Web control state management class for a <see cref="T:ZedGraph.YAxis"/> object
            </summary>
            <author>Darren Martz</author>	
        </member>
        <member name="M:ZedGraph.ZedGraphWebYAxis.ToString">
            <summary>
            Identifies <see cref="T:ZedGraph.YAxis"/> by the <see cref="P:ZedGraph.Axis.Title"/> value
            </summary>
            <returns>A string containing "YAxis: title", where 'title' is the
            <see cref="P:ZedGraph.Axis.Title"/> property of the <see cref="T:ZedGraph.YAxis"/>
            </returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebYAxis.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphWebY2Axis">
            <summary>
            Web control state management class for a <see cref="T:ZedGraph.Y2Axis"/> object
            </summary>
            <author>Darren Martz</author>	
        </member>
        <member name="M:ZedGraph.ZedGraphWebY2Axis.ToString">
            <summary>
            Identifies <see cref="T:ZedGraph.Y2Axis"/> by the <see cref="P:ZedGraph.Axis.Title"/> value
            </summary>
            <returns>A string containing "Y2Axis: title", where 'title' is the
            <see cref="P:ZedGraph.Axis.Title"/> property of the <see cref="T:ZedGraph.Y2Axis"/>
            </returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebY2Axis.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphWebLegend">
            <summary>
            Web control state management class for a <see cref="T:ZedGraph.Legend"/> object
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebLegend.ToString">
            <summary>
            Identifies legend instance
            </summary>
            <returns>Always returns the string "Legend".</returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebLegend.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebLegend.CopyTo(ZedGraph.Legend)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebLegend"/> to the specified
            <see cref="T:ZedGraph.Legend"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.Legend"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLegend.Location">
            <summary>
            Proxy property that gets the value of <see cref="P:ZedGraph.Legend.Location"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLegend.FontSpec">
            <summary>
            Proxy property that gets the value of <see cref="P:ZedGraph.Legend.FontSpec"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLegend.Fill">
            <summary>
            Proxy property that gets the value of <see cref="P:ZedGraph.Legend.Fill"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLegend.Border">
            <summary>
            Proxy property that gets the value of <see cref="P:ZedGraph.Legend.Border"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLegend.Rect">
            <summary>
            Proxy property that gets the value of <see cref="P:ZedGraph.Legend.Rect"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLegend.IsVisible">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Legend.IsVisible"/>.
            </summary>
            <remarks> This property shows or hides the <see cref="T:ZedGraph.Legend"/> entirely.
            </remarks>
            <value> true to show the <see cref="T:ZedGraph.Legend"/>, false to hide it </value>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLegend.IsHStack">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Legend.IsHStack"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLegend.Position">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Legend.Position"/>.
            </summary>
            <remarks> Sets or gets the location of the <see cref="T:ZedGraph.Legend"/> on the
            <see cref="T:ZedGraph.GraphPane"/> using the <see cref="T:ZedGraph.LegendPos"/> enum type
            </remarks>
        </member>
        <member name="T:ZedGraph.ZedGraphWebFontSpec">
            <summary>
            Web control state management class for a <see cref="T:ZedGraph.FontSpec"/> object
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebFontSpec.ToString">
            <summary>
            Identifies fontspec instance
            </summary>
            <returns>Always returns the string "FontSpec".</returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebFontSpec.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebFontSpec.CopyTo(ZedGraph.FontSpec)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebFontSpec"/> to the specified
            <see cref="T:ZedGraph.FontSpec"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.FontSpec"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFontSpec.Angle">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.FontSpec.Angle"/>.
            </summary>
            <remarks> The angle at which this <see cref="T:ZedGraph.FontSpec"/> object is drawn.
            </remarks>
            <value>The angle of the font, measured in anti-clockwise degrees from
            horizontal.  Negative values are permitted.</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFontSpec.Size">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.FontSpec.Size"/>.
            </summary>
            <remarks> The size of the font for this <see cref="T:ZedGraph.FontSpec"/> object.
            </remarks>
            <value>The size of the font, measured in points (1/72 inch).</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFontSpec.Family">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.FontSpec.Family"/>.
            </summary>
            <remarks> The font family name for this <see cref="T:ZedGraph.FontSpec"/>.
            </remarks>
            <value>A text string with the font family name, e.g., "Arial"</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFontSpec.FontColor">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.FontSpec.FontColor"/>.
            </summary>
            <remarks> The color of the font characters for this <see cref="T:ZedGraph.FontSpec"/>.
            Note that the border and background
            colors are set using the <see cref="P:ZedGraph.Border.Color"/> and
            <see cref="P:ZedGraph.Fill.Color"/> properties, respectively.
            </remarks>
            <value>A system <see cref="T:System.Drawing.Color"/> reference.</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFontSpec.StringAlignment">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.FontSpec.StringAlignment"/>.
            </summary>
            <remarks> Determines the alignment with which this
            <see cref="T:ZedGraph.FontSpec"/> object is drawn.  This alignment really only
            affects multi-line strings.
            </remarks>
            <value>A <see cref="P:ZedGraph.ZedGraphWebFontSpec.StringAlignment"/> enumeration.</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFontSpec.IsBold">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.FontSpec.IsBold"/>.
            </summary>
            <remarks> Determines whether this <see cref="T:ZedGraph.FontSpec"/> is
            drawn with bold typeface.
            </remarks>
            <value>A boolean value, true for bold, false for normal</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFontSpec.IsItalic">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.FontSpec.IsItalic"/>.
            </summary>
            <remarks> Determines whether this <see cref="T:ZedGraph.FontSpec"/> is
            drawn with an italic typeface.
            </remarks>
            <value>A boolean value, true for italic, false for normal</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFontSpec.IsUnderline">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.FontSpec.IsUnderline"/>.
            </summary>
            <remarks> Determines whether this <see cref="T:ZedGraph.FontSpec"/> is
            drawn with an underline typeface.
            </remarks>
            <value>A boolean value, true for underline, false for normal</value>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFontSpec.Border">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebBorder"/> object for
            this <see cref="T:ZedGraph.FontSpec"/>.
            </summary>
            <seealso cref="T:ZedGraph.Border"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebFontSpec.Fill">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebFill"/> object for
            this <see cref="T:ZedGraph.FontSpec"/>.
            </summary>
            <seealso cref="T:ZedGraph.Fill"/>
        </member>
        <member name="T:ZedGraph.ZedGraphWebRect">
            <summary>
            Rectangle class for a <see cref="T:ZedGraph.FontSpec"/> object
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebRect.ToString">
            <summary>
            Identifies fontspec instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebRect.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebRect.CopyTo(System.Drawing.RectangleF)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebRect"/> to the specified
            <see cref="T:System.Drawing.RectangleF"/> object.
            </summary>
            <param name="item">The destination <see cref="T:System.Drawing.RectangleF"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebRect.Height">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:System.Drawing.RectangleF.Height"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebRect.Width">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:System.Drawing.RectangleF.Width"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebRect.Y">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:System.Drawing.RectangleF.Y"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebRect.X">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:System.Drawing.RectangleF.X"/>
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphWebSize">
            <summary>
            Size class for a <see cref="T:ZedGraph.FontSpec"/> object
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebSize.ToString">
            <summary>
            Identifies fontspec instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebSize.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebSize.CopyTo(System.Drawing.SizeF)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebSize"/> to the specified
            <see cref="T:System.Drawing.SizeF"/> object.
            </summary>
            <param name="item">The destination <see cref="T:System.Drawing.SizeF"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebSize.Height">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:System.Drawing.SizeF.Height"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebSize.Width">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:System.Drawing.SizeF.Width"/>
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphWebPoint">
            <summary>
            Point class for a <see cref="T:ZedGraph.FontSpec"/> object
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebPoint.ToString">
            <summary>
            Identifies fontspec instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebPoint.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebPoint.CopyTo(System.Drawing.PointF)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebPoint"/> to the specified
            <see cref="T:System.Drawing.PointF"/> object.
            </summary>
            <param name="item">The destination <see cref="T:System.Drawing.PointF"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebPoint.X">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:System.Drawing.PointF.X"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebPoint.Y">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:System.Drawing.PointF.Y"/>
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphWebTextItem">
            <summary>
            Baseclass for graph items in the web control
            <seealso cref="T:ZedGraph.GraphItem"/>
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebTextItem.ToString">
            <summary>
            Identifies curve item by the labels value
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebTextItem.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebTextItem.CopyTo(ZedGraph.TextItem)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebTextItem"/> to the specified
            <see cref="T:ZedGraph.TextItem"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.TextItem"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebTextItem.Text">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.TextItem.Text"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebTextItem.LayoutArea">
            <summary>
            Proxy property that gets the value of <see cref="P:ZedGraph.TextItem.LayoutArea"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebTextItem.FontSpec">
            <summary>
            Proxy property that gets the value of <see cref="P:ZedGraph.TextItem.FontSpec"/>
            </summary>
        </member>
        <member name="T:ZedGraph.ZedGraphWebArrowItem">
            <summary>
            Baseclass for graph items in the web control
            <seealso cref="T:ZedGraph.GraphItem"/>
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebArrowItem.ToString">
            <summary>
            Identifies curve item by the labels value
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebArrowItem.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebArrowItem.CopyTo(ZedGraph.ArrowItem)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebArrowItem"/> to the specified
            <see cref="T:ZedGraph.ArrowItem"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.ArrowItem"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebArrowItem.Size">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.ArrowItem.Size"/>.
            </summary>
            <remarks> The size of the arrowhead, expressed in points (1/72nd inch).
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebArrowItem.PenWidth">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.ArrowItem.PenWidth"/>.
            </summary>
            <remarks> The width of the pen, expressed in points (1/72nd inch), used to draw the
            arrow line segment.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebArrowItem.Color">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.ArrowItem.Color"/>.
            </summary>
            <remarks> The <see cref="T:System.Drawing.Color"/> value used to draw the <see cref="T:ZedGraph.ArrowItem"/>.
            </remarks>
        </member>
        <member name="P:ZedGraph.ZedGraphWebArrowItem.IsArrowHead">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.ArrowItem.IsArrowHead"/>.
            </summary>
            <remarks> Determines whether or not an arrowhead will be draw.  If false, only a line segment
            will be drawn.
            </remarks>
        </member>
        <member name="T:ZedGraph.ZedGraphWebImageItem">
            <summary>
            Baseclass for graph items in the web control
            <seealso cref="T:ZedGraph.GraphItem"/>
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebImageItem.ToString">
            <summary>
            Identifies curve item by the labels value
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebImageItem.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebImageItem.CopyTo(ZedGraph.ImageItem)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebImageItem"/> to the specified
            <see cref="T:ZedGraph.ImageItem"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.ImageItem"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebImageItem.ImageUrl">
            <summary>
            The <see cref="T:System.String"/> url reference from which to get the <see cref="T:System.Drawing.Image"/>
            data for this <see cref="T:ZedGraph.ImageItem"/>.
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebImageItem.IsScaled">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.ImageItem.IsScaled"/>.
            </summary>
            <remarks>
            Determines if the image will be scaled to the output rectangle (see <see cref="T:ZedGraph.Location"/>).
            </remarks>
            <value>true to scale the image, false to draw the image unscaled, but clipped
            to the destination rectangle</value>
        </member>
        <member name="T:ZedGraph.ZedGraphWebBoxItem">
            <summary>
            Baseclass for graph items in the web control
            <seealso cref="T:ZedGraph.GraphItem"/>
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebBoxItem.ToString">
            <summary>
            Identifies curve item by the labels value
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebBoxItem.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebBoxItem.CopyTo(ZedGraph.BoxItem)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebBoxItem"/> to the specified
            <see cref="T:ZedGraph.BoxItem"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.BoxItem"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebBoxItem.Border">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebBorder"/> object for
            this <see cref="T:ZedGraph.BarItem"/>.
            </summary>
            <seealso cref="T:ZedGraph.Border"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebBoxItem.Fill">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebFill"/> object for
            this <see cref="T:ZedGraph.BarItem"/>.
            </summary>
            <seealso cref="T:ZedGraph.Fill"/>
        </member>
        <member name="T:ZedGraph.ZedGraphWebEllipseItem">
            <summary>
            Baseclass for graph items in the web control
            <seealso cref="T:ZedGraph.GraphItem"/>
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebEllipseItem.ToString">
            <summary>
            Identifies curve item by the labels value
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebEllipseItem.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebEllipseItem.CopyTo(ZedGraph.EllipseItem)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebEllipseItem"/> to the specified
            <see cref="T:ZedGraph.EllipseItem"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.EllipseItem"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebEllipseItem.Border">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebBorder"/> object for
            this <see cref="T:ZedGraph.BarItem"/>.
            </summary>
            <seealso cref="T:ZedGraph.Border"/>
        </member>
        <member name="P:ZedGraph.ZedGraphWebEllipseItem.Fill">
            <summary>
            Proxy property that gets or sets the <see cref="T:ZedGraph.ZedGraphWebFill"/> object for
            this <see cref="T:ZedGraph.BarItem"/>.
            </summary>
            <seealso cref="T:ZedGraph.Fill"/>
        </member>
        <member name="T:ZedGraph.ZedGraphWebLocation">
            <summary>
            Location class for a <see cref="T:ZedGraph.FontSpec"/> object
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.ZedGraphWebLocation.ToString">
            <summary>
            Identifies location instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZedGraph.ZedGraphWebLocation.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZedGraphWebLocation.CopyTo(ZedGraph.Location)">
            <summary>
            Copy the properties of this <see cref="T:ZedGraph.ZedGraphWebLocation"/> to the specified
            <see cref="T:ZedGraph.Location"/> object.
            </summary>
            <param name="item">The destination <see cref="T:ZedGraph.Location"/> object</param>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLocation.Rect">
            <summary>
            Proxy property that gets the value of <see cref="P:ZedGraph.Location.Rect"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLocation.TopLeft">
            <summary>
            Proxy property that gets the value of <see cref="P:ZedGraph.Location.TopLeft"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLocation.BottomRight">
            <summary>
            Proxy property that gets the value of <see cref="P:ZedGraph.Location.BottomRight"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLocation.Height">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Location.Height"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLocation.Width">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Location.Width"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLocation.Y">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Location.Y"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLocation.X">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Location.X"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLocation.Y1">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Location.Y1"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLocation.X1">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Location.X1"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLocation.AlignH">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Location.AlignH"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLocation.AlignV">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Location.AlignV"/>
            </summary>
        </member>
        <member name="P:ZedGraph.ZedGraphWebLocation.CoordinateFrame">
            <summary>
            Proxy property that gets or sets the value of <see cref="P:ZedGraph.Location.CoordinateFrame"/>
            </summary>
        </member>
        <member name="T:ZedGraph.GenericViewStateAssistant">
            <summary>
            Assists in managing viewstate sub-objects. The host of the assistant is
            responsible for managing an array within the statebag. This assistant
            helps deal with that by simply registering each hosted object with a
            unique code value. It also simplies the on demand creation of the sub object
            by creating the instance only when the getobject method is called.
            </summary>
            <author>Darren Martz</author>
        </member>
        <member name="F:ZedGraph.GenericViewStateAssistant.list">
            <summary>
            Array of child class instances managed in the viewstate
            </summary>
        </member>
        <member name="M:ZedGraph.GenericViewStateAssistant.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:ZedGraph.GenericViewStateAssistant.Register(System.Char,System.Type)">
            <summary>
            Registers a code with a datatype in the assistance. Once registered
            the datatype will be available for retrievable using the same code value.
            </summary>
            <param name="code">Type identifier</param>
            <param name="type">Object type being hosted</param>
        </member>
        <member name="M:ZedGraph.GenericViewStateAssistant.GetValue(System.Char,System.Boolean)">
            <summary>
            Retrieves instance based on the registered code and datatype.
            If the value is null, the datatype is used to create a new instance
            that is cached in the assistant node.
            </summary>
            <param name="code">code to search on</param>
            <param name="IsTrackingViewState">Indicates if the parent is currently
            tracking viewstate</param>
            <returns>class instance</returns>
        </member>
        <member name="M:ZedGraph.GenericViewStateAssistant.GetValue(System.Int32,System.Boolean)">
            <summary>
            Retrieves the object instance for an assistant node given an
            index value.
            </summary>
            <param name="index">Index value in the assistants node collection</param>
            <param name="IsTrackingViewState">Indicates if the parent is currently
            tracking viewstate changes</param>
            <returns>Object instance based on the node found in the collection</returns>
        </member>
        <member name="M:ZedGraph.GenericViewStateAssistant.SaveViewState(System.Object)">
            <summary>
            Returns the current viewstate of every object hosted in
            the assistants collection.
            </summary>
            <param name="BaseState">parents viewstate bag</param>
            <returns>Combined saved viewstate for the parent and all hosted
            objects in the assistant collection</returns>
        </member>
        <member name="M:ZedGraph.GenericViewStateAssistant.LoadViewState(System.Object,System.Boolean)">
            <summary>
            Loads the viewstate from the provided statebag into each of the
            registered objects hosted in the assistants collection.
            </summary>
            <param name="savedState">statebag provided by parent</param>
            <param name="IsTrackingViewState">indicates if the parent is currently
            tracking viewstate changes</param>
            <returns>The parents individual statebag</returns>
        </member>
        <member name="M:ZedGraph.GenericViewStateAssistant.TrackViewState">
            <summary>
            Triggers the assistant to begin tracking viewstate changes
            </summary>
        </member>
        <member name="T:ZedGraph.GenericViewStateAssistant.AssistNode">
            <summary>
            Internal child class instance node, identified by a code,
            its datatype, and the class instance.
            </summary>
        </member>
        <member name="M:ZedGraph.GenericViewStateAssistant.AssistNode.#ctor(System.Char,System.Type)">
            <summary>
            Creates an assistant node given a character key and
            the hosted class type.
            </summary>
            <param name="code">Identifier code</param>
            <param name="type">Class data type hosted by the node</param>
        </member>
        <member name="F:ZedGraph.GenericViewStateAssistant.AssistNode.Code">
            <summary>
            Code to uniquely identify this node entry
            </summary>
        </member>
        <member name="F:ZedGraph.GenericViewStateAssistant.AssistNode.Key">
            <summary>
            Object type identifying hosted value type.
            </summary>
        </member>
        <member name="F:ZedGraph.GenericViewStateAssistant.AssistNode.Value">
            <summary>
            Object instance based on Key definition. May be null
            </summary>
        </member>
        <member name="T:ZedGraph.GenericCollectionItemSchema">
            <summary>
            Identifies state management items by a unique code and its datatype. The code is defined 
            in the implementation of a GenericCollection class constructor.
            </summary>
            <author>Darren Martz</author>
            <version> $ </version>
        </member>
        <member name="M:ZedGraph.GenericCollectionItemSchema.#ctor(System.Char,System.Type)">
            <summary>
            Default constructor
            </summary>
            <param name="c">Single character code used to identify the state item datatype</param>
            <param name="t">Item datatype</param>
        </member>
        <member name="F:ZedGraph.GenericCollectionItemSchema.code">
            <summary>
            The state item datatype character code
            </summary>
        </member>
        <member name="F:ZedGraph.GenericCollectionItemSchema.type">
            <summary>
            The state item datatype
            </summary>
        </member>
        <member name="T:ZedGraph.GenericCollectionEditor">
            <summary>
            Provides a few hints to the development editor on how to create
            child items in the collection. This class uses the schema defined
            inside the collection implementation.
            </summary>
            <example>
            public class MyCollection : GenericCollection
            {
            	public MyCollection() : base()
            	{
            		Schema = new GenericCollectionItemSchema[1];
            		Schema[0].code = 'b';
            		Schema[1].type = typeof(MyItem);
            	}
            	public void Add(MyItem item)
            	{
            		if ( null != item ) ListAdd( item );
            		else throw new ArgumentException("parameter cannot be null","item");
            	}	
            	
            	[NotifyParentProperty(true)]
            	public ZedGraphWebCurveItem this [int index]
            	{
            		get { return (MyItem)ListGet(index); }
            		set { ListInsert(index,value); }
            	}
            }
            </example>
            <author>Darren Martz</author>
        </member>
        <member name="M:ZedGraph.GenericCollectionEditor.#ctor(System.Type)">
            <summary>
            Default constructor based on CollectionEditor contructor
            </summary>
            <param name="type">Datetype of the collection to manage</param>
        </member>
        <member name="M:ZedGraph.GenericCollectionEditor.CreateNewItemTypes">
            <summary>
            Informs the visual editor what kinds of classes are accepted as elements
            within the collection.
            </summary>
            <returns>Array of datatypes supported as items within the collection</returns>
        </member>
        <member name="T:ZedGraph.ScaleState">
            <summary>
            A class that captures an <see cref="T:ZedGraph.Axis"/> scale range.
            </summary>
            <remarks>This structure is used by the <see cref="T:ZedGraph.ZoomState"/> class to store
            <see cref="T:ZedGraph.Axis"/> scale range settings in a collection for later retrieval.
            The class stores the <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>,
            <see cref="P:ZedGraph.Axis.MinorStep"/>, and <see cref="P:ZedGraph.Axis.Step"/> properties, along with
            the corresponding auto-scale settings: <see cref="P:ZedGraph.Axis.MinAuto"/>,
            <see cref="P:ZedGraph.Axis.MaxAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            and <see cref="P:ZedGraph.Axis.StepAuto"/>.</remarks>
            <author> John Champion </author>
            <version> $Revision: 3.3 $ $Date: 2005/03/05 07:24:10 $ </version>
        </member>
        <member name="F:ZedGraph.ScaleState.min">
            <summary>
            The axis range data for <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>,
            <see cref="P:ZedGraph.Axis.MinorStep"/>, and <see cref="P:ZedGraph.Axis.Step"/>
            </summary>
        </member>
        <member name="F:ZedGraph.ScaleState.minorStep">
            <summary>
            The axis range data for <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>,
            <see cref="P:ZedGraph.Axis.MinorStep"/>, and <see cref="P:ZedGraph.Axis.Step"/>
            </summary>
        </member>
        <member name="F:ZedGraph.ScaleState.step">
            <summary>
            The axis range data for <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>,
            <see cref="P:ZedGraph.Axis.MinorStep"/>, and <see cref="P:ZedGraph.Axis.Step"/>
            </summary>
        </member>
        <member name="F:ZedGraph.ScaleState.max">
            <summary>
            The axis range data for <see cref="P:ZedGraph.Axis.Min"/>, <see cref="P:ZedGraph.Axis.Max"/>,
            <see cref="P:ZedGraph.Axis.MinorStep"/>, and <see cref="P:ZedGraph.Axis.Step"/>
            </summary>
        </member>
        <member name="F:ZedGraph.ScaleState.minAuto">
            <summary>
            The status of <see cref="P:ZedGraph.Axis.MinAuto"/>,
            <see cref="P:ZedGraph.Axis.MaxAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            and <see cref="P:ZedGraph.Axis.StepAuto"/>
            </summary>
        </member>
        <member name="F:ZedGraph.ScaleState.minorStepAuto">
            <summary>
            The status of <see cref="P:ZedGraph.Axis.MinAuto"/>,
            <see cref="P:ZedGraph.Axis.MaxAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            and <see cref="P:ZedGraph.Axis.StepAuto"/>
            </summary>
        </member>
        <member name="F:ZedGraph.ScaleState.stepAuto">
            <summary>
            The status of <see cref="P:ZedGraph.Axis.MinAuto"/>,
            <see cref="P:ZedGraph.Axis.MaxAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            and <see cref="P:ZedGraph.Axis.StepAuto"/>
            </summary>
        </member>
        <member name="F:ZedGraph.ScaleState.maxAuto">
            <summary>
            The status of <see cref="P:ZedGraph.Axis.MinAuto"/>,
            <see cref="P:ZedGraph.Axis.MaxAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            and <see cref="P:ZedGraph.Axis.StepAuto"/>
            </summary>
        </member>
        <member name="F:ZedGraph.ScaleState.scaleFormatAuto">
            <summary>
            The status of <see cref="P:ZedGraph.Axis.MinAuto"/>,
            <see cref="P:ZedGraph.Axis.MaxAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            and <see cref="P:ZedGraph.Axis.StepAuto"/>
            </summary>
        </member>
        <member name="F:ZedGraph.ScaleState.numDecAuto">
            <summary>
            The status of <see cref="P:ZedGraph.Axis.MinAuto"/>,
            <see cref="P:ZedGraph.Axis.MaxAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            and <see cref="P:ZedGraph.Axis.StepAuto"/>
            </summary>
        </member>
        <member name="F:ZedGraph.ScaleState.scaleMagAuto">
            <summary>
            The status of <see cref="P:ZedGraph.Axis.MinAuto"/>,
            <see cref="P:ZedGraph.Axis.MaxAuto"/>, <see cref="P:ZedGraph.Axis.MinorStepAuto"/>,
            and <see cref="P:ZedGraph.Axis.StepAuto"/>
            </summary>
        </member>
        <member name="F:ZedGraph.ScaleState.minorUnit">
            <summary>
            The status of <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="P:ZedGraph.Axis.MinorUnit"/>
            </summary>
        </member>
        <member name="F:ZedGraph.ScaleState.majorUnit">
            <summary>
            The status of <see cref="P:ZedGraph.Axis.MajorUnit"/> and <see cref="P:ZedGraph.Axis.MinorUnit"/>
            </summary>
        </member>
        <member name="M:ZedGraph.ScaleState.#ctor(ZedGraph.Axis)">
            <summary>
            Construct a <see cref="T:ZedGraph.ScaleState"/> from the specified <see cref="T:ZedGraph.Axis"/>
            </summary>
            <param name="axis">The <see cref="T:ZedGraph.Axis"/> from which to collect the scale
            range settings.</param>
        </member>
        <member name="M:ZedGraph.ScaleState.#ctor(ZedGraph.ScaleState)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.ScaleState"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.ScaleState.ApplyScale(ZedGraph.Axis)">
            <summary>
            Copy the properties from this <see cref="T:ZedGraph.ScaleState"/> out to the specified <see cref="T:ZedGraph.Axis"/>.
            </summary>
            <param name="axis">The <see cref="T:ZedGraph.Axis"/> reference to which the properties should be
            copied</param>
        </member>
        <member name="M:ZedGraph.ScaleState.IsChanged(ZedGraph.Axis)">
            <summary>
            Determine if the state contained in this <see cref="T:ZedGraph.ScaleState"/> object is different from
            the state of the specified <see cref="T:ZedGraph.Axis"/>.
            </summary>
            <param name="axis">The <see cref="T:ZedGraph.Axis"/> object with which to compare states.</param>
            <returns>true if the states are different, false otherwise</returns>
        </member>
        <member name="T:ZedGraph.ZoomState">
            <summary>
            A class that captures all the scale range settings for a <see cref="T:ZedGraph.GraphPane"/>.
            </summary>
            <remarks>
            This class is used to store scale ranges in order to allow zooming out to
            prior scale range states.  <see cref="T:ZedGraph.ZoomState"/> objects are maintained in the
            <see cref="T:ZedGraph.ZoomStateStack"/> collection.  The <see cref="T:ZedGraph.ZoomState"/> object holds
            a <see cref="T:ZedGraph.ScaleState"/> object for each of the three axes; the <see cref="T:ZedGraph.XAxis"/>,
            the <see cref="T:ZedGraph.YAxis"/>, and the <see cref="T:ZedGraph.Y2Axis"/>.
            </remarks>
            <author> John Champion </author>
            <version> $Revision: 3.3 $ $Date: 2005/03/05 07:24:10 $ </version>
        </member>
        <member name="F:ZedGraph.ZoomState.xAxis">
            <summary>
            <see cref="T:ZedGraph.ScaleState"/> objects to store the state data from the axes.
            </summary>
        </member>
        <member name="F:ZedGraph.ZoomState.yAxis">
            <summary>
            <see cref="T:ZedGraph.ScaleState"/> objects to store the state data from the axes.
            </summary>
        </member>
        <member name="F:ZedGraph.ZoomState.y2Axis">
            <summary>
            <see cref="T:ZedGraph.ScaleState"/> objects to store the state data from the axes.
            </summary>
        </member>
        <member name="F:ZedGraph.ZoomState.type">
            <summary>
            An enum value indicating the type of adjustment being made to the
            scale range state.
            </summary>
        </member>
        <member name="M:ZedGraph.ZoomState.#ctor(ZedGraph.GraphPane,ZedGraph.ZoomState.StateType)">
            <summary>
            Construct a <see cref="T:ZedGraph.ZoomState"/> object from the scale ranges settings contained
            in the specified <see cref="T:ZedGraph.GraphPane"/>.
            </summary>
            <param name="pane">The <see cref="T:ZedGraph.GraphPane"/> from which to obtain the scale
            range values.
            </param>
            <param name="type">A <see cref="T:ZedGraph.ZoomState.StateType"/> enumeration that indicates whether
            this saved state is from a pan or zoom.</param>
        </member>
        <member name="M:ZedGraph.ZoomState.#ctor(ZedGraph.ZoomState)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.ZoomState"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.ZoomState.ApplyState(ZedGraph.GraphPane)">
            <summary>
            Copy the properties from this <see cref="T:ZedGraph.ZoomState"/> out to the specified <see cref="T:ZedGraph.GraphPane"/>.
            </summary>
            <param name="pane">The <see cref="T:ZedGraph.GraphPane"/> to which the scale range properties should be
            copied.</param>
        </member>
        <member name="M:ZedGraph.ZoomState.IsChanged(ZedGraph.GraphPane)">
            <summary>
            Determine if the state contained in this <see cref="T:ZedGraph.ZoomState"/> object is different from
            the state of the specified <see cref="T:ZedGraph.GraphPane"/>.
            </summary>
            <param name="pane">The <see cref="T:ZedGraph.GraphPane"/> object with which to compare states.</param>
            <returns>true if the states are different, false otherwise</returns>
        </member>
        <member name="P:ZedGraph.ZoomState.TypeString">
            <summary>
            Gets a string representing the type of adjustment that was made when this scale
            state was saved.
            </summary>
            <value>A string representation for the state change type; typically
            "Pan" or "Zoom".</value>
        </member>
        <member name="T:ZedGraph.ZoomState.StateType">
            <summary>
            An enumeration that describes whether a given state is the result of a Pan or Zoom
            operation.
            </summary>
        </member>
        <member name="F:ZedGraph.ZoomState.StateType.Zoom">
            <summary>
            Indicates the <see cref="T:ZedGraph.ZoomState"/> object is from a Zoom operation
            </summary>
        </member>
        <member name="F:ZedGraph.ZoomState.StateType.Pan">
            <summary>
            Indicates the <see cref="T:ZedGraph.ZoomState"/> object is from a Pan operation
            </summary>
        </member>
        <member name="T:ZedGraph.ZoomStateStack">
            <summary>
            A LIFO stack of prior <see cref="T:ZedGraph.ZoomState"/> objects, used to allow zooming out to prior
            states (of scale range settings).
            </summary>
            <author> John Champion </author>
            <version> $Revision: 3.3 $ $Date: 2005/03/05 07:24:10 $ </version>
        </member>
        <member name="M:ZedGraph.ZoomStateStack.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:ZedGraph.ZoomStateStack.#ctor(ZedGraph.ZoomStateStack)">
            <summary>
            The Copy Constructor
            </summary>
            <param name="rhs">The <see cref="T:ZedGraph.ZoomStateStack"/> object from which to copy</param>
        </member>
        <member name="M:ZedGraph.ZoomStateStack.Push(ZedGraph.GraphPane,ZedGraph.ZoomState.StateType)">
            <summary>
            Add the scale range information from the specified <see cref="T:ZedGraph.GraphPane"/> object as a
            new <see cref="T:ZedGraph.ZoomState"/> entry on the stack.
            </summary>
            <param name="pane">The <see cref="T:ZedGraph.GraphPane"/> object from which the scale range
            information should be copied.</param>
            <param name="type">A <see cref="T:ZedGraph.ZoomState.StateType"/> enumeration that indicates whether this
            state is the result of a zoom or pan operation.</param>
        </member>
        <member name="M:ZedGraph.ZoomStateStack.Push(ZedGraph.ZoomState)">
            <summary>
            Add the scale range information from the specified <see cref="T:ZedGraph.ZoomState"/> object as a
            new <see cref="T:ZedGraph.ZoomState"/> entry on the stack.
            </summary>
            <param name="state">The <see cref="T:ZedGraph.ZoomState"/> object to be placed on the stack.</param>
        </member>
        <member name="M:ZedGraph.ZoomStateStack.Pop(ZedGraph.GraphPane)">
            <summary>
            Pop a <see cref="T:ZedGraph.ZoomState"/> entry from the top of the stack, and apply the properties
            to the specified <see cref="T:ZedGraph.GraphPane"/> object.
            </summary>
            <param name="pane">The <see cref="T:ZedGraph.GraphPane"/> object to which the scale range
            information should be copied.</param>
        </member>
        <member name="P:ZedGraph.ZoomStateStack.IsEmpty">
            <summary>
            Public readonly property that indicates if the stack is empty
            </summary>
            <value>true for an empty stack, false otherwise</value>
        </member>
        <member name="P:ZedGraph.ZoomStateStack.Top">
            <summary>
            Gets a reference to the <see cref="T:ZedGraph.ZoomState"/> object at the top of the stack,
            without actually removing it from the stack.
            </summary>
            <value>A <see cref="T:ZedGraph.ZoomState"/> object reference, or null if the stack is empty.</value>
        </member>
    </members>
</doc>
